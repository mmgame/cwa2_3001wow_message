// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: 1100700_VipMessage.proto

#ifndef PROTOBUF_1100700_5fVipMessage_2eproto__INCLUDED
#define PROTOBUF_1100700_5fVipMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_1100700_5fVipMessage_2eproto();
void protobuf_AssignDesc_1100700_5fVipMessage_2eproto();
void protobuf_ShutdownFile_1100700_5fVipMessage_2eproto();

class GetVipinfoUp;
class GetVipinfoDown;

enum VipCommondIdEnum {
  _GetVipinfoUp = 1100701,
  _GetVipinfoDown = 1100702
};
bool VipCommondIdEnum_IsValid(int value);
const VipCommondIdEnum VipCommondIdEnum_MIN = _GetVipinfoUp;
const VipCommondIdEnum VipCommondIdEnum_MAX = _GetVipinfoDown;
const int VipCommondIdEnum_ARRAYSIZE = VipCommondIdEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* VipCommondIdEnum_descriptor();
inline const ::std::string& VipCommondIdEnum_Name(VipCommondIdEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    VipCommondIdEnum_descriptor(), value);
}
inline bool VipCommondIdEnum_Parse(
    const ::std::string& name, VipCommondIdEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VipCommondIdEnum>(
    VipCommondIdEnum_descriptor(), name, value);
}
// ===================================================================

class GetVipinfoUp : public ::google::protobuf::Message {
 public:
  GetVipinfoUp();
  virtual ~GetVipinfoUp();

  GetVipinfoUp(const GetVipinfoUp& from);

  inline GetVipinfoUp& operator=(const GetVipinfoUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVipinfoUp& default_instance();

  void Swap(GetVipinfoUp* other);

  // implements Message ----------------------------------------------

  GetVipinfoUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetVipinfoUp& from);
  void MergeFrom(const GetVipinfoUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GetVipinfoUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100700_5fVipMessage_2eproto();
  friend void protobuf_AssignDesc_1100700_5fVipMessage_2eproto();
  friend void protobuf_ShutdownFile_1100700_5fVipMessage_2eproto();

  void InitAsDefaultInstance();
  static GetVipinfoUp* default_instance_;
};
// -------------------------------------------------------------------

class GetVipinfoDown : public ::google::protobuf::Message {
 public:
  GetVipinfoDown();
  virtual ~GetVipinfoDown();

  GetVipinfoDown(const GetVipinfoDown& from);

  inline GetVipinfoDown& operator=(const GetVipinfoDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVipinfoDown& default_instance();

  void Swap(GetVipinfoDown* other);

  // implements Message ----------------------------------------------

  GetVipinfoDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetVipinfoDown& from);
  void MergeFrom(const GetVipinfoDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 experience = 2;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 2;
  inline ::google::protobuf::uint32 experience() const;
  inline void set_experience(::google::protobuf::uint32 value);

  // required uint32 awardState = 3;
  inline bool has_awardstate() const;
  inline void clear_awardstate();
  static const int kAwardStateFieldNumber = 3;
  inline ::google::protobuf::uint32 awardstate() const;
  inline void set_awardstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GetVipinfoDown)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_awardstate();
  inline void clear_has_awardstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 experience_;
  ::google::protobuf::uint32 awardstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_1100700_5fVipMessage_2eproto();
  friend void protobuf_AssignDesc_1100700_5fVipMessage_2eproto();
  friend void protobuf_ShutdownFile_1100700_5fVipMessage_2eproto();

  void InitAsDefaultInstance();
  static GetVipinfoDown* default_instance_;
};
// ===================================================================


// ===================================================================

// GetVipinfoUp

// -------------------------------------------------------------------

// GetVipinfoDown

// required uint32 level = 1;
inline bool GetVipinfoDown::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetVipinfoDown::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetVipinfoDown::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetVipinfoDown::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 GetVipinfoDown::level() const {
  return level_;
}
inline void GetVipinfoDown::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 experience = 2;
inline bool GetVipinfoDown::has_experience() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetVipinfoDown::set_has_experience() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetVipinfoDown::clear_has_experience() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetVipinfoDown::clear_experience() {
  experience_ = 0u;
  clear_has_experience();
}
inline ::google::protobuf::uint32 GetVipinfoDown::experience() const {
  return experience_;
}
inline void GetVipinfoDown::set_experience(::google::protobuf::uint32 value) {
  set_has_experience();
  experience_ = value;
}

// required uint32 awardState = 3;
inline bool GetVipinfoDown::has_awardstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetVipinfoDown::set_has_awardstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetVipinfoDown::clear_has_awardstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetVipinfoDown::clear_awardstate() {
  awardstate_ = 0u;
  clear_has_awardstate();
}
inline ::google::protobuf::uint32 GetVipinfoDown::awardstate() const {
  return awardstate_;
}
inline void GetVipinfoDown::set_awardstate(::google::protobuf::uint32 value) {
  set_has_awardstate();
  awardstate_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::VipCommondIdEnum>() {
  return ::VipCommondIdEnum_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_1100700_5fVipMessage_2eproto__INCLUDED
