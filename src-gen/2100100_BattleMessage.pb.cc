// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: 2100100_BattleMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "2100100_BattleMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BuffContextBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuffContextBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionStateContextBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionStateContextBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserEntityBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserEntityBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroEntityBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroEntityBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* MagicCDBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MagicCDBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* PetBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PetBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* BulletBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BulletBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrapBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrapBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* CoordinateBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CoordinateBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionTargetBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionTargetBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* MagicEffectBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MagicEffectBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* PerformerEffectBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PerformerEffectBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* MagicTrapBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MagicTrapBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* MagicPetBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MagicPetBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* MagicResaultBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MagicResaultBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrapTriggerBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrapTriggerBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttachBattleUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttachBattleUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttachBattleDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttachBattleDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncBattleUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncBattleUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncBattleDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncBattleDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleStepDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleStepDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* MagicActionUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MagicActionUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MagicActionDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MagicActionDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoveActionUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoveActionUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoveActionDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoveActionDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* IdleActionUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IdleActionUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* IdleActionDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IdleActionDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* NetDelayCheckUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetDelayCheckUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* NetDelayCheckDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NetDelayCheckDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeadDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeadDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrapTriggerDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrapTriggerDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleOverDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleOverDown_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BattleCommondIdEnum_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto() {
  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "2100100_BattleMessage.proto");
  GOOGLE_CHECK(file != NULL);
  BuffContextBean_descriptor_ = file->message_type(0);
  static const int BuffContextBean_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffContextBean, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffContextBean, buffkeyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffContextBean, time_),
  };
  BuffContextBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuffContextBean_descriptor_,
      BuffContextBean::default_instance_,
      BuffContextBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffContextBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuffContextBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuffContextBean));
  ActionStateContextBean_descriptor_ = file->message_type(1);
  static const int ActionStateContextBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionStateContextBean, statesubtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionStateContextBean, starttime_),
  };
  ActionStateContextBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActionStateContextBean_descriptor_,
      ActionStateContextBean::default_instance_,
      ActionStateContextBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionStateContextBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionStateContextBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActionStateContextBean));
  BattleBean_descriptor_ = file->message_type(2);
  static const int BattleBean_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleBean, battlekeyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleBean, currenttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleBean, currentstate_),
  };
  BattleBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BattleBean_descriptor_,
      BattleBean::default_instance_,
      BattleBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BattleBean));
  UserEntityBean_descriptor_ = file->message_type(3);
  static const int UserEntityBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEntityBean, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEntityBean, level_),
  };
  UserEntityBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserEntityBean_descriptor_,
      UserEntityBean::default_instance_,
      UserEntityBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEntityBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserEntityBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserEntityBean));
  PlayerBean_descriptor_ = file->message_type(4);
  static const int PlayerBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBean, userentitybean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBean, trooptype_),
  };
  PlayerBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayerBean_descriptor_,
      PlayerBean::default_instance_,
      PlayerBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayerBean));
  HeroEntityBean_descriptor_ = file->message_type(5);
  static const int HeroEntityBean_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEntityBean, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEntityBean, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEntityBean, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEntityBean, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEntityBean, star_),
  };
  HeroEntityBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroEntityBean_descriptor_,
      HeroEntityBean::default_instance_,
      HeroEntityBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEntityBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEntityBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroEntityBean));
  HeroBean_descriptor_ = file->message_type(6);
  static const int HeroBean_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, heroentitybean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, currentattrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, buffcontextbeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, actionstatecontextbeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, magiccdbeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, retinueskillid_),
  };
  HeroBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroBean_descriptor_,
      HeroBean::default_instance_,
      HeroBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroBean));
  MagicCDBean_descriptor_ = file->message_type(7);
  static const int MagicCDBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicCDBean, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicCDBean, time_),
  };
  MagicCDBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MagicCDBean_descriptor_,
      MagicCDBean::default_instance_,
      MagicCDBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicCDBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicCDBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MagicCDBean));
  PetBean_descriptor_ = file->message_type(8);
  static const int PetBean_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, sourceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, currentattrs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, buffcontextbeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, actionstatecontextbeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, magiccdbeans_),
  };
  PetBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PetBean_descriptor_,
      PetBean::default_instance_,
      PetBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PetBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PetBean));
  BulletBean_descriptor_ = file->message_type(9);
  static const int BulletBean_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BulletBean, effectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BulletBean, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BulletBean, sourceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BulletBean, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BulletBean, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BulletBean, actionstatecontextbeans_),
  };
  BulletBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BulletBean_descriptor_,
      BulletBean::default_instance_,
      BulletBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BulletBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BulletBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BulletBean));
  TrapBean_descriptor_ = file->message_type(10);
  static const int TrapBean_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapBean, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapBean, effectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapBean, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapBean, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapBean, sourceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapBean, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapBean, position_),
  };
  TrapBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrapBean_descriptor_,
      TrapBean::default_instance_,
      TrapBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrapBean));
  CoordinateBean_descriptor_ = file->message_type(11);
  static const int CoordinateBean_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordinateBean, c_),
  };
  CoordinateBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CoordinateBean_descriptor_,
      CoordinateBean::default_instance_,
      CoordinateBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordinateBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoordinateBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CoordinateBean));
  ActionTargetBean_descriptor_ = file->message_type(12);
  static const int ActionTargetBean_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTargetBean, targettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTargetBean, targetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTargetBean, areatarget_),
  };
  ActionTargetBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActionTargetBean_descriptor_,
      ActionTargetBean::default_instance_,
      ActionTargetBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTargetBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionTargetBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActionTargetBean));
  MagicEffectBean_descriptor_ = file->message_type(13);
  static const int MagicEffectBean_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicEffectBean, eid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicEffectBean, performereffectbeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicEffectBean, trapbean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicEffectBean, petbean_),
  };
  MagicEffectBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MagicEffectBean_descriptor_,
      MagicEffectBean::default_instance_,
      MagicEffectBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicEffectBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicEffectBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MagicEffectBean));
  PerformerEffectBean_descriptor_ = file->message_type(14);
  static const int PerformerEffectBean_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerformerEffectBean, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerformerEffectBean, values_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerformerEffectBean, effects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerformerEffectBean, createbuffs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerformerEffectBean, deletebuffs_),
  };
  PerformerEffectBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PerformerEffectBean_descriptor_,
      PerformerEffectBean::default_instance_,
      PerformerEffectBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerformerEffectBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PerformerEffectBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PerformerEffectBean));
  MagicTrapBean_descriptor_ = file->message_type(15);
  static const int MagicTrapBean_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicTrapBean, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicTrapBean, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicTrapBean, eid_),
  };
  MagicTrapBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MagicTrapBean_descriptor_,
      MagicTrapBean::default_instance_,
      MagicTrapBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicTrapBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicTrapBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MagicTrapBean));
  MagicPetBean_descriptor_ = file->message_type(16);
  static const int MagicPetBean_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicPetBean, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicPetBean, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicPetBean, keyid_),
  };
  MagicPetBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MagicPetBean_descriptor_,
      MagicPetBean::default_instance_,
      MagicPetBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicPetBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicPetBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MagicPetBean));
  MagicResaultBean_descriptor_ = file->message_type(17);
  static const int MagicResaultBean_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicResaultBean, effectbeans_),
  };
  MagicResaultBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MagicResaultBean_descriptor_,
      MagicResaultBean::default_instance_,
      MagicResaultBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicResaultBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicResaultBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MagicResaultBean));
  TrapTriggerBean_descriptor_ = file->message_type(18);
  static const int TrapTriggerBean_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerBean, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerBean, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerBean, buffkeyid_),
  };
  TrapTriggerBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrapTriggerBean_descriptor_,
      TrapTriggerBean::default_instance_,
      TrapTriggerBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrapTriggerBean));
  AttachBattleUp_descriptor_ = file->message_type(19);
  static const int AttachBattleUp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachBattleUp, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachBattleUp, userid_),
  };
  AttachBattleUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AttachBattleUp_descriptor_,
      AttachBattleUp::default_instance_,
      AttachBattleUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachBattleUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachBattleUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AttachBattleUp));
  AttachBattleDown_descriptor_ = file->message_type(20);
  static const int AttachBattleDown_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachBattleDown, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachBattleDown, syncbattledown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachBattleDown, countdown_),
  };
  AttachBattleDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AttachBattleDown_descriptor_,
      AttachBattleDown::default_instance_,
      AttachBattleDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachBattleDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttachBattleDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AttachBattleDown));
  SyncBattleUp_descriptor_ = file->message_type(21);
  static const int SyncBattleUp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleUp, battleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleUp, userid_),
  };
  SyncBattleUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncBattleUp_descriptor_,
      SyncBattleUp::default_instance_,
      SyncBattleUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncBattleUp));
  SyncBattleDown_descriptor_ = file->message_type(22);
  static const int SyncBattleDown_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleDown, battlebean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleDown, herobeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleDown, petbeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleDown, bulletbeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleDown, trapbeans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleDown, playerbeans_),
  };
  SyncBattleDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncBattleDown_descriptor_,
      SyncBattleDown::default_instance_,
      SyncBattleDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncBattleDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncBattleDown));
  BattleStepDown_descriptor_ = file->message_type(23);
  static const int BattleStepDown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleStepDown, step_),
  };
  BattleStepDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BattleStepDown_descriptor_,
      BattleStepDown::default_instance_,
      BattleStepDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleStepDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleStepDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BattleStepDown));
  MagicActionUp_descriptor_ = file->message_type(24);
  static const int MagicActionUp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionUp, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionUp, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionUp, actiontarget_),
  };
  MagicActionUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MagicActionUp_descriptor_,
      MagicActionUp::default_instance_,
      MagicActionUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MagicActionUp));
  MagicActionDown_descriptor_ = file->message_type(25);
  static const int MagicActionDown_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, actiontarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, magicresaultbean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, mstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, errortype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, errorvalue_),
  };
  MagicActionDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MagicActionDown_descriptor_,
      MagicActionDown::default_instance_,
      MagicActionDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MagicActionDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MagicActionDown));
  MoveActionUp_descriptor_ = file->message_type(26);
  static const int MoveActionUp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionUp, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionUp, actiontarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionUp, isadjust_),
  };
  MoveActionUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoveActionUp_descriptor_,
      MoveActionUp::default_instance_,
      MoveActionUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoveActionUp));
  MoveActionDown_descriptor_ = file->message_type(27);
  static const int MoveActionDown_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, actiontarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, delaytime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, mstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, isadjust_),
  };
  MoveActionDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoveActionDown_descriptor_,
      MoveActionDown::default_instance_,
      MoveActionDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveActionDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoveActionDown));
  RemoveDown_descriptor_ = file->message_type(28);
  static const int RemoveDown_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveDown, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveDown, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveDown, magicresaultbean_),
  };
  RemoveDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveDown_descriptor_,
      RemoveDown::default_instance_,
      RemoveDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveDown));
  IdleActionUp_descriptor_ = file->message_type(29);
  static const int IdleActionUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdleActionUp, performerid_),
  };
  IdleActionUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IdleActionUp_descriptor_,
      IdleActionUp::default_instance_,
      IdleActionUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdleActionUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdleActionUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IdleActionUp));
  IdleActionDown_descriptor_ = file->message_type(30);
  static const int IdleActionDown_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdleActionDown, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdleActionDown, position_),
  };
  IdleActionDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IdleActionDown_descriptor_,
      IdleActionDown::default_instance_,
      IdleActionDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdleActionDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdleActionDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IdleActionDown));
  NetDelayCheckUp_descriptor_ = file->message_type(31);
  static const int NetDelayCheckUp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetDelayCheckUp, step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetDelayCheckUp, ctime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetDelayCheckUp, version_),
  };
  NetDelayCheckUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NetDelayCheckUp_descriptor_,
      NetDelayCheckUp::default_instance_,
      NetDelayCheckUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetDelayCheckUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetDelayCheckUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NetDelayCheckUp));
  NetDelayCheckDown_descriptor_ = file->message_type(32);
  static const int NetDelayCheckDown_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetDelayCheckDown, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetDelayCheckDown, ctime_),
  };
  NetDelayCheckDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NetDelayCheckDown_descriptor_,
      NetDelayCheckDown::default_instance_,
      NetDelayCheckDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetDelayCheckDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NetDelayCheckDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NetDelayCheckDown));
  DeadDown_descriptor_ = file->message_type(33);
  static const int DeadDown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeadDown, performerid_),
  };
  DeadDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeadDown_descriptor_,
      DeadDown::default_instance_,
      DeadDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeadDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeadDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeadDown));
  TrapTriggerDown_descriptor_ = file->message_type(34);
  static const int TrapTriggerDown_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerDown, performerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerDown, keyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerDown, traptriggerbean_),
  };
  TrapTriggerDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrapTriggerDown_descriptor_,
      TrapTriggerDown::default_instance_,
      TrapTriggerDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrapTriggerDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrapTriggerDown));
  BattleOverDown_descriptor_ = file->message_type(35);
  static const int BattleOverDown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOverDown, failuretrooptype_),
  };
  BattleOverDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BattleOverDown_descriptor_,
      BattleOverDown::default_instance_,
      BattleOverDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOverDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleOverDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BattleOverDown));
  BattleCommondIdEnum_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_2100100_5fBattleMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuffContextBean_descriptor_, &BuffContextBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActionStateContextBean_descriptor_, &ActionStateContextBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BattleBean_descriptor_, &BattleBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserEntityBean_descriptor_, &UserEntityBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayerBean_descriptor_, &PlayerBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroEntityBean_descriptor_, &HeroEntityBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroBean_descriptor_, &HeroBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MagicCDBean_descriptor_, &MagicCDBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PetBean_descriptor_, &PetBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BulletBean_descriptor_, &BulletBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrapBean_descriptor_, &TrapBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CoordinateBean_descriptor_, &CoordinateBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActionTargetBean_descriptor_, &ActionTargetBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MagicEffectBean_descriptor_, &MagicEffectBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PerformerEffectBean_descriptor_, &PerformerEffectBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MagicTrapBean_descriptor_, &MagicTrapBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MagicPetBean_descriptor_, &MagicPetBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MagicResaultBean_descriptor_, &MagicResaultBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrapTriggerBean_descriptor_, &TrapTriggerBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AttachBattleUp_descriptor_, &AttachBattleUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AttachBattleDown_descriptor_, &AttachBattleDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncBattleUp_descriptor_, &SyncBattleUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncBattleDown_descriptor_, &SyncBattleDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BattleStepDown_descriptor_, &BattleStepDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MagicActionUp_descriptor_, &MagicActionUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MagicActionDown_descriptor_, &MagicActionDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoveActionUp_descriptor_, &MoveActionUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoveActionDown_descriptor_, &MoveActionDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveDown_descriptor_, &RemoveDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IdleActionUp_descriptor_, &IdleActionUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IdleActionDown_descriptor_, &IdleActionDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NetDelayCheckUp_descriptor_, &NetDelayCheckUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NetDelayCheckDown_descriptor_, &NetDelayCheckDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeadDown_descriptor_, &DeadDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrapTriggerDown_descriptor_, &TrapTriggerDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BattleOverDown_descriptor_, &BattleOverDown::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto() {
  delete BuffContextBean::default_instance_;
  delete BuffContextBean_reflection_;
  delete ActionStateContextBean::default_instance_;
  delete ActionStateContextBean_reflection_;
  delete BattleBean::default_instance_;
  delete BattleBean_reflection_;
  delete UserEntityBean::default_instance_;
  delete UserEntityBean_reflection_;
  delete PlayerBean::default_instance_;
  delete PlayerBean_reflection_;
  delete HeroEntityBean::default_instance_;
  delete HeroEntityBean_reflection_;
  delete HeroBean::default_instance_;
  delete HeroBean_reflection_;
  delete MagicCDBean::default_instance_;
  delete MagicCDBean_reflection_;
  delete PetBean::default_instance_;
  delete PetBean_reflection_;
  delete BulletBean::default_instance_;
  delete BulletBean_reflection_;
  delete TrapBean::default_instance_;
  delete TrapBean_reflection_;
  delete CoordinateBean::default_instance_;
  delete CoordinateBean_reflection_;
  delete ActionTargetBean::default_instance_;
  delete ActionTargetBean_reflection_;
  delete MagicEffectBean::default_instance_;
  delete MagicEffectBean_reflection_;
  delete PerformerEffectBean::default_instance_;
  delete PerformerEffectBean_reflection_;
  delete MagicTrapBean::default_instance_;
  delete MagicTrapBean_reflection_;
  delete MagicPetBean::default_instance_;
  delete MagicPetBean_reflection_;
  delete MagicResaultBean::default_instance_;
  delete MagicResaultBean_reflection_;
  delete TrapTriggerBean::default_instance_;
  delete TrapTriggerBean_reflection_;
  delete AttachBattleUp::default_instance_;
  delete AttachBattleUp_reflection_;
  delete AttachBattleDown::default_instance_;
  delete AttachBattleDown_reflection_;
  delete SyncBattleUp::default_instance_;
  delete SyncBattleUp_reflection_;
  delete SyncBattleDown::default_instance_;
  delete SyncBattleDown_reflection_;
  delete BattleStepDown::default_instance_;
  delete BattleStepDown_reflection_;
  delete MagicActionUp::default_instance_;
  delete MagicActionUp_reflection_;
  delete MagicActionDown::default_instance_;
  delete MagicActionDown_reflection_;
  delete MoveActionUp::default_instance_;
  delete MoveActionUp_reflection_;
  delete MoveActionDown::default_instance_;
  delete MoveActionDown_reflection_;
  delete RemoveDown::default_instance_;
  delete RemoveDown_reflection_;
  delete IdleActionUp::default_instance_;
  delete IdleActionUp_reflection_;
  delete IdleActionDown::default_instance_;
  delete IdleActionDown_reflection_;
  delete NetDelayCheckUp::default_instance_;
  delete NetDelayCheckUp_reflection_;
  delete NetDelayCheckDown::default_instance_;
  delete NetDelayCheckDown_reflection_;
  delete DeadDown::default_instance_;
  delete DeadDown_reflection_;
  delete TrapTriggerDown::default_instance_;
  delete TrapTriggerDown_reflection_;
  delete BattleOverDown::default_instance_;
  delete BattleOverDown_reflection_;
}

void protobuf_AddDesc_2100100_5fBattleMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\0332100100_BattleMessage.proto\"G\n\017BuffCon"
    "textBean\022\023\n\013performerId\030\001 \002(\r\022\021\n\tbuffKey"
    "Id\030\002 \002(\r\022\014\n\004time\030\003 \002(\r\"A\n\026ActionStateCon"
    "textBean\022\024\n\014stateSubType\030\001 \002(\r\022\021\n\tstartT"
    "ime\030\002 \002(\r\"L\n\nBattleBean\022\023\n\013battleKeyId\030\001"
    " \002(\r\022\023\n\013currentTime\030\002 \002(\r\022\024\n\014currentStat"
    "e\030\003 \002(\r\",\n\016UserEntityBean\022\013\n\003uid\030\001 \002(\004\022\r"
    "\n\005level\030\002 \002(\r\"H\n\nPlayerBean\022\'\n\016userEntit"
    "yBean\030\001 \002(\0132\017.UserEntityBean\022\021\n\ttroopTyp"
    "e\030\002 \002(\r\"W\n\016HeroEntityBean\022\n\n\002id\030\001 \002(\r\022\013\n"
    "\003uid\030\002 \002(\004\022\r\n\005level\030\003 \002(\r\022\017\n\007quality\030\004 \002"
    "(\r\022\014\n\004star\030\005 \002(\r\"\260\002\n\010HeroBean\022\023\n\013perform"
    "erId\030\001 \001(\r\022\013\n\003uid\030\002 \002(\004\022!\n\010position\030\003 \002("
    "\0132\017.CoordinateBean\022\'\n\016heroEntityBean\030\004 \002"
    "(\0132\017.HeroEntityBean\022\024\n\014currentAttrs\030\005 \003("
    "\r\022*\n\020buffContextBeans\030\006 \003(\0132\020.BuffContex"
    "tBean\0228\n\027actionStateContextBeans\030\007 \003(\0132\027"
    ".ActionStateContextBean\022\"\n\014magicCDBeans\030"
    "\010 \003(\0132\014.MagicCDBean\022\026\n\016retinueSkillId\030\t "
    "\001(\r\",\n\013MagicCDBean\022\017\n\007skillId\030\001 \002(\r\022\014\n\004t"
    "ime\030\002 \002(\005\"\233\002\n\007PetBean\022\n\n\002id\030\001 \002(\r\022\r\n\005lev"
    "el\030\002 \002(\r\022\023\n\013performerId\030\003 \001(\r\022\020\n\010sourceI"
    "d\030\004 \002(\r\022\013\n\003uid\030\005 \002(\004\022!\n\010position\030\006 \002(\0132\017"
    ".CoordinateBean\022\024\n\014currentAttrs\030\007 \003(\r\022*\n"
    "\020buffContextBeans\030\010 \003(\0132\020.BuffContextBea"
    "n\0228\n\027actionStateContextBeans\030\t \003(\0132\027.Act"
    "ionStateContextBean\022\"\n\014magicCDBeans\030\n \003("
    "\0132\014.MagicCDBean\"\257\001\n\nBulletBean\022\020\n\010effect"
    "Id\030\001 \002(\r\022\023\n\013performerId\030\002 \001(\r\022\020\n\010sourceI"
    "d\030\003 \002(\r\022\013\n\003uid\030\004 \002(\004\022!\n\010position\030\005 \002(\0132\017"
    ".CoordinateBean\0228\n\027actionStateContextBea"
    "ns\030\006 \003(\0132\027.ActionStateContextBean\"\222\001\n\010Tr"
    "apBean\022\n\n\002id\030\001 \002(\r\022\020\n\010effectId\030\002 \002(\r\022\021\n\t"
    "startTime\030\003 \002(\r\022\023\n\013performerId\030\004 \001(\r\022\020\n\010"
    "sourceId\030\005 \002(\r\022\013\n\003uid\030\006 \002(\t\022!\n\010position\030"
    "\007 \002(\0132\017.CoordinateBean\"\037\n\016CoordinateBean"
    "\022\r\n\001c\030\001 \003(\rB\002\020\001\"]\n\020ActionTargetBean\022\022\n\nt"
    "argetType\030\001 \002(\r\022\020\n\010targetId\030\002 \001(\r\022#\n\nare"
    "aTarget\030\003 \001(\0132\017.CoordinateBean\"\224\001\n\017Magic"
    "EffectBean\022\013\n\003eid\030\001 \002(\r\0222\n\024performerEffe"
    "ctBeans\030\002 \003(\0132\024.PerformerEffectBean\022 \n\010t"
    "rapBean\030\003 \003(\0132\016.MagicTrapBean\022\036\n\007petBean"
    "\030\004 \003(\0132\r.MagicPetBean\"m\n\023PerformerEffect"
    "Bean\022\013\n\003pid\030\001 \002(\r\022\016\n\006values\030\002 \003(\r\022\017\n\007eff"
    "ects\030\003 \003(\r\022\023\n\013createBuffs\030\004 \003(\r\022\023\n\013delet"
    "eBuffs\030\005 \003(\r\"L\n\rMagicTrapBean\022\013\n\003tid\030\001 \002"
    "(\r\022!\n\010position\030\002 \002(\0132\017.CoordinateBean\022\013\n"
    "\003eid\030\003 \002(\r\"M\n\014MagicPetBean\022\013\n\003pid\030\001 \002(\r\022"
    "!\n\010position\030\002 \002(\0132\017.CoordinateBean\022\r\n\005ke"
    "yId\030\003 \002(\r\"9\n\020MagicResaultBean\022%\n\013effectB"
    "eans\030\001 \003(\0132\020.MagicEffectBean\"@\n\017TrapTrig"
    "gerBean\022\013\n\003pid\030\001 \002(\r\022\r\n\005value\030\002 \001(\r\022\021\n\tb"
    "uffKeyId\030\003 \003(\r\"2\n\016AttachBattleUp\022\020\n\010batt"
    "leId\030\001 \002(\t\022\016\n\006userId\030\002 \002(\t\"]\n\020AttachBatt"
    "leDown\022\r\n\005state\030\001 \002(\r\022\'\n\016syncBattleDown\030"
    "\002 \001(\0132\017.SyncBattleDown\022\021\n\tcountdown\030\003 \001("
    "\r\"0\n\014SyncBattleUp\022\020\n\010battleId\030\001 \002(\t\022\016\n\006u"
    "serId\030\002 \002(\t\"\315\001\n\016SyncBattleDown\022\037\n\nbattle"
    "Bean\030\001 \001(\0132\013.BattleBean\022\034\n\theroBeans\030\002 \003"
    "(\0132\t.HeroBean\022\032\n\010petBeans\030\003 \003(\0132\010.PetBea"
    "n\022 \n\013bulletBeans\030\004 \003(\0132\013.BulletBean\022\034\n\tt"
    "rapBeans\030\005 \003(\0132\t.TrapBean\022 \n\013playerBeans"
    "\030\006 \003(\0132\013.PlayerBean\"\036\n\016BattleStepDown\022\014\n"
    "\004step\030\001 \002(\r\"^\n\rMagicActionUp\022\023\n\013performe"
    "rId\030\001 \002(\r\022\017\n\007skillId\030\002 \002(\r\022\'\n\014actionTarg"
    "et\030\003 \002(\0132\021.ActionTargetBean\"\343\001\n\017MagicAct"
    "ionDown\022\023\n\013performerId\030\001 \002(\r\022\017\n\007skillId\030"
    "\002 \002(\r\022\'\n\014actionTarget\030\003 \001(\0132\021.ActionTarg"
    "etBean\022\r\n\005state\030\004 \001(\r\022+\n\020magicResaultBea"
    "n\030\005 \001(\0132\021.MagicResaultBean\022\016\n\006source\030\006 \002"
    "(\r\022\016\n\006mstate\030\007 \001(\r\022\021\n\terrorType\030\010 \001(\r\022\022\n"
    "\nerrorValue\030\t \001(\r\"^\n\014MoveActionUp\022\023\n\013per"
    "formerId\030\001 \002(\r\022\'\n\014actionTarget\030\002 \002(\0132\021.A"
    "ctionTargetBean\022\020\n\010isAdjust\030\003 \001(\010\"\260\001\n\016Mo"
    "veActionDown\022\023\n\013performerId\030\001 \002(\r\022\'\n\014act"
    "ionTarget\030\002 \002(\0132\021.ActionTargetBean\022\r\n\005st"
    "ate\030\003 \002(\r\022\021\n\tdelayTime\030\004 \002(\r\022\016\n\006source\030\006"
    " \002(\r\022\016\n\006mstate\030\007 \001(\r\022\014\n\004type\030\010 \001(\r\022\020\n\010is"
    "Adjust\030\t \001(\010\"S\n\nRemoveDown\022\014\n\004type\030\001 \002(\r"
    "\022\n\n\002id\030\002 \002(\r\022+\n\020magicResaultBean\030\003 \001(\0132\021"
    ".MagicResaultBean\"#\n\014IdleActionUp\022\023\n\013per"
    "formerId\030\001 \002(\r\"H\n\016IdleActionDown\022\023\n\013perf"
    "ormerId\030\001 \002(\r\022!\n\010position\030\002 \002(\0132\017.Coordi"
    "nateBean\"\?\n\017NetDelayCheckUp\022\014\n\004step\030\001 \002("
    "\r\022\r\n\005cTime\030\002 \002(\004\022\017\n\007version\030\003 \001(\r\"3\n\021Net"
    "DelayCheckDown\022\017\n\007version\030\001 \002(\r\022\r\n\005cTime"
    "\030\002 \002(\004\"\037\n\010DeadDown\022\023\n\013performerId\030\001 \002(\r\""
    "`\n\017TrapTriggerDown\022\023\n\013performerId\030\001 \002(\r\022"
    "\r\n\005keyId\030\002 \002(\r\022)\n\017trapTriggerBean\030\003 \003(\0132"
    "\020.TrapTriggerBean\"*\n\016BattleOverDown\022\030\n\020f"
    "ailureTroopType\030\001 \002(\r*\244\003\n\023BattleCommondI"
    "dEnum\022\026\n\017_AttachBattleUp\020\205\227\200\001\022\030\n\021_Attach"
    "BattleDown\020\206\227\200\001\022\024\n\r_SyncBattleUp\020\207\227\200\001\022\026\n"
    "\017_SyncBattleDown\020\210\227\200\001\022\026\n\017_BattleStepDown"
    "\020\212\227\200\001\022\025\n\016_MagicActionUp\020\213\227\200\001\022\027\n\020_MagicAc"
    "tionDown\020\214\227\200\001\022\024\n\r_MoveActionUp\020\215\227\200\001\022\026\n\017_"
    "MoveActionDown\020\216\227\200\001\022\022\n\013_RemoveDown\020\220\227\200\001\022"
    "\024\n\r_IdleActionUp\020\221\227\200\001\022\026\n\017_IdleActionDown"
    "\020\222\227\200\001\022\027\n\020_NetDelayCheckUp\020\223\227\200\001\022\031\n\022_NetDe"
    "layCheckDown\020\224\227\200\001\022\020\n\t_DeadDown\020\226\227\200\001\022\027\n\020_"
    "TrapTriggerDown\020\230\227\200\001\022\026\n\017_BattleOverDown\020"
    "\232\227\200\001B \n\017com.cwa.messageB\rBattleMessage", 4078);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "2100100_BattleMessage.proto", &protobuf_RegisterTypes);
  BuffContextBean::default_instance_ = new BuffContextBean();
  ActionStateContextBean::default_instance_ = new ActionStateContextBean();
  BattleBean::default_instance_ = new BattleBean();
  UserEntityBean::default_instance_ = new UserEntityBean();
  PlayerBean::default_instance_ = new PlayerBean();
  HeroEntityBean::default_instance_ = new HeroEntityBean();
  HeroBean::default_instance_ = new HeroBean();
  MagicCDBean::default_instance_ = new MagicCDBean();
  PetBean::default_instance_ = new PetBean();
  BulletBean::default_instance_ = new BulletBean();
  TrapBean::default_instance_ = new TrapBean();
  CoordinateBean::default_instance_ = new CoordinateBean();
  ActionTargetBean::default_instance_ = new ActionTargetBean();
  MagicEffectBean::default_instance_ = new MagicEffectBean();
  PerformerEffectBean::default_instance_ = new PerformerEffectBean();
  MagicTrapBean::default_instance_ = new MagicTrapBean();
  MagicPetBean::default_instance_ = new MagicPetBean();
  MagicResaultBean::default_instance_ = new MagicResaultBean();
  TrapTriggerBean::default_instance_ = new TrapTriggerBean();
  AttachBattleUp::default_instance_ = new AttachBattleUp();
  AttachBattleDown::default_instance_ = new AttachBattleDown();
  SyncBattleUp::default_instance_ = new SyncBattleUp();
  SyncBattleDown::default_instance_ = new SyncBattleDown();
  BattleStepDown::default_instance_ = new BattleStepDown();
  MagicActionUp::default_instance_ = new MagicActionUp();
  MagicActionDown::default_instance_ = new MagicActionDown();
  MoveActionUp::default_instance_ = new MoveActionUp();
  MoveActionDown::default_instance_ = new MoveActionDown();
  RemoveDown::default_instance_ = new RemoveDown();
  IdleActionUp::default_instance_ = new IdleActionUp();
  IdleActionDown::default_instance_ = new IdleActionDown();
  NetDelayCheckUp::default_instance_ = new NetDelayCheckUp();
  NetDelayCheckDown::default_instance_ = new NetDelayCheckDown();
  DeadDown::default_instance_ = new DeadDown();
  TrapTriggerDown::default_instance_ = new TrapTriggerDown();
  BattleOverDown::default_instance_ = new BattleOverDown();
  BuffContextBean::default_instance_->InitAsDefaultInstance();
  ActionStateContextBean::default_instance_->InitAsDefaultInstance();
  BattleBean::default_instance_->InitAsDefaultInstance();
  UserEntityBean::default_instance_->InitAsDefaultInstance();
  PlayerBean::default_instance_->InitAsDefaultInstance();
  HeroEntityBean::default_instance_->InitAsDefaultInstance();
  HeroBean::default_instance_->InitAsDefaultInstance();
  MagicCDBean::default_instance_->InitAsDefaultInstance();
  PetBean::default_instance_->InitAsDefaultInstance();
  BulletBean::default_instance_->InitAsDefaultInstance();
  TrapBean::default_instance_->InitAsDefaultInstance();
  CoordinateBean::default_instance_->InitAsDefaultInstance();
  ActionTargetBean::default_instance_->InitAsDefaultInstance();
  MagicEffectBean::default_instance_->InitAsDefaultInstance();
  PerformerEffectBean::default_instance_->InitAsDefaultInstance();
  MagicTrapBean::default_instance_->InitAsDefaultInstance();
  MagicPetBean::default_instance_->InitAsDefaultInstance();
  MagicResaultBean::default_instance_->InitAsDefaultInstance();
  TrapTriggerBean::default_instance_->InitAsDefaultInstance();
  AttachBattleUp::default_instance_->InitAsDefaultInstance();
  AttachBattleDown::default_instance_->InitAsDefaultInstance();
  SyncBattleUp::default_instance_->InitAsDefaultInstance();
  SyncBattleDown::default_instance_->InitAsDefaultInstance();
  BattleStepDown::default_instance_->InitAsDefaultInstance();
  MagicActionUp::default_instance_->InitAsDefaultInstance();
  MagicActionDown::default_instance_->InitAsDefaultInstance();
  MoveActionUp::default_instance_->InitAsDefaultInstance();
  MoveActionDown::default_instance_->InitAsDefaultInstance();
  RemoveDown::default_instance_->InitAsDefaultInstance();
  IdleActionUp::default_instance_->InitAsDefaultInstance();
  IdleActionDown::default_instance_->InitAsDefaultInstance();
  NetDelayCheckUp::default_instance_->InitAsDefaultInstance();
  NetDelayCheckDown::default_instance_->InitAsDefaultInstance();
  DeadDown::default_instance_->InitAsDefaultInstance();
  TrapTriggerDown::default_instance_->InitAsDefaultInstance();
  BattleOverDown::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_2100100_5fBattleMessage_2eproto {
  StaticDescriptorInitializer_2100100_5fBattleMessage_2eproto() {
    protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  }
} static_descriptor_initializer_2100100_5fBattleMessage_2eproto_;
const ::google::protobuf::EnumDescriptor* BattleCommondIdEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleCommondIdEnum_descriptor_;
}
bool BattleCommondIdEnum_IsValid(int value) {
  switch(value) {
    case 2100101:
    case 2100102:
    case 2100103:
    case 2100104:
    case 2100106:
    case 2100107:
    case 2100108:
    case 2100109:
    case 2100110:
    case 2100112:
    case 2100113:
    case 2100114:
    case 2100115:
    case 2100116:
    case 2100118:
    case 2100120:
    case 2100122:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int BuffContextBean::kPerformerIdFieldNumber;
const int BuffContextBean::kBuffKeyIdFieldNumber;
const int BuffContextBean::kTimeFieldNumber;
#endif  // !_MSC_VER

BuffContextBean::BuffContextBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuffContextBean::InitAsDefaultInstance() {
}

BuffContextBean::BuffContextBean(const BuffContextBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuffContextBean::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  buffkeyid_ = 0u;
  time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuffContextBean::~BuffContextBean() {
  SharedDtor();
}

void BuffContextBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuffContextBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuffContextBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuffContextBean_descriptor_;
}

const BuffContextBean& BuffContextBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

BuffContextBean* BuffContextBean::default_instance_ = NULL;

BuffContextBean* BuffContextBean::New() const {
  return new BuffContextBean;
}

void BuffContextBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
    buffkeyid_ = 0u;
    time_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuffContextBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buffKeyId;
        break;
      }

      // required uint32 buffKeyId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buffKeyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buffkeyid_)));
          set_has_buffkeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }

      // required uint32 time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuffContextBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  // required uint32 buffKeyId = 2;
  if (has_buffkeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buffkeyid(), output);
  }

  // required uint32 time = 3;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuffContextBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  // required uint32 buffKeyId = 2;
  if (has_buffkeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buffkeyid(), target);
  }

  // required uint32 time = 3;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuffContextBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required uint32 buffKeyId = 2;
    if (has_buffkeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buffkeyid());
    }

    // required uint32 time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuffContextBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuffContextBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuffContextBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuffContextBean::MergeFrom(const BuffContextBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_buffkeyid()) {
      set_buffkeyid(from.buffkeyid());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuffContextBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuffContextBean::CopyFrom(const BuffContextBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuffContextBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void BuffContextBean::Swap(BuffContextBean* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(buffkeyid_, other->buffkeyid_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuffContextBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuffContextBean_descriptor_;
  metadata.reflection = BuffContextBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActionStateContextBean::kStateSubTypeFieldNumber;
const int ActionStateContextBean::kStartTimeFieldNumber;
#endif  // !_MSC_VER

ActionStateContextBean::ActionStateContextBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActionStateContextBean::InitAsDefaultInstance() {
}

ActionStateContextBean::ActionStateContextBean(const ActionStateContextBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActionStateContextBean::SharedCtor() {
  _cached_size_ = 0;
  statesubtype_ = 0u;
  starttime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionStateContextBean::~ActionStateContextBean() {
  SharedDtor();
}

void ActionStateContextBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActionStateContextBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionStateContextBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionStateContextBean_descriptor_;
}

const ActionStateContextBean& ActionStateContextBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

ActionStateContextBean* ActionStateContextBean::default_instance_ = NULL;

ActionStateContextBean* ActionStateContextBean::New() const {
  return new ActionStateContextBean;
}

void ActionStateContextBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    statesubtype_ = 0u;
    starttime_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActionStateContextBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 stateSubType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &statesubtype_)));
          set_has_statesubtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_startTime;
        break;
      }

      // required uint32 startTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_startTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActionStateContextBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 stateSubType = 1;
  if (has_statesubtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->statesubtype(), output);
  }

  // required uint32 startTime = 2;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->starttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActionStateContextBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 stateSubType = 1;
  if (has_statesubtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->statesubtype(), target);
  }

  // required uint32 startTime = 2;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->starttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActionStateContextBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 stateSubType = 1;
    if (has_statesubtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->statesubtype());
    }

    // required uint32 startTime = 2;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionStateContextBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActionStateContextBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActionStateContextBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActionStateContextBean::MergeFrom(const ActionStateContextBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_statesubtype()) {
      set_statesubtype(from.statesubtype());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActionStateContextBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionStateContextBean::CopyFrom(const ActionStateContextBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionStateContextBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ActionStateContextBean::Swap(ActionStateContextBean* other) {
  if (other != this) {
    std::swap(statesubtype_, other->statesubtype_);
    std::swap(starttime_, other->starttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActionStateContextBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionStateContextBean_descriptor_;
  metadata.reflection = ActionStateContextBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BattleBean::kBattleKeyIdFieldNumber;
const int BattleBean::kCurrentTimeFieldNumber;
const int BattleBean::kCurrentStateFieldNumber;
#endif  // !_MSC_VER

BattleBean::BattleBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BattleBean::InitAsDefaultInstance() {
}

BattleBean::BattleBean(const BattleBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BattleBean::SharedCtor() {
  _cached_size_ = 0;
  battlekeyid_ = 0u;
  currenttime_ = 0u;
  currentstate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleBean::~BattleBean() {
  SharedDtor();
}

void BattleBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleBean_descriptor_;
}

const BattleBean& BattleBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

BattleBean* BattleBean::default_instance_ = NULL;

BattleBean* BattleBean::New() const {
  return new BattleBean;
}

void BattleBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    battlekeyid_ = 0u;
    currenttime_ = 0u;
    currentstate_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BattleBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 battleKeyId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &battlekeyid_)));
          set_has_battlekeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_currentTime;
        break;
      }

      // required uint32 currentTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currenttime_)));
          set_has_currenttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_currentState;
        break;
      }

      // required uint32 currentState = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currentstate_)));
          set_has_currentstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BattleBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 battleKeyId = 1;
  if (has_battlekeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->battlekeyid(), output);
  }

  // required uint32 currentTime = 2;
  if (has_currenttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->currenttime(), output);
  }

  // required uint32 currentState = 3;
  if (has_currentstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->currentstate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BattleBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 battleKeyId = 1;
  if (has_battlekeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->battlekeyid(), target);
  }

  // required uint32 currentTime = 2;
  if (has_currenttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->currenttime(), target);
  }

  // required uint32 currentState = 3;
  if (has_currentstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->currentstate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BattleBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 battleKeyId = 1;
    if (has_battlekeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->battlekeyid());
    }

    // required uint32 currentTime = 2;
    if (has_currenttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currenttime());
    }

    // required uint32 currentState = 3;
    if (has_currentstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currentstate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BattleBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BattleBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BattleBean::MergeFrom(const BattleBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battlekeyid()) {
      set_battlekeyid(from.battlekeyid());
    }
    if (from.has_currenttime()) {
      set_currenttime(from.currenttime());
    }
    if (from.has_currentstate()) {
      set_currentstate(from.currentstate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BattleBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleBean::CopyFrom(const BattleBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void BattleBean::Swap(BattleBean* other) {
  if (other != this) {
    std::swap(battlekeyid_, other->battlekeyid_);
    std::swap(currenttime_, other->currenttime_);
    std::swap(currentstate_, other->currentstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BattleBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleBean_descriptor_;
  metadata.reflection = BattleBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserEntityBean::kUidFieldNumber;
const int UserEntityBean::kLevelFieldNumber;
#endif  // !_MSC_VER

UserEntityBean::UserEntityBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UserEntityBean::InitAsDefaultInstance() {
}

UserEntityBean::UserEntityBean(const UserEntityBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UserEntityBean::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
  level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserEntityBean::~UserEntityBean() {
  SharedDtor();
}

void UserEntityBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserEntityBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserEntityBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserEntityBean_descriptor_;
}

const UserEntityBean& UserEntityBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

UserEntityBean* UserEntityBean::default_instance_ = NULL;

UserEntityBean* UserEntityBean::New() const {
  return new UserEntityBean;
}

void UserEntityBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = GOOGLE_ULONGLONG(0);
    level_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserEntityBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required uint32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UserEntityBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UserEntityBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UserEntityBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // required uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserEntityBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserEntityBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserEntityBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserEntityBean::MergeFrom(const UserEntityBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserEntityBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserEntityBean::CopyFrom(const UserEntityBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserEntityBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UserEntityBean::Swap(UserEntityBean* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserEntityBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserEntityBean_descriptor_;
  metadata.reflection = UserEntityBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlayerBean::kUserEntityBeanFieldNumber;
const int PlayerBean::kTroopTypeFieldNumber;
#endif  // !_MSC_VER

PlayerBean::PlayerBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PlayerBean::InitAsDefaultInstance() {
  userentitybean_ = const_cast< ::UserEntityBean*>(&::UserEntityBean::default_instance());
}

PlayerBean::PlayerBean(const PlayerBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PlayerBean::SharedCtor() {
  _cached_size_ = 0;
  userentitybean_ = NULL;
  trooptype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerBean::~PlayerBean() {
  SharedDtor();
}

void PlayerBean::SharedDtor() {
  if (this != default_instance_) {
    delete userentitybean_;
  }
}

void PlayerBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerBean_descriptor_;
}

const PlayerBean& PlayerBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

PlayerBean* PlayerBean::default_instance_ = NULL;

PlayerBean* PlayerBean::New() const {
  return new PlayerBean;
}

void PlayerBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_userentitybean()) {
      if (userentitybean_ != NULL) userentitybean_->::UserEntityBean::Clear();
    }
    trooptype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayerBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .UserEntityBean userEntityBean = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userentitybean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_troopType;
        break;
      }

      // required uint32 troopType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_troopType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trooptype_)));
          set_has_trooptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PlayerBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .UserEntityBean userEntityBean = 1;
  if (has_userentitybean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userentitybean(), output);
  }

  // required uint32 troopType = 2;
  if (has_trooptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->trooptype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PlayerBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .UserEntityBean userEntityBean = 1;
  if (has_userentitybean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->userentitybean(), target);
  }

  // required uint32 troopType = 2;
  if (has_trooptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->trooptype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PlayerBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .UserEntityBean userEntityBean = 1;
    if (has_userentitybean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userentitybean());
    }

    // required uint32 troopType = 2;
    if (has_trooptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trooptype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayerBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayerBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayerBean::MergeFrom(const PlayerBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userentitybean()) {
      mutable_userentitybean()->::UserEntityBean::MergeFrom(from.userentitybean());
    }
    if (from.has_trooptype()) {
      set_trooptype(from.trooptype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayerBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerBean::CopyFrom(const PlayerBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_userentitybean()) {
    if (!this->userentitybean().IsInitialized()) return false;
  }
  return true;
}

void PlayerBean::Swap(PlayerBean* other) {
  if (other != this) {
    std::swap(userentitybean_, other->userentitybean_);
    std::swap(trooptype_, other->trooptype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlayerBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerBean_descriptor_;
  metadata.reflection = PlayerBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroEntityBean::kIdFieldNumber;
const int HeroEntityBean::kUidFieldNumber;
const int HeroEntityBean::kLevelFieldNumber;
const int HeroEntityBean::kQualityFieldNumber;
const int HeroEntityBean::kStarFieldNumber;
#endif  // !_MSC_VER

HeroEntityBean::HeroEntityBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroEntityBean::InitAsDefaultInstance() {
}

HeroEntityBean::HeroEntityBean(const HeroEntityBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroEntityBean::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  level_ = 0u;
  quality_ = 0u;
  star_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroEntityBean::~HeroEntityBean() {
  SharedDtor();
}

void HeroEntityBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroEntityBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroEntityBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroEntityBean_descriptor_;
}

const HeroEntityBean& HeroEntityBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

HeroEntityBean* HeroEntityBean::default_instance_ = NULL;

HeroEntityBean* HeroEntityBean::New() const {
  return new HeroEntityBean;
}

void HeroEntityBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    uid_ = GOOGLE_ULONGLONG(0);
    level_ = 0u;
    quality_ = 0u;
    star_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroEntityBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // required uint64 uid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required uint32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_quality;
        break;
      }

      // required uint32 quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_star;
        break;
      }

      // required uint32 star = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroEntityBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uid(), output);
  }

  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // required uint32 quality = 4;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->quality(), output);
  }

  // required uint32 star = 5;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->star(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroEntityBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uid(), target);
  }

  // required uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // required uint32 quality = 4;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->quality(), target);
  }

  // required uint32 star = 5;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->star(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroEntityBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint64 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // required uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 quality = 4;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // required uint32 star = 5;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroEntityBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroEntityBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroEntityBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroEntityBean::MergeFrom(const HeroEntityBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroEntityBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroEntityBean::CopyFrom(const HeroEntityBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroEntityBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void HeroEntityBean::Swap(HeroEntityBean* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(uid_, other->uid_);
    std::swap(level_, other->level_);
    std::swap(quality_, other->quality_);
    std::swap(star_, other->star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroEntityBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroEntityBean_descriptor_;
  metadata.reflection = HeroEntityBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroBean::kPerformerIdFieldNumber;
const int HeroBean::kUidFieldNumber;
const int HeroBean::kPositionFieldNumber;
const int HeroBean::kHeroEntityBeanFieldNumber;
const int HeroBean::kCurrentAttrsFieldNumber;
const int HeroBean::kBuffContextBeansFieldNumber;
const int HeroBean::kActionStateContextBeansFieldNumber;
const int HeroBean::kMagicCDBeansFieldNumber;
const int HeroBean::kRetinueSkillIdFieldNumber;
#endif  // !_MSC_VER

HeroBean::HeroBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroBean::InitAsDefaultInstance() {
  position_ = const_cast< ::CoordinateBean*>(&::CoordinateBean::default_instance());
  heroentitybean_ = const_cast< ::HeroEntityBean*>(&::HeroEntityBean::default_instance());
}

HeroBean::HeroBean(const HeroBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroBean::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  position_ = NULL;
  heroentitybean_ = NULL;
  retinueskillid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroBean::~HeroBean() {
  SharedDtor();
}

void HeroBean::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
    delete heroentitybean_;
  }
}

void HeroBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroBean_descriptor_;
}

const HeroBean& HeroBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

HeroBean* HeroBean::default_instance_ = NULL;

HeroBean* HeroBean::New() const {
  return new HeroBean;
}

void HeroBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_position()) {
      if (position_ != NULL) position_->::CoordinateBean::Clear();
    }
    if (has_heroentitybean()) {
      if (heroentitybean_ != NULL) heroentitybean_->::HeroEntityBean::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    retinueskillid_ = 0u;
  }
  currentattrs_.Clear();
  buffcontextbeans_.Clear();
  actionstatecontextbeans_.Clear();
  magiccdbeans_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // required uint64 uid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_position;
        break;
      }

      // required .CoordinateBean position = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_heroEntityBean;
        break;
      }

      // required .HeroEntityBean heroEntityBean = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heroEntityBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_heroentitybean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_currentAttrs;
        break;
      }

      // repeated uint32 currentAttrs = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentAttrs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_currentattrs())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_currentattrs())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_currentAttrs;
        if (input->ExpectTag(50)) goto parse_buffContextBeans;
        break;
      }

      // repeated .BuffContextBean buffContextBeans = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buffContextBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buffcontextbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_buffContextBeans;
        if (input->ExpectTag(58)) goto parse_actionStateContextBeans;
        break;
      }

      // repeated .ActionStateContextBean actionStateContextBeans = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_actionStateContextBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_actionstatecontextbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_actionStateContextBeans;
        if (input->ExpectTag(66)) goto parse_magicCDBeans;
        break;
      }

      // repeated .MagicCDBean magicCDBeans = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_magicCDBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_magiccdbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_magicCDBeans;
        if (input->ExpectTag(72)) goto parse_retinueSkillId;
        break;
      }

      // optional uint32 retinueSkillId = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_retinueSkillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retinueskillid_)));
          set_has_retinueskillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uid(), output);
  }

  // required .CoordinateBean position = 3;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->position(), output);
  }

  // required .HeroEntityBean heroEntityBean = 4;
  if (has_heroentitybean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->heroentitybean(), output);
  }

  // repeated uint32 currentAttrs = 5;
  for (int i = 0; i < this->currentattrs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->currentattrs(i), output);
  }

  // repeated .BuffContextBean buffContextBeans = 6;
  for (int i = 0; i < this->buffcontextbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->buffcontextbeans(i), output);
  }

  // repeated .ActionStateContextBean actionStateContextBeans = 7;
  for (int i = 0; i < this->actionstatecontextbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->actionstatecontextbeans(i), output);
  }

  // repeated .MagicCDBean magicCDBeans = 8;
  for (int i = 0; i < this->magiccdbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->magiccdbeans(i), output);
  }

  // optional uint32 retinueSkillId = 9;
  if (has_retinueskillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->retinueskillid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  // required uint64 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uid(), target);
  }

  // required .CoordinateBean position = 3;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->position(), target);
  }

  // required .HeroEntityBean heroEntityBean = 4;
  if (has_heroentitybean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->heroentitybean(), target);
  }

  // repeated uint32 currentAttrs = 5;
  for (int i = 0; i < this->currentattrs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->currentattrs(i), target);
  }

  // repeated .BuffContextBean buffContextBeans = 6;
  for (int i = 0; i < this->buffcontextbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->buffcontextbeans(i), target);
  }

  // repeated .ActionStateContextBean actionStateContextBeans = 7;
  for (int i = 0; i < this->actionstatecontextbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->actionstatecontextbeans(i), target);
  }

  // repeated .MagicCDBean magicCDBeans = 8;
  for (int i = 0; i < this->magiccdbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->magiccdbeans(i), target);
  }

  // optional uint32 retinueSkillId = 9;
  if (has_retinueskillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->retinueskillid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required uint64 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // required .CoordinateBean position = 3;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // required .HeroEntityBean heroEntityBean = 4;
    if (has_heroentitybean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->heroentitybean());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 retinueSkillId = 9;
    if (has_retinueskillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->retinueskillid());
    }

  }
  // repeated uint32 currentAttrs = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->currentattrs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->currentattrs(i));
    }
    total_size += 1 * this->currentattrs_size() + data_size;
  }

  // repeated .BuffContextBean buffContextBeans = 6;
  total_size += 1 * this->buffcontextbeans_size();
  for (int i = 0; i < this->buffcontextbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buffcontextbeans(i));
  }

  // repeated .ActionStateContextBean actionStateContextBeans = 7;
  total_size += 1 * this->actionstatecontextbeans_size();
  for (int i = 0; i < this->actionstatecontextbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->actionstatecontextbeans(i));
  }

  // repeated .MagicCDBean magicCDBeans = 8;
  total_size += 1 * this->magiccdbeans_size();
  for (int i = 0; i < this->magiccdbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->magiccdbeans(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroBean::MergeFrom(const HeroBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  currentattrs_.MergeFrom(from.currentattrs_);
  buffcontextbeans_.MergeFrom(from.buffcontextbeans_);
  actionstatecontextbeans_.MergeFrom(from.actionstatecontextbeans_);
  magiccdbeans_.MergeFrom(from.magiccdbeans_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_position()) {
      mutable_position()->::CoordinateBean::MergeFrom(from.position());
    }
    if (from.has_heroentitybean()) {
      mutable_heroentitybean()->::HeroEntityBean::MergeFrom(from.heroentitybean());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_retinueskillid()) {
      set_retinueskillid(from.retinueskillid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroBean::CopyFrom(const HeroBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (has_heroentitybean()) {
    if (!this->heroentitybean().IsInitialized()) return false;
  }
  for (int i = 0; i < buffcontextbeans_size(); i++) {
    if (!this->buffcontextbeans(i).IsInitialized()) return false;
  }
  for (int i = 0; i < actionstatecontextbeans_size(); i++) {
    if (!this->actionstatecontextbeans(i).IsInitialized()) return false;
  }
  for (int i = 0; i < magiccdbeans_size(); i++) {
    if (!this->magiccdbeans(i).IsInitialized()) return false;
  }
  return true;
}

void HeroBean::Swap(HeroBean* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(uid_, other->uid_);
    std::swap(position_, other->position_);
    std::swap(heroentitybean_, other->heroentitybean_);
    currentattrs_.Swap(&other->currentattrs_);
    buffcontextbeans_.Swap(&other->buffcontextbeans_);
    actionstatecontextbeans_.Swap(&other->actionstatecontextbeans_);
    magiccdbeans_.Swap(&other->magiccdbeans_);
    std::swap(retinueskillid_, other->retinueskillid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroBean_descriptor_;
  metadata.reflection = HeroBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MagicCDBean::kSkillIdFieldNumber;
const int MagicCDBean::kTimeFieldNumber;
#endif  // !_MSC_VER

MagicCDBean::MagicCDBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MagicCDBean::InitAsDefaultInstance() {
}

MagicCDBean::MagicCDBean(const MagicCDBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MagicCDBean::SharedCtor() {
  _cached_size_ = 0;
  skillid_ = 0u;
  time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MagicCDBean::~MagicCDBean() {
  SharedDtor();
}

void MagicCDBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MagicCDBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MagicCDBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MagicCDBean_descriptor_;
}

const MagicCDBean& MagicCDBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

MagicCDBean* MagicCDBean::default_instance_ = NULL;

MagicCDBean* MagicCDBean::New() const {
  return new MagicCDBean;
}

void MagicCDBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skillid_ = 0u;
    time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MagicCDBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 skillId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // required int32 time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MagicCDBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 skillId = 1;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->skillid(), output);
  }

  // required int32 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MagicCDBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 skillId = 1;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->skillid(), target);
  }

  // required int32 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MagicCDBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 skillId = 1;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

    // required int32 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MagicCDBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MagicCDBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MagicCDBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MagicCDBean::MergeFrom(const MagicCDBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MagicCDBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MagicCDBean::CopyFrom(const MagicCDBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MagicCDBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MagicCDBean::Swap(MagicCDBean* other) {
  if (other != this) {
    std::swap(skillid_, other->skillid_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MagicCDBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MagicCDBean_descriptor_;
  metadata.reflection = MagicCDBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PetBean::kIdFieldNumber;
const int PetBean::kLevelFieldNumber;
const int PetBean::kPerformerIdFieldNumber;
const int PetBean::kSourceIdFieldNumber;
const int PetBean::kUidFieldNumber;
const int PetBean::kPositionFieldNumber;
const int PetBean::kCurrentAttrsFieldNumber;
const int PetBean::kBuffContextBeansFieldNumber;
const int PetBean::kActionStateContextBeansFieldNumber;
const int PetBean::kMagicCDBeansFieldNumber;
#endif  // !_MSC_VER

PetBean::PetBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PetBean::InitAsDefaultInstance() {
  position_ = const_cast< ::CoordinateBean*>(&::CoordinateBean::default_instance());
}

PetBean::PetBean(const PetBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PetBean::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  level_ = 0u;
  performerid_ = 0u;
  sourceid_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  position_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PetBean::~PetBean() {
  SharedDtor();
}

void PetBean::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void PetBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PetBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PetBean_descriptor_;
}

const PetBean& PetBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

PetBean* PetBean::default_instance_ = NULL;

PetBean* PetBean::New() const {
  return new PetBean;
}

void PetBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    level_ = 0u;
    performerid_ = 0u;
    sourceid_ = 0u;
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_position()) {
      if (position_ != NULL) position_->::CoordinateBean::Clear();
    }
  }
  currentattrs_.Clear();
  buffcontextbeans_.Clear();
  actionstatecontextbeans_.Clear();
  magiccdbeans_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PetBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required uint32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_performerId;
        break;
      }

      // optional uint32 performerId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_performerId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_sourceId;
        break;
      }

      // required uint32 sourceId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sourceId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sourceid_)));
          set_has_sourceid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_uid;
        break;
      }

      // required uint64 uid = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_position;
        break;
      }

      // required .CoordinateBean position = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_currentAttrs;
        break;
      }

      // repeated uint32 currentAttrs = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentAttrs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable_currentattrs())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_currentattrs())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_currentAttrs;
        if (input->ExpectTag(66)) goto parse_buffContextBeans;
        break;
      }

      // repeated .BuffContextBean buffContextBeans = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buffContextBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buffcontextbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_buffContextBeans;
        if (input->ExpectTag(74)) goto parse_actionStateContextBeans;
        break;
      }

      // repeated .ActionStateContextBean actionStateContextBeans = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_actionStateContextBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_actionstatecontextbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_actionStateContextBeans;
        if (input->ExpectTag(82)) goto parse_magicCDBeans;
        break;
      }

      // repeated .MagicCDBean magicCDBeans = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_magicCDBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_magiccdbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_magicCDBeans;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PetBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // optional uint32 performerId = 3;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->performerid(), output);
  }

  // required uint32 sourceId = 4;
  if (has_sourceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sourceid(), output);
  }

  // required uint64 uid = 5;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->uid(), output);
  }

  // required .CoordinateBean position = 6;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->position(), output);
  }

  // repeated uint32 currentAttrs = 7;
  for (int i = 0; i < this->currentattrs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->currentattrs(i), output);
  }

  // repeated .BuffContextBean buffContextBeans = 8;
  for (int i = 0; i < this->buffcontextbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->buffcontextbeans(i), output);
  }

  // repeated .ActionStateContextBean actionStateContextBeans = 9;
  for (int i = 0; i < this->actionstatecontextbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->actionstatecontextbeans(i), output);
  }

  // repeated .MagicCDBean magicCDBeans = 10;
  for (int i = 0; i < this->magiccdbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->magiccdbeans(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PetBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // optional uint32 performerId = 3;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->performerid(), target);
  }

  // required uint32 sourceId = 4;
  if (has_sourceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sourceid(), target);
  }

  // required uint64 uid = 5;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->uid(), target);
  }

  // required .CoordinateBean position = 6;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->position(), target);
  }

  // repeated uint32 currentAttrs = 7;
  for (int i = 0; i < this->currentattrs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->currentattrs(i), target);
  }

  // repeated .BuffContextBean buffContextBeans = 8;
  for (int i = 0; i < this->buffcontextbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->buffcontextbeans(i), target);
  }

  // repeated .ActionStateContextBean actionStateContextBeans = 9;
  for (int i = 0; i < this->actionstatecontextbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->actionstatecontextbeans(i), target);
  }

  // repeated .MagicCDBean magicCDBeans = 10;
  for (int i = 0; i < this->magiccdbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->magiccdbeans(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PetBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 performerId = 3;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required uint32 sourceId = 4;
    if (has_sourceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sourceid());
    }

    // required uint64 uid = 5;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // required .CoordinateBean position = 6;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

  }
  // repeated uint32 currentAttrs = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->currentattrs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->currentattrs(i));
    }
    total_size += 1 * this->currentattrs_size() + data_size;
  }

  // repeated .BuffContextBean buffContextBeans = 8;
  total_size += 1 * this->buffcontextbeans_size();
  for (int i = 0; i < this->buffcontextbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buffcontextbeans(i));
  }

  // repeated .ActionStateContextBean actionStateContextBeans = 9;
  total_size += 1 * this->actionstatecontextbeans_size();
  for (int i = 0; i < this->actionstatecontextbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->actionstatecontextbeans(i));
  }

  // repeated .MagicCDBean magicCDBeans = 10;
  total_size += 1 * this->magiccdbeans_size();
  for (int i = 0; i < this->magiccdbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->magiccdbeans(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PetBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PetBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PetBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PetBean::MergeFrom(const PetBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  currentattrs_.MergeFrom(from.currentattrs_);
  buffcontextbeans_.MergeFrom(from.buffcontextbeans_);
  actionstatecontextbeans_.MergeFrom(from.actionstatecontextbeans_);
  magiccdbeans_.MergeFrom(from.magiccdbeans_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_sourceid()) {
      set_sourceid(from.sourceid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_position()) {
      mutable_position()->::CoordinateBean::MergeFrom(from.position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PetBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PetBean::CopyFrom(const PetBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003b) != 0x0000003b) return false;

  for (int i = 0; i < buffcontextbeans_size(); i++) {
    if (!this->buffcontextbeans(i).IsInitialized()) return false;
  }
  for (int i = 0; i < actionstatecontextbeans_size(); i++) {
    if (!this->actionstatecontextbeans(i).IsInitialized()) return false;
  }
  for (int i = 0; i < magiccdbeans_size(); i++) {
    if (!this->magiccdbeans(i).IsInitialized()) return false;
  }
  return true;
}

void PetBean::Swap(PetBean* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(performerid_, other->performerid_);
    std::swap(sourceid_, other->sourceid_);
    std::swap(uid_, other->uid_);
    std::swap(position_, other->position_);
    currentattrs_.Swap(&other->currentattrs_);
    buffcontextbeans_.Swap(&other->buffcontextbeans_);
    actionstatecontextbeans_.Swap(&other->actionstatecontextbeans_);
    magiccdbeans_.Swap(&other->magiccdbeans_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PetBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PetBean_descriptor_;
  metadata.reflection = PetBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BulletBean::kEffectIdFieldNumber;
const int BulletBean::kPerformerIdFieldNumber;
const int BulletBean::kSourceIdFieldNumber;
const int BulletBean::kUidFieldNumber;
const int BulletBean::kPositionFieldNumber;
const int BulletBean::kActionStateContextBeansFieldNumber;
#endif  // !_MSC_VER

BulletBean::BulletBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BulletBean::InitAsDefaultInstance() {
  position_ = const_cast< ::CoordinateBean*>(&::CoordinateBean::default_instance());
}

BulletBean::BulletBean(const BulletBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BulletBean::SharedCtor() {
  _cached_size_ = 0;
  effectid_ = 0u;
  performerid_ = 0u;
  sourceid_ = 0u;
  uid_ = GOOGLE_ULONGLONG(0);
  position_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BulletBean::~BulletBean() {
  SharedDtor();
}

void BulletBean::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void BulletBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BulletBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BulletBean_descriptor_;
}

const BulletBean& BulletBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

BulletBean* BulletBean::default_instance_ = NULL;

BulletBean* BulletBean::New() const {
  return new BulletBean;
}

void BulletBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    effectid_ = 0u;
    performerid_ = 0u;
    sourceid_ = 0u;
    uid_ = GOOGLE_ULONGLONG(0);
    if (has_position()) {
      if (position_ != NULL) position_->::CoordinateBean::Clear();
    }
  }
  actionstatecontextbeans_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BulletBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 effectId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &effectid_)));
          set_has_effectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_performerId;
        break;
      }

      // optional uint32 performerId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_performerId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sourceId;
        break;
      }

      // required uint32 sourceId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sourceId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sourceid_)));
          set_has_sourceid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_uid;
        break;
      }

      // required uint64 uid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_position;
        break;
      }

      // required .CoordinateBean position = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_actionStateContextBeans;
        break;
      }

      // repeated .ActionStateContextBean actionStateContextBeans = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_actionStateContextBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_actionstatecontextbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_actionStateContextBeans;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BulletBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 effectId = 1;
  if (has_effectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->effectid(), output);
  }

  // optional uint32 performerId = 2;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->performerid(), output);
  }

  // required uint32 sourceId = 3;
  if (has_sourceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sourceid(), output);
  }

  // required uint64 uid = 4;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uid(), output);
  }

  // required .CoordinateBean position = 5;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->position(), output);
  }

  // repeated .ActionStateContextBean actionStateContextBeans = 6;
  for (int i = 0; i < this->actionstatecontextbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->actionstatecontextbeans(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BulletBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 effectId = 1;
  if (has_effectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->effectid(), target);
  }

  // optional uint32 performerId = 2;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->performerid(), target);
  }

  // required uint32 sourceId = 3;
  if (has_sourceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sourceid(), target);
  }

  // required uint64 uid = 4;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uid(), target);
  }

  // required .CoordinateBean position = 5;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->position(), target);
  }

  // repeated .ActionStateContextBean actionStateContextBeans = 6;
  for (int i = 0; i < this->actionstatecontextbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->actionstatecontextbeans(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BulletBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 effectId = 1;
    if (has_effectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->effectid());
    }

    // optional uint32 performerId = 2;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required uint32 sourceId = 3;
    if (has_sourceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sourceid());
    }

    // required uint64 uid = 4;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // required .CoordinateBean position = 5;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

  }
  // repeated .ActionStateContextBean actionStateContextBeans = 6;
  total_size += 1 * this->actionstatecontextbeans_size();
  for (int i = 0; i < this->actionstatecontextbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->actionstatecontextbeans(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BulletBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BulletBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BulletBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BulletBean::MergeFrom(const BulletBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  actionstatecontextbeans_.MergeFrom(from.actionstatecontextbeans_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_effectid()) {
      set_effectid(from.effectid());
    }
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_sourceid()) {
      set_sourceid(from.sourceid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_position()) {
      mutable_position()->::CoordinateBean::MergeFrom(from.position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BulletBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulletBean::CopyFrom(const BulletBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulletBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001d) != 0x0000001d) return false;

  for (int i = 0; i < actionstatecontextbeans_size(); i++) {
    if (!this->actionstatecontextbeans(i).IsInitialized()) return false;
  }
  return true;
}

void BulletBean::Swap(BulletBean* other) {
  if (other != this) {
    std::swap(effectid_, other->effectid_);
    std::swap(performerid_, other->performerid_);
    std::swap(sourceid_, other->sourceid_);
    std::swap(uid_, other->uid_);
    std::swap(position_, other->position_);
    actionstatecontextbeans_.Swap(&other->actionstatecontextbeans_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BulletBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BulletBean_descriptor_;
  metadata.reflection = BulletBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TrapBean::kIdFieldNumber;
const int TrapBean::kEffectIdFieldNumber;
const int TrapBean::kStartTimeFieldNumber;
const int TrapBean::kPerformerIdFieldNumber;
const int TrapBean::kSourceIdFieldNumber;
const int TrapBean::kUidFieldNumber;
const int TrapBean::kPositionFieldNumber;
#endif  // !_MSC_VER

TrapBean::TrapBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrapBean::InitAsDefaultInstance() {
  position_ = const_cast< ::CoordinateBean*>(&::CoordinateBean::default_instance());
}

TrapBean::TrapBean(const TrapBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrapBean::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  effectid_ = 0u;
  starttime_ = 0u;
  performerid_ = 0u;
  sourceid_ = 0u;
  uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  position_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrapBean::~TrapBean() {
  SharedDtor();
}

void TrapBean::SharedDtor() {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    delete uid_;
  }
  if (this != default_instance_) {
    delete position_;
  }
}

void TrapBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrapBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrapBean_descriptor_;
}

const TrapBean& TrapBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

TrapBean* TrapBean::default_instance_ = NULL;

TrapBean* TrapBean::New() const {
  return new TrapBean;
}

void TrapBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    effectid_ = 0u;
    starttime_ = 0u;
    performerid_ = 0u;
    sourceid_ = 0u;
    if (has_uid()) {
      if (uid_ != &::google::protobuf::internal::kEmptyString) {
        uid_->clear();
      }
    }
    if (has_position()) {
      if (position_ != NULL) position_->::CoordinateBean::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrapBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_effectId;
        break;
      }

      // required uint32 effectId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effectId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &effectid_)));
          set_has_effectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_startTime;
        break;
      }

      // required uint32 startTime = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_startTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &starttime_)));
          set_has_starttime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_performerId;
        break;
      }

      // optional uint32 performerId = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_performerId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_sourceId;
        break;
      }

      // required uint32 sourceId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sourceId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sourceid_)));
          set_has_sourceid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_uid;
        break;
      }

      // required string uid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_position;
        break;
      }

      // required .CoordinateBean position = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrapBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 effectId = 2;
  if (has_effectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->effectid(), output);
  }

  // required uint32 startTime = 3;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->starttime(), output);
  }

  // optional uint32 performerId = 4;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->performerid(), output);
  }

  // required uint32 sourceId = 5;
  if (has_sourceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sourceid(), output);
  }

  // required string uid = 6;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->uid(), output);
  }

  // required .CoordinateBean position = 7;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->position(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrapBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 effectId = 2;
  if (has_effectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->effectid(), target);
  }

  // required uint32 startTime = 3;
  if (has_starttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->starttime(), target);
  }

  // optional uint32 performerId = 4;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->performerid(), target);
  }

  // required uint32 sourceId = 5;
  if (has_sourceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sourceid(), target);
  }

  // required string uid = 6;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->uid(), target);
  }

  // required .CoordinateBean position = 7;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->position(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrapBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 effectId = 2;
    if (has_effectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->effectid());
    }

    // required uint32 startTime = 3;
    if (has_starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->starttime());
    }

    // optional uint32 performerId = 4;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required uint32 sourceId = 5;
    if (has_sourceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sourceid());
    }

    // required string uid = 6;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }

    // required .CoordinateBean position = 7;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrapBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrapBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrapBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrapBean::MergeFrom(const TrapBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_effectid()) {
      set_effectid(from.effectid());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_sourceid()) {
      set_sourceid(from.sourceid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_position()) {
      mutable_position()->::CoordinateBean::MergeFrom(from.position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrapBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrapBean::CopyFrom(const TrapBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrapBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000077) != 0x00000077) return false;

  return true;
}

void TrapBean::Swap(TrapBean* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(effectid_, other->effectid_);
    std::swap(starttime_, other->starttime_);
    std::swap(performerid_, other->performerid_);
    std::swap(sourceid_, other->sourceid_);
    std::swap(uid_, other->uid_);
    std::swap(position_, other->position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrapBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrapBean_descriptor_;
  metadata.reflection = TrapBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CoordinateBean::kCFieldNumber;
#endif  // !_MSC_VER

CoordinateBean::CoordinateBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CoordinateBean::InitAsDefaultInstance() {
}

CoordinateBean::CoordinateBean(const CoordinateBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CoordinateBean::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CoordinateBean::~CoordinateBean() {
  SharedDtor();
}

void CoordinateBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CoordinateBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CoordinateBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CoordinateBean_descriptor_;
}

const CoordinateBean& CoordinateBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

CoordinateBean* CoordinateBean::default_instance_ = NULL;

CoordinateBean* CoordinateBean::New() const {
  return new CoordinateBean;
}

void CoordinateBean::Clear() {
  c_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CoordinateBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 c = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_c())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_c())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CoordinateBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 c = 1 [packed = true];
  if (this->c_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_c_cached_byte_size_);
  }
  for (int i = 0; i < this->c_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->c(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CoordinateBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 c = 1 [packed = true];
  if (this->c_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _c_cached_byte_size_, target);
  }
  for (int i = 0; i < this->c_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->c(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CoordinateBean::ByteSize() const {
  int total_size = 0;

  // repeated uint32 c = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->c_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->c(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _c_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CoordinateBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CoordinateBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CoordinateBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CoordinateBean::MergeFrom(const CoordinateBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  c_.MergeFrom(from.c_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CoordinateBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoordinateBean::CopyFrom(const CoordinateBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordinateBean::IsInitialized() const {

  return true;
}

void CoordinateBean::Swap(CoordinateBean* other) {
  if (other != this) {
    c_.Swap(&other->c_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CoordinateBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CoordinateBean_descriptor_;
  metadata.reflection = CoordinateBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActionTargetBean::kTargetTypeFieldNumber;
const int ActionTargetBean::kTargetIdFieldNumber;
const int ActionTargetBean::kAreaTargetFieldNumber;
#endif  // !_MSC_VER

ActionTargetBean::ActionTargetBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActionTargetBean::InitAsDefaultInstance() {
  areatarget_ = const_cast< ::CoordinateBean*>(&::CoordinateBean::default_instance());
}

ActionTargetBean::ActionTargetBean(const ActionTargetBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActionTargetBean::SharedCtor() {
  _cached_size_ = 0;
  targettype_ = 0u;
  targetid_ = 0u;
  areatarget_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionTargetBean::~ActionTargetBean() {
  SharedDtor();
}

void ActionTargetBean::SharedDtor() {
  if (this != default_instance_) {
    delete areatarget_;
  }
}

void ActionTargetBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionTargetBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionTargetBean_descriptor_;
}

const ActionTargetBean& ActionTargetBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

ActionTargetBean* ActionTargetBean::default_instance_ = NULL;

ActionTargetBean* ActionTargetBean::New() const {
  return new ActionTargetBean;
}

void ActionTargetBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    targettype_ = 0u;
    targetid_ = 0u;
    if (has_areatarget()) {
      if (areatarget_ != NULL) areatarget_->::CoordinateBean::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActionTargetBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 targetType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targettype_)));
          set_has_targettype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_targetId;
        break;
      }

      // optional uint32 targetId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_targetId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &targetid_)));
          set_has_targetid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_areaTarget;
        break;
      }

      // optional .CoordinateBean areaTarget = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_areaTarget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_areatarget()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActionTargetBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 targetType = 1;
  if (has_targettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->targettype(), output);
  }

  // optional uint32 targetId = 2;
  if (has_targetid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->targetid(), output);
  }

  // optional .CoordinateBean areaTarget = 3;
  if (has_areatarget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->areatarget(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActionTargetBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 targetType = 1;
  if (has_targettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->targettype(), target);
  }

  // optional uint32 targetId = 2;
  if (has_targetid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->targetid(), target);
  }

  // optional .CoordinateBean areaTarget = 3;
  if (has_areatarget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->areatarget(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActionTargetBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 targetType = 1;
    if (has_targettype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targettype());
    }

    // optional uint32 targetId = 2;
    if (has_targetid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->targetid());
    }

    // optional .CoordinateBean areaTarget = 3;
    if (has_areatarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->areatarget());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionTargetBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActionTargetBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActionTargetBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActionTargetBean::MergeFrom(const ActionTargetBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_targettype()) {
      set_targettype(from.targettype());
    }
    if (from.has_targetid()) {
      set_targetid(from.targetid());
    }
    if (from.has_areatarget()) {
      mutable_areatarget()->::CoordinateBean::MergeFrom(from.areatarget());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActionTargetBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionTargetBean::CopyFrom(const ActionTargetBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionTargetBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ActionTargetBean::Swap(ActionTargetBean* other) {
  if (other != this) {
    std::swap(targettype_, other->targettype_);
    std::swap(targetid_, other->targetid_);
    std::swap(areatarget_, other->areatarget_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActionTargetBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionTargetBean_descriptor_;
  metadata.reflection = ActionTargetBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MagicEffectBean::kEidFieldNumber;
const int MagicEffectBean::kPerformerEffectBeansFieldNumber;
const int MagicEffectBean::kTrapBeanFieldNumber;
const int MagicEffectBean::kPetBeanFieldNumber;
#endif  // !_MSC_VER

MagicEffectBean::MagicEffectBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MagicEffectBean::InitAsDefaultInstance() {
}

MagicEffectBean::MagicEffectBean(const MagicEffectBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MagicEffectBean::SharedCtor() {
  _cached_size_ = 0;
  eid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MagicEffectBean::~MagicEffectBean() {
  SharedDtor();
}

void MagicEffectBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MagicEffectBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MagicEffectBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MagicEffectBean_descriptor_;
}

const MagicEffectBean& MagicEffectBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

MagicEffectBean* MagicEffectBean::default_instance_ = NULL;

MagicEffectBean* MagicEffectBean::New() const {
  return new MagicEffectBean;
}

void MagicEffectBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    eid_ = 0u;
  }
  performereffectbeans_.Clear();
  trapbean_.Clear();
  petbean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MagicEffectBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 eid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eid_)));
          set_has_eid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_performerEffectBeans;
        break;
      }

      // repeated .PerformerEffectBean performerEffectBeans = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_performerEffectBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_performereffectbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_performerEffectBeans;
        if (input->ExpectTag(26)) goto parse_trapBean;
        break;
      }

      // repeated .MagicTrapBean trapBean = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trapBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trapbean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_trapBean;
        if (input->ExpectTag(34)) goto parse_petBean;
        break;
      }

      // repeated .MagicPetBean petBean = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_petBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_petbean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_petBean;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MagicEffectBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 eid = 1;
  if (has_eid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eid(), output);
  }

  // repeated .PerformerEffectBean performerEffectBeans = 2;
  for (int i = 0; i < this->performereffectbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->performereffectbeans(i), output);
  }

  // repeated .MagicTrapBean trapBean = 3;
  for (int i = 0; i < this->trapbean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->trapbean(i), output);
  }

  // repeated .MagicPetBean petBean = 4;
  for (int i = 0; i < this->petbean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->petbean(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MagicEffectBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 eid = 1;
  if (has_eid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eid(), target);
  }

  // repeated .PerformerEffectBean performerEffectBeans = 2;
  for (int i = 0; i < this->performereffectbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->performereffectbeans(i), target);
  }

  // repeated .MagicTrapBean trapBean = 3;
  for (int i = 0; i < this->trapbean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->trapbean(i), target);
  }

  // repeated .MagicPetBean petBean = 4;
  for (int i = 0; i < this->petbean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->petbean(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MagicEffectBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 eid = 1;
    if (has_eid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eid());
    }

  }
  // repeated .PerformerEffectBean performerEffectBeans = 2;
  total_size += 1 * this->performereffectbeans_size();
  for (int i = 0; i < this->performereffectbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->performereffectbeans(i));
  }

  // repeated .MagicTrapBean trapBean = 3;
  total_size += 1 * this->trapbean_size();
  for (int i = 0; i < this->trapbean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trapbean(i));
  }

  // repeated .MagicPetBean petBean = 4;
  total_size += 1 * this->petbean_size();
  for (int i = 0; i < this->petbean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->petbean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MagicEffectBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MagicEffectBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MagicEffectBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MagicEffectBean::MergeFrom(const MagicEffectBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  performereffectbeans_.MergeFrom(from.performereffectbeans_);
  trapbean_.MergeFrom(from.trapbean_);
  petbean_.MergeFrom(from.petbean_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eid()) {
      set_eid(from.eid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MagicEffectBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MagicEffectBean::CopyFrom(const MagicEffectBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MagicEffectBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < performereffectbeans_size(); i++) {
    if (!this->performereffectbeans(i).IsInitialized()) return false;
  }
  for (int i = 0; i < trapbean_size(); i++) {
    if (!this->trapbean(i).IsInitialized()) return false;
  }
  for (int i = 0; i < petbean_size(); i++) {
    if (!this->petbean(i).IsInitialized()) return false;
  }
  return true;
}

void MagicEffectBean::Swap(MagicEffectBean* other) {
  if (other != this) {
    std::swap(eid_, other->eid_);
    performereffectbeans_.Swap(&other->performereffectbeans_);
    trapbean_.Swap(&other->trapbean_);
    petbean_.Swap(&other->petbean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MagicEffectBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MagicEffectBean_descriptor_;
  metadata.reflection = MagicEffectBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PerformerEffectBean::kPidFieldNumber;
const int PerformerEffectBean::kValuesFieldNumber;
const int PerformerEffectBean::kEffectsFieldNumber;
const int PerformerEffectBean::kCreateBuffsFieldNumber;
const int PerformerEffectBean::kDeleteBuffsFieldNumber;
#endif  // !_MSC_VER

PerformerEffectBean::PerformerEffectBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PerformerEffectBean::InitAsDefaultInstance() {
}

PerformerEffectBean::PerformerEffectBean(const PerformerEffectBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PerformerEffectBean::SharedCtor() {
  _cached_size_ = 0;
  pid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PerformerEffectBean::~PerformerEffectBean() {
  SharedDtor();
}

void PerformerEffectBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PerformerEffectBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerformerEffectBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PerformerEffectBean_descriptor_;
}

const PerformerEffectBean& PerformerEffectBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

PerformerEffectBean* PerformerEffectBean::default_instance_ = NULL;

PerformerEffectBean* PerformerEffectBean::New() const {
  return new PerformerEffectBean;
}

void PerformerEffectBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pid_ = 0u;
  }
  values_.Clear();
  effects_.Clear();
  createbuffs_.Clear();
  deletebuffs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PerformerEffectBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 pid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_values;
        break;
      }

      // repeated uint32 values = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_values:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_values())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_values())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_values;
        if (input->ExpectTag(24)) goto parse_effects;
        break;
      }

      // repeated uint32 effects = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effects:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_effects())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_effects())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_effects;
        if (input->ExpectTag(32)) goto parse_createBuffs;
        break;
      }

      // repeated uint32 createBuffs = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_createBuffs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_createbuffs())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_createbuffs())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_createBuffs;
        if (input->ExpectTag(40)) goto parse_deleteBuffs;
        break;
      }

      // repeated uint32 deleteBuffs = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_deleteBuffs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40, input, this->mutable_deletebuffs())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_deletebuffs())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_deleteBuffs;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PerformerEffectBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 pid = 1;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pid(), output);
  }

  // repeated uint32 values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->values(i), output);
  }

  // repeated uint32 effects = 3;
  for (int i = 0; i < this->effects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->effects(i), output);
  }

  // repeated uint32 createBuffs = 4;
  for (int i = 0; i < this->createbuffs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->createbuffs(i), output);
  }

  // repeated uint32 deleteBuffs = 5;
  for (int i = 0; i < this->deletebuffs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->deletebuffs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PerformerEffectBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 pid = 1;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pid(), target);
  }

  // repeated uint32 values = 2;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->values(i), target);
  }

  // repeated uint32 effects = 3;
  for (int i = 0; i < this->effects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->effects(i), target);
  }

  // repeated uint32 createBuffs = 4;
  for (int i = 0; i < this->createbuffs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->createbuffs(i), target);
  }

  // repeated uint32 deleteBuffs = 5;
  for (int i = 0; i < this->deletebuffs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(5, this->deletebuffs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PerformerEffectBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

  }
  // repeated uint32 values = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->values_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->values(i));
    }
    total_size += 1 * this->values_size() + data_size;
  }

  // repeated uint32 effects = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->effects_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->effects(i));
    }
    total_size += 1 * this->effects_size() + data_size;
  }

  // repeated uint32 createBuffs = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->createbuffs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->createbuffs(i));
    }
    total_size += 1 * this->createbuffs_size() + data_size;
  }

  // repeated uint32 deleteBuffs = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->deletebuffs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->deletebuffs(i));
    }
    total_size += 1 * this->deletebuffs_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerformerEffectBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PerformerEffectBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PerformerEffectBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PerformerEffectBean::MergeFrom(const PerformerEffectBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  values_.MergeFrom(from.values_);
  effects_.MergeFrom(from.effects_);
  createbuffs_.MergeFrom(from.createbuffs_);
  deletebuffs_.MergeFrom(from.deletebuffs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pid()) {
      set_pid(from.pid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PerformerEffectBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerformerEffectBean::CopyFrom(const PerformerEffectBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerformerEffectBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PerformerEffectBean::Swap(PerformerEffectBean* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    values_.Swap(&other->values_);
    effects_.Swap(&other->effects_);
    createbuffs_.Swap(&other->createbuffs_);
    deletebuffs_.Swap(&other->deletebuffs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PerformerEffectBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PerformerEffectBean_descriptor_;
  metadata.reflection = PerformerEffectBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MagicTrapBean::kTidFieldNumber;
const int MagicTrapBean::kPositionFieldNumber;
const int MagicTrapBean::kEidFieldNumber;
#endif  // !_MSC_VER

MagicTrapBean::MagicTrapBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MagicTrapBean::InitAsDefaultInstance() {
  position_ = const_cast< ::CoordinateBean*>(&::CoordinateBean::default_instance());
}

MagicTrapBean::MagicTrapBean(const MagicTrapBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MagicTrapBean::SharedCtor() {
  _cached_size_ = 0;
  tid_ = 0u;
  position_ = NULL;
  eid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MagicTrapBean::~MagicTrapBean() {
  SharedDtor();
}

void MagicTrapBean::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void MagicTrapBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MagicTrapBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MagicTrapBean_descriptor_;
}

const MagicTrapBean& MagicTrapBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

MagicTrapBean* MagicTrapBean::default_instance_ = NULL;

MagicTrapBean* MagicTrapBean::New() const {
  return new MagicTrapBean;
}

void MagicTrapBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tid_ = 0u;
    if (has_position()) {
      if (position_ != NULL) position_->::CoordinateBean::Clear();
    }
    eid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MagicTrapBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_position;
        break;
      }

      // required .CoordinateBean position = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_eid;
        break;
      }

      // required uint32 eid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_eid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eid_)));
          set_has_eid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MagicTrapBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 tid = 1;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tid(), output);
  }

  // required .CoordinateBean position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->position(), output);
  }

  // required uint32 eid = 3;
  if (has_eid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->eid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MagicTrapBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 tid = 1;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tid(), target);
  }

  // required .CoordinateBean position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }

  // required uint32 eid = 3;
  if (has_eid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->eid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MagicTrapBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 tid = 1;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tid());
    }

    // required .CoordinateBean position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // required uint32 eid = 3;
    if (has_eid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MagicTrapBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MagicTrapBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MagicTrapBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MagicTrapBean::MergeFrom(const MagicTrapBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_position()) {
      mutable_position()->::CoordinateBean::MergeFrom(from.position());
    }
    if (from.has_eid()) {
      set_eid(from.eid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MagicTrapBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MagicTrapBean::CopyFrom(const MagicTrapBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MagicTrapBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MagicTrapBean::Swap(MagicTrapBean* other) {
  if (other != this) {
    std::swap(tid_, other->tid_);
    std::swap(position_, other->position_);
    std::swap(eid_, other->eid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MagicTrapBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MagicTrapBean_descriptor_;
  metadata.reflection = MagicTrapBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MagicPetBean::kPidFieldNumber;
const int MagicPetBean::kPositionFieldNumber;
const int MagicPetBean::kKeyIdFieldNumber;
#endif  // !_MSC_VER

MagicPetBean::MagicPetBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MagicPetBean::InitAsDefaultInstance() {
  position_ = const_cast< ::CoordinateBean*>(&::CoordinateBean::default_instance());
}

MagicPetBean::MagicPetBean(const MagicPetBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MagicPetBean::SharedCtor() {
  _cached_size_ = 0;
  pid_ = 0u;
  position_ = NULL;
  keyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MagicPetBean::~MagicPetBean() {
  SharedDtor();
}

void MagicPetBean::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void MagicPetBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MagicPetBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MagicPetBean_descriptor_;
}

const MagicPetBean& MagicPetBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

MagicPetBean* MagicPetBean::default_instance_ = NULL;

MagicPetBean* MagicPetBean::New() const {
  return new MagicPetBean;
}

void MagicPetBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pid_ = 0u;
    if (has_position()) {
      if (position_ != NULL) position_->::CoordinateBean::Clear();
    }
    keyid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MagicPetBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 pid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_position;
        break;
      }

      // required .CoordinateBean position = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_keyId;
        break;
      }

      // required uint32 keyId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_keyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &keyid_)));
          set_has_keyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MagicPetBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 pid = 1;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pid(), output);
  }

  // required .CoordinateBean position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->position(), output);
  }

  // required uint32 keyId = 3;
  if (has_keyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->keyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MagicPetBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 pid = 1;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pid(), target);
  }

  // required .CoordinateBean position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }

  // required uint32 keyId = 3;
  if (has_keyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->keyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MagicPetBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // required .CoordinateBean position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // required uint32 keyId = 3;
    if (has_keyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->keyid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MagicPetBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MagicPetBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MagicPetBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MagicPetBean::MergeFrom(const MagicPetBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_position()) {
      mutable_position()->::CoordinateBean::MergeFrom(from.position());
    }
    if (from.has_keyid()) {
      set_keyid(from.keyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MagicPetBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MagicPetBean::CopyFrom(const MagicPetBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MagicPetBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MagicPetBean::Swap(MagicPetBean* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    std::swap(position_, other->position_);
    std::swap(keyid_, other->keyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MagicPetBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MagicPetBean_descriptor_;
  metadata.reflection = MagicPetBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MagicResaultBean::kEffectBeansFieldNumber;
#endif  // !_MSC_VER

MagicResaultBean::MagicResaultBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MagicResaultBean::InitAsDefaultInstance() {
}

MagicResaultBean::MagicResaultBean(const MagicResaultBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MagicResaultBean::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MagicResaultBean::~MagicResaultBean() {
  SharedDtor();
}

void MagicResaultBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MagicResaultBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MagicResaultBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MagicResaultBean_descriptor_;
}

const MagicResaultBean& MagicResaultBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

MagicResaultBean* MagicResaultBean::default_instance_ = NULL;

MagicResaultBean* MagicResaultBean::New() const {
  return new MagicResaultBean;
}

void MagicResaultBean::Clear() {
  effectbeans_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MagicResaultBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MagicEffectBean effectBeans = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_effectBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_effectbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_effectBeans;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MagicResaultBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .MagicEffectBean effectBeans = 1;
  for (int i = 0; i < this->effectbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->effectbeans(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MagicResaultBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MagicEffectBean effectBeans = 1;
  for (int i = 0; i < this->effectbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->effectbeans(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MagicResaultBean::ByteSize() const {
  int total_size = 0;

  // repeated .MagicEffectBean effectBeans = 1;
  total_size += 1 * this->effectbeans_size();
  for (int i = 0; i < this->effectbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->effectbeans(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MagicResaultBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MagicResaultBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MagicResaultBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MagicResaultBean::MergeFrom(const MagicResaultBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  effectbeans_.MergeFrom(from.effectbeans_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MagicResaultBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MagicResaultBean::CopyFrom(const MagicResaultBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MagicResaultBean::IsInitialized() const {

  for (int i = 0; i < effectbeans_size(); i++) {
    if (!this->effectbeans(i).IsInitialized()) return false;
  }
  return true;
}

void MagicResaultBean::Swap(MagicResaultBean* other) {
  if (other != this) {
    effectbeans_.Swap(&other->effectbeans_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MagicResaultBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MagicResaultBean_descriptor_;
  metadata.reflection = MagicResaultBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TrapTriggerBean::kPidFieldNumber;
const int TrapTriggerBean::kValueFieldNumber;
const int TrapTriggerBean::kBuffKeyIdFieldNumber;
#endif  // !_MSC_VER

TrapTriggerBean::TrapTriggerBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrapTriggerBean::InitAsDefaultInstance() {
}

TrapTriggerBean::TrapTriggerBean(const TrapTriggerBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrapTriggerBean::SharedCtor() {
  _cached_size_ = 0;
  pid_ = 0u;
  value_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrapTriggerBean::~TrapTriggerBean() {
  SharedDtor();
}

void TrapTriggerBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrapTriggerBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrapTriggerBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrapTriggerBean_descriptor_;
}

const TrapTriggerBean& TrapTriggerBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

TrapTriggerBean* TrapTriggerBean::default_instance_ = NULL;

TrapTriggerBean* TrapTriggerBean::New() const {
  return new TrapTriggerBean;
}

void TrapTriggerBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pid_ = 0u;
    value_ = 0u;
  }
  buffkeyid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrapTriggerBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 pid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }

      // optional uint32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_buffKeyId;
        break;
      }

      // repeated uint32 buffKeyId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buffKeyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_buffkeyid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buffkeyid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_buffKeyId;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrapTriggerBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 pid = 1;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pid(), output);
  }

  // optional uint32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value(), output);
  }

  // repeated uint32 buffKeyId = 3;
  for (int i = 0; i < this->buffkeyid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->buffkeyid(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrapTriggerBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 pid = 1;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pid(), target);
  }

  // optional uint32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value(), target);
  }

  // repeated uint32 buffKeyId = 3;
  for (int i = 0; i < this->buffkeyid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->buffkeyid(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrapTriggerBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value());
    }

  }
  // repeated uint32 buffKeyId = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->buffkeyid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->buffkeyid(i));
    }
    total_size += 1 * this->buffkeyid_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrapTriggerBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrapTriggerBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrapTriggerBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrapTriggerBean::MergeFrom(const TrapTriggerBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  buffkeyid_.MergeFrom(from.buffkeyid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrapTriggerBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrapTriggerBean::CopyFrom(const TrapTriggerBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrapTriggerBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrapTriggerBean::Swap(TrapTriggerBean* other) {
  if (other != this) {
    std::swap(pid_, other->pid_);
    std::swap(value_, other->value_);
    buffkeyid_.Swap(&other->buffkeyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrapTriggerBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrapTriggerBean_descriptor_;
  metadata.reflection = TrapTriggerBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AttachBattleUp::kBattleIdFieldNumber;
const int AttachBattleUp::kUserIdFieldNumber;
#endif  // !_MSC_VER

AttachBattleUp::AttachBattleUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AttachBattleUp::InitAsDefaultInstance() {
}

AttachBattleUp::AttachBattleUp(const AttachBattleUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AttachBattleUp::SharedCtor() {
  _cached_size_ = 0;
  battleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AttachBattleUp::~AttachBattleUp() {
  SharedDtor();
}

void AttachBattleUp::SharedDtor() {
  if (battleid_ != &::google::protobuf::internal::kEmptyString) {
    delete battleid_;
  }
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (this != default_instance_) {
  }
}

void AttachBattleUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttachBattleUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttachBattleUp_descriptor_;
}

const AttachBattleUp& AttachBattleUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

AttachBattleUp* AttachBattleUp::default_instance_ = NULL;

AttachBattleUp* AttachBattleUp::New() const {
  return new AttachBattleUp;
}

void AttachBattleUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_battleid()) {
      if (battleid_ != &::google::protobuf::internal::kEmptyString) {
        battleid_->clear();
      }
    }
    if (has_userid()) {
      if (userid_ != &::google::protobuf::internal::kEmptyString) {
        userid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AttachBattleUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string battleId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_battleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->battleid().data(), this->battleid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_userId;
        break;
      }

      // required string userId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AttachBattleUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string battleId = 1;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->battleid().data(), this->battleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->battleid(), output);
  }

  // required string userId = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->userid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AttachBattleUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string battleId = 1;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->battleid().data(), this->battleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->battleid(), target);
  }

  // required string userId = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AttachBattleUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string battleId = 1;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->battleid());
    }

    // required string userId = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttachBattleUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AttachBattleUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AttachBattleUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AttachBattleUp::MergeFrom(const AttachBattleUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AttachBattleUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachBattleUp::CopyFrom(const AttachBattleUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachBattleUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AttachBattleUp::Swap(AttachBattleUp* other) {
  if (other != this) {
    std::swap(battleid_, other->battleid_);
    std::swap(userid_, other->userid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AttachBattleUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttachBattleUp_descriptor_;
  metadata.reflection = AttachBattleUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AttachBattleDown::kStateFieldNumber;
const int AttachBattleDown::kSyncBattleDownFieldNumber;
const int AttachBattleDown::kCountdownFieldNumber;
#endif  // !_MSC_VER

AttachBattleDown::AttachBattleDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AttachBattleDown::InitAsDefaultInstance() {
  syncbattledown_ = const_cast< ::SyncBattleDown*>(&::SyncBattleDown::default_instance());
}

AttachBattleDown::AttachBattleDown(const AttachBattleDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AttachBattleDown::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0u;
  syncbattledown_ = NULL;
  countdown_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AttachBattleDown::~AttachBattleDown() {
  SharedDtor();
}

void AttachBattleDown::SharedDtor() {
  if (this != default_instance_) {
    delete syncbattledown_;
  }
}

void AttachBattleDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttachBattleDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttachBattleDown_descriptor_;
}

const AttachBattleDown& AttachBattleDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

AttachBattleDown* AttachBattleDown::default_instance_ = NULL;

AttachBattleDown* AttachBattleDown::New() const {
  return new AttachBattleDown;
}

void AttachBattleDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 0u;
    if (has_syncbattledown()) {
      if (syncbattledown_ != NULL) syncbattledown_->::SyncBattleDown::Clear();
    }
    countdown_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AttachBattleDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_syncBattleDown;
        break;
      }

      // optional .SyncBattleDown syncBattleDown = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_syncBattleDown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_syncbattledown()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_countdown;
        break;
      }

      // optional uint32 countdown = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_countdown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &countdown_)));
          set_has_countdown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AttachBattleDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->state(), output);
  }

  // optional .SyncBattleDown syncBattleDown = 2;
  if (has_syncbattledown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->syncbattledown(), output);
  }

  // optional uint32 countdown = 3;
  if (has_countdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->countdown(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AttachBattleDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->state(), target);
  }

  // optional .SyncBattleDown syncBattleDown = 2;
  if (has_syncbattledown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->syncbattledown(), target);
  }

  // optional uint32 countdown = 3;
  if (has_countdown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->countdown(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AttachBattleDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // optional .SyncBattleDown syncBattleDown = 2;
    if (has_syncbattledown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->syncbattledown());
    }

    // optional uint32 countdown = 3;
    if (has_countdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->countdown());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttachBattleDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AttachBattleDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AttachBattleDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AttachBattleDown::MergeFrom(const AttachBattleDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_syncbattledown()) {
      mutable_syncbattledown()->::SyncBattleDown::MergeFrom(from.syncbattledown());
    }
    if (from.has_countdown()) {
      set_countdown(from.countdown());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AttachBattleDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachBattleDown::CopyFrom(const AttachBattleDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachBattleDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_syncbattledown()) {
    if (!this->syncbattledown().IsInitialized()) return false;
  }
  return true;
}

void AttachBattleDown::Swap(AttachBattleDown* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(syncbattledown_, other->syncbattledown_);
    std::swap(countdown_, other->countdown_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AttachBattleDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttachBattleDown_descriptor_;
  metadata.reflection = AttachBattleDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncBattleUp::kBattleIdFieldNumber;
const int SyncBattleUp::kUserIdFieldNumber;
#endif  // !_MSC_VER

SyncBattleUp::SyncBattleUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncBattleUp::InitAsDefaultInstance() {
}

SyncBattleUp::SyncBattleUp(const SyncBattleUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncBattleUp::SharedCtor() {
  _cached_size_ = 0;
  battleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncBattleUp::~SyncBattleUp() {
  SharedDtor();
}

void SyncBattleUp::SharedDtor() {
  if (battleid_ != &::google::protobuf::internal::kEmptyString) {
    delete battleid_;
  }
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (this != default_instance_) {
  }
}

void SyncBattleUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncBattleUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncBattleUp_descriptor_;
}

const SyncBattleUp& SyncBattleUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

SyncBattleUp* SyncBattleUp::default_instance_ = NULL;

SyncBattleUp* SyncBattleUp::New() const {
  return new SyncBattleUp;
}

void SyncBattleUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_battleid()) {
      if (battleid_ != &::google::protobuf::internal::kEmptyString) {
        battleid_->clear();
      }
    }
    if (has_userid()) {
      if (userid_ != &::google::protobuf::internal::kEmptyString) {
        userid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncBattleUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string battleId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_battleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->battleid().data(), this->battleid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_userId;
        break;
      }

      // required string userId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncBattleUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string battleId = 1;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->battleid().data(), this->battleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->battleid(), output);
  }

  // required string userId = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->userid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncBattleUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string battleId = 1;
  if (has_battleid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->battleid().data(), this->battleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->battleid(), target);
  }

  // required string userId = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncBattleUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string battleId = 1;
    if (has_battleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->battleid());
    }

    // required string userId = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncBattleUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncBattleUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncBattleUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncBattleUp::MergeFrom(const SyncBattleUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battleid()) {
      set_battleid(from.battleid());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncBattleUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncBattleUp::CopyFrom(const SyncBattleUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncBattleUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SyncBattleUp::Swap(SyncBattleUp* other) {
  if (other != this) {
    std::swap(battleid_, other->battleid_);
    std::swap(userid_, other->userid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncBattleUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncBattleUp_descriptor_;
  metadata.reflection = SyncBattleUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncBattleDown::kBattleBeanFieldNumber;
const int SyncBattleDown::kHeroBeansFieldNumber;
const int SyncBattleDown::kPetBeansFieldNumber;
const int SyncBattleDown::kBulletBeansFieldNumber;
const int SyncBattleDown::kTrapBeansFieldNumber;
const int SyncBattleDown::kPlayerBeansFieldNumber;
#endif  // !_MSC_VER

SyncBattleDown::SyncBattleDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SyncBattleDown::InitAsDefaultInstance() {
  battlebean_ = const_cast< ::BattleBean*>(&::BattleBean::default_instance());
}

SyncBattleDown::SyncBattleDown(const SyncBattleDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SyncBattleDown::SharedCtor() {
  _cached_size_ = 0;
  battlebean_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncBattleDown::~SyncBattleDown() {
  SharedDtor();
}

void SyncBattleDown::SharedDtor() {
  if (this != default_instance_) {
    delete battlebean_;
  }
}

void SyncBattleDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncBattleDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncBattleDown_descriptor_;
}

const SyncBattleDown& SyncBattleDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

SyncBattleDown* SyncBattleDown::default_instance_ = NULL;

SyncBattleDown* SyncBattleDown::New() const {
  return new SyncBattleDown;
}

void SyncBattleDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_battlebean()) {
      if (battlebean_ != NULL) battlebean_->::BattleBean::Clear();
    }
  }
  herobeans_.Clear();
  petbeans_.Clear();
  bulletbeans_.Clear();
  trapbeans_.Clear();
  playerbeans_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncBattleDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BattleBean battleBean = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battlebean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_heroBeans;
        break;
      }

      // repeated .HeroBean heroBeans = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heroBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herobeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_heroBeans;
        if (input->ExpectTag(26)) goto parse_petBeans;
        break;
      }

      // repeated .PetBean petBeans = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_petBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_petbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_petBeans;
        if (input->ExpectTag(34)) goto parse_bulletBeans;
        break;
      }

      // repeated .BulletBean bulletBeans = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bulletBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bulletbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bulletBeans;
        if (input->ExpectTag(42)) goto parse_trapBeans;
        break;
      }

      // repeated .TrapBean trapBeans = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trapBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trapbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_trapBeans;
        if (input->ExpectTag(50)) goto parse_playerBeans;
        break;
      }

      // repeated .PlayerBean playerBeans = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_playerBeans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_playerbeans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_playerBeans;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SyncBattleDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .BattleBean battleBean = 1;
  if (has_battlebean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->battlebean(), output);
  }

  // repeated .HeroBean heroBeans = 2;
  for (int i = 0; i < this->herobeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->herobeans(i), output);
  }

  // repeated .PetBean petBeans = 3;
  for (int i = 0; i < this->petbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->petbeans(i), output);
  }

  // repeated .BulletBean bulletBeans = 4;
  for (int i = 0; i < this->bulletbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bulletbeans(i), output);
  }

  // repeated .TrapBean trapBeans = 5;
  for (int i = 0; i < this->trapbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->trapbeans(i), output);
  }

  // repeated .PlayerBean playerBeans = 6;
  for (int i = 0; i < this->playerbeans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->playerbeans(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SyncBattleDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .BattleBean battleBean = 1;
  if (has_battlebean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->battlebean(), target);
  }

  // repeated .HeroBean heroBeans = 2;
  for (int i = 0; i < this->herobeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->herobeans(i), target);
  }

  // repeated .PetBean petBeans = 3;
  for (int i = 0; i < this->petbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->petbeans(i), target);
  }

  // repeated .BulletBean bulletBeans = 4;
  for (int i = 0; i < this->bulletbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->bulletbeans(i), target);
  }

  // repeated .TrapBean trapBeans = 5;
  for (int i = 0; i < this->trapbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->trapbeans(i), target);
  }

  // repeated .PlayerBean playerBeans = 6;
  for (int i = 0; i < this->playerbeans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->playerbeans(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SyncBattleDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .BattleBean battleBean = 1;
    if (has_battlebean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->battlebean());
    }

  }
  // repeated .HeroBean heroBeans = 2;
  total_size += 1 * this->herobeans_size();
  for (int i = 0; i < this->herobeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herobeans(i));
  }

  // repeated .PetBean petBeans = 3;
  total_size += 1 * this->petbeans_size();
  for (int i = 0; i < this->petbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->petbeans(i));
  }

  // repeated .BulletBean bulletBeans = 4;
  total_size += 1 * this->bulletbeans_size();
  for (int i = 0; i < this->bulletbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bulletbeans(i));
  }

  // repeated .TrapBean trapBeans = 5;
  total_size += 1 * this->trapbeans_size();
  for (int i = 0; i < this->trapbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trapbeans(i));
  }

  // repeated .PlayerBean playerBeans = 6;
  total_size += 1 * this->playerbeans_size();
  for (int i = 0; i < this->playerbeans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playerbeans(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncBattleDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncBattleDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncBattleDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncBattleDown::MergeFrom(const SyncBattleDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  herobeans_.MergeFrom(from.herobeans_);
  petbeans_.MergeFrom(from.petbeans_);
  bulletbeans_.MergeFrom(from.bulletbeans_);
  trapbeans_.MergeFrom(from.trapbeans_);
  playerbeans_.MergeFrom(from.playerbeans_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_battlebean()) {
      mutable_battlebean()->::BattleBean::MergeFrom(from.battlebean());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncBattleDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncBattleDown::CopyFrom(const SyncBattleDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncBattleDown::IsInitialized() const {

  if (has_battlebean()) {
    if (!this->battlebean().IsInitialized()) return false;
  }
  for (int i = 0; i < herobeans_size(); i++) {
    if (!this->herobeans(i).IsInitialized()) return false;
  }
  for (int i = 0; i < petbeans_size(); i++) {
    if (!this->petbeans(i).IsInitialized()) return false;
  }
  for (int i = 0; i < bulletbeans_size(); i++) {
    if (!this->bulletbeans(i).IsInitialized()) return false;
  }
  for (int i = 0; i < trapbeans_size(); i++) {
    if (!this->trapbeans(i).IsInitialized()) return false;
  }
  for (int i = 0; i < playerbeans_size(); i++) {
    if (!this->playerbeans(i).IsInitialized()) return false;
  }
  return true;
}

void SyncBattleDown::Swap(SyncBattleDown* other) {
  if (other != this) {
    std::swap(battlebean_, other->battlebean_);
    herobeans_.Swap(&other->herobeans_);
    petbeans_.Swap(&other->petbeans_);
    bulletbeans_.Swap(&other->bulletbeans_);
    trapbeans_.Swap(&other->trapbeans_);
    playerbeans_.Swap(&other->playerbeans_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncBattleDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncBattleDown_descriptor_;
  metadata.reflection = SyncBattleDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BattleStepDown::kStepFieldNumber;
#endif  // !_MSC_VER

BattleStepDown::BattleStepDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BattleStepDown::InitAsDefaultInstance() {
}

BattleStepDown::BattleStepDown(const BattleStepDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BattleStepDown::SharedCtor() {
  _cached_size_ = 0;
  step_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleStepDown::~BattleStepDown() {
  SharedDtor();
}

void BattleStepDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleStepDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleStepDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleStepDown_descriptor_;
}

const BattleStepDown& BattleStepDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

BattleStepDown* BattleStepDown::default_instance_ = NULL;

BattleStepDown* BattleStepDown::New() const {
  return new BattleStepDown;
}

void BattleStepDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    step_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BattleStepDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 step = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &step_)));
          set_has_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BattleStepDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 step = 1;
  if (has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->step(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BattleStepDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 step = 1;
  if (has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->step(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BattleStepDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 step = 1;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->step());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleStepDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BattleStepDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BattleStepDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BattleStepDown::MergeFrom(const BattleStepDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_step()) {
      set_step(from.step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BattleStepDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleStepDown::CopyFrom(const BattleStepDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleStepDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BattleStepDown::Swap(BattleStepDown* other) {
  if (other != this) {
    std::swap(step_, other->step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BattleStepDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleStepDown_descriptor_;
  metadata.reflection = BattleStepDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MagicActionUp::kPerformerIdFieldNumber;
const int MagicActionUp::kSkillIdFieldNumber;
const int MagicActionUp::kActionTargetFieldNumber;
#endif  // !_MSC_VER

MagicActionUp::MagicActionUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MagicActionUp::InitAsDefaultInstance() {
  actiontarget_ = const_cast< ::ActionTargetBean*>(&::ActionTargetBean::default_instance());
}

MagicActionUp::MagicActionUp(const MagicActionUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MagicActionUp::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  skillid_ = 0u;
  actiontarget_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MagicActionUp::~MagicActionUp() {
  SharedDtor();
}

void MagicActionUp::SharedDtor() {
  if (this != default_instance_) {
    delete actiontarget_;
  }
}

void MagicActionUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MagicActionUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MagicActionUp_descriptor_;
}

const MagicActionUp& MagicActionUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

MagicActionUp* MagicActionUp::default_instance_ = NULL;

MagicActionUp* MagicActionUp::New() const {
  return new MagicActionUp;
}

void MagicActionUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
    skillid_ = 0u;
    if (has_actiontarget()) {
      if (actiontarget_ != NULL) actiontarget_->::ActionTargetBean::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MagicActionUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skillId;
        break;
      }

      // required uint32 skillId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_actionTarget;
        break;
      }

      // required .ActionTargetBean actionTarget = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_actionTarget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_actiontarget()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MagicActionUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  // required uint32 skillId = 2;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skillid(), output);
  }

  // required .ActionTargetBean actionTarget = 3;
  if (has_actiontarget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->actiontarget(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MagicActionUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  // required uint32 skillId = 2;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skillid(), target);
  }

  // required .ActionTargetBean actionTarget = 3;
  if (has_actiontarget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->actiontarget(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MagicActionUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required uint32 skillId = 2;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

    // required .ActionTargetBean actionTarget = 3;
    if (has_actiontarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actiontarget());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MagicActionUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MagicActionUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MagicActionUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MagicActionUp::MergeFrom(const MagicActionUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_actiontarget()) {
      mutable_actiontarget()->::ActionTargetBean::MergeFrom(from.actiontarget());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MagicActionUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MagicActionUp::CopyFrom(const MagicActionUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MagicActionUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_actiontarget()) {
    if (!this->actiontarget().IsInitialized()) return false;
  }
  return true;
}

void MagicActionUp::Swap(MagicActionUp* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(skillid_, other->skillid_);
    std::swap(actiontarget_, other->actiontarget_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MagicActionUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MagicActionUp_descriptor_;
  metadata.reflection = MagicActionUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MagicActionDown::kPerformerIdFieldNumber;
const int MagicActionDown::kSkillIdFieldNumber;
const int MagicActionDown::kActionTargetFieldNumber;
const int MagicActionDown::kStateFieldNumber;
const int MagicActionDown::kMagicResaultBeanFieldNumber;
const int MagicActionDown::kSourceFieldNumber;
const int MagicActionDown::kMstateFieldNumber;
const int MagicActionDown::kErrorTypeFieldNumber;
const int MagicActionDown::kErrorValueFieldNumber;
#endif  // !_MSC_VER

MagicActionDown::MagicActionDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MagicActionDown::InitAsDefaultInstance() {
  actiontarget_ = const_cast< ::ActionTargetBean*>(&::ActionTargetBean::default_instance());
  magicresaultbean_ = const_cast< ::MagicResaultBean*>(&::MagicResaultBean::default_instance());
}

MagicActionDown::MagicActionDown(const MagicActionDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MagicActionDown::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  skillid_ = 0u;
  actiontarget_ = NULL;
  state_ = 0u;
  magicresaultbean_ = NULL;
  source_ = 0u;
  mstate_ = 0u;
  errortype_ = 0u;
  errorvalue_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MagicActionDown::~MagicActionDown() {
  SharedDtor();
}

void MagicActionDown::SharedDtor() {
  if (this != default_instance_) {
    delete actiontarget_;
    delete magicresaultbean_;
  }
}

void MagicActionDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MagicActionDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MagicActionDown_descriptor_;
}

const MagicActionDown& MagicActionDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

MagicActionDown* MagicActionDown::default_instance_ = NULL;

MagicActionDown* MagicActionDown::New() const {
  return new MagicActionDown;
}

void MagicActionDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
    skillid_ = 0u;
    if (has_actiontarget()) {
      if (actiontarget_ != NULL) actiontarget_->::ActionTargetBean::Clear();
    }
    state_ = 0u;
    if (has_magicresaultbean()) {
      if (magicresaultbean_ != NULL) magicresaultbean_->::MagicResaultBean::Clear();
    }
    source_ = 0u;
    mstate_ = 0u;
    errortype_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    errorvalue_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MagicActionDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skillId;
        break;
      }

      // required uint32 skillId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_actionTarget;
        break;
      }

      // optional .ActionTargetBean actionTarget = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_actionTarget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_actiontarget()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_state;
        break;
      }

      // optional uint32 state = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_magicResaultBean;
        break;
      }

      // optional .MagicResaultBean magicResaultBean = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_magicResaultBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_magicresaultbean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_source;
        break;
      }

      // required uint32 source = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));
          set_has_source();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_mstate;
        break;
      }

      // optional uint32 mstate = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mstate_)));
          set_has_mstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_errorType;
        break;
      }

      // optional uint32 errorType = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_errorType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errortype_)));
          set_has_errortype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_errorValue;
        break;
      }

      // optional uint32 errorValue = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_errorValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorvalue_)));
          set_has_errorvalue();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MagicActionDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  // required uint32 skillId = 2;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skillid(), output);
  }

  // optional .ActionTargetBean actionTarget = 3;
  if (has_actiontarget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->actiontarget(), output);
  }

  // optional uint32 state = 4;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->state(), output);
  }

  // optional .MagicResaultBean magicResaultBean = 5;
  if (has_magicresaultbean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->magicresaultbean(), output);
  }

  // required uint32 source = 6;
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->source(), output);
  }

  // optional uint32 mstate = 7;
  if (has_mstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mstate(), output);
  }

  // optional uint32 errorType = 8;
  if (has_errortype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->errortype(), output);
  }

  // optional uint32 errorValue = 9;
  if (has_errorvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->errorvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MagicActionDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  // required uint32 skillId = 2;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skillid(), target);
  }

  // optional .ActionTargetBean actionTarget = 3;
  if (has_actiontarget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->actiontarget(), target);
  }

  // optional uint32 state = 4;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->state(), target);
  }

  // optional .MagicResaultBean magicResaultBean = 5;
  if (has_magicresaultbean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->magicresaultbean(), target);
  }

  // required uint32 source = 6;
  if (has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->source(), target);
  }

  // optional uint32 mstate = 7;
  if (has_mstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mstate(), target);
  }

  // optional uint32 errorType = 8;
  if (has_errortype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->errortype(), target);
  }

  // optional uint32 errorValue = 9;
  if (has_errorvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->errorvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MagicActionDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required uint32 skillId = 2;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->skillid());
    }

    // optional .ActionTargetBean actionTarget = 3;
    if (has_actiontarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actiontarget());
    }

    // optional uint32 state = 4;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // optional .MagicResaultBean magicResaultBean = 5;
    if (has_magicresaultbean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->magicresaultbean());
    }

    // required uint32 source = 6;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source());
    }

    // optional uint32 mstate = 7;
    if (has_mstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mstate());
    }

    // optional uint32 errorType = 8;
    if (has_errortype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errortype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 errorValue = 9;
    if (has_errorvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->errorvalue());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MagicActionDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MagicActionDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MagicActionDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MagicActionDown::MergeFrom(const MagicActionDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_actiontarget()) {
      mutable_actiontarget()->::ActionTargetBean::MergeFrom(from.actiontarget());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_magicresaultbean()) {
      mutable_magicresaultbean()->::MagicResaultBean::MergeFrom(from.magicresaultbean());
    }
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_mstate()) {
      set_mstate(from.mstate());
    }
    if (from.has_errortype()) {
      set_errortype(from.errortype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_errorvalue()) {
      set_errorvalue(from.errorvalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MagicActionDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MagicActionDown::CopyFrom(const MagicActionDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MagicActionDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000023) != 0x00000023) return false;

  if (has_actiontarget()) {
    if (!this->actiontarget().IsInitialized()) return false;
  }
  if (has_magicresaultbean()) {
    if (!this->magicresaultbean().IsInitialized()) return false;
  }
  return true;
}

void MagicActionDown::Swap(MagicActionDown* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(skillid_, other->skillid_);
    std::swap(actiontarget_, other->actiontarget_);
    std::swap(state_, other->state_);
    std::swap(magicresaultbean_, other->magicresaultbean_);
    std::swap(source_, other->source_);
    std::swap(mstate_, other->mstate_);
    std::swap(errortype_, other->errortype_);
    std::swap(errorvalue_, other->errorvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MagicActionDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MagicActionDown_descriptor_;
  metadata.reflection = MagicActionDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoveActionUp::kPerformerIdFieldNumber;
const int MoveActionUp::kActionTargetFieldNumber;
const int MoveActionUp::kIsAdjustFieldNumber;
#endif  // !_MSC_VER

MoveActionUp::MoveActionUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MoveActionUp::InitAsDefaultInstance() {
  actiontarget_ = const_cast< ::ActionTargetBean*>(&::ActionTargetBean::default_instance());
}

MoveActionUp::MoveActionUp(const MoveActionUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MoveActionUp::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  actiontarget_ = NULL;
  isadjust_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoveActionUp::~MoveActionUp() {
  SharedDtor();
}

void MoveActionUp::SharedDtor() {
  if (this != default_instance_) {
    delete actiontarget_;
  }
}

void MoveActionUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveActionUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoveActionUp_descriptor_;
}

const MoveActionUp& MoveActionUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

MoveActionUp* MoveActionUp::default_instance_ = NULL;

MoveActionUp* MoveActionUp::New() const {
  return new MoveActionUp;
}

void MoveActionUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
    if (has_actiontarget()) {
      if (actiontarget_ != NULL) actiontarget_->::ActionTargetBean::Clear();
    }
    isadjust_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoveActionUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_actionTarget;
        break;
      }

      // required .ActionTargetBean actionTarget = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_actionTarget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_actiontarget()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_isAdjust;
        break;
      }

      // optional bool isAdjust = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isAdjust:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isadjust_)));
          set_has_isadjust();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MoveActionUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  // required .ActionTargetBean actionTarget = 2;
  if (has_actiontarget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->actiontarget(), output);
  }

  // optional bool isAdjust = 3;
  if (has_isadjust()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isadjust(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MoveActionUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  // required .ActionTargetBean actionTarget = 2;
  if (has_actiontarget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->actiontarget(), target);
  }

  // optional bool isAdjust = 3;
  if (has_isadjust()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isadjust(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MoveActionUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required .ActionTargetBean actionTarget = 2;
    if (has_actiontarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actiontarget());
    }

    // optional bool isAdjust = 3;
    if (has_isadjust()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveActionUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoveActionUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoveActionUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoveActionUp::MergeFrom(const MoveActionUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_actiontarget()) {
      mutable_actiontarget()->::ActionTargetBean::MergeFrom(from.actiontarget());
    }
    if (from.has_isadjust()) {
      set_isadjust(from.isadjust());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoveActionUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveActionUp::CopyFrom(const MoveActionUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveActionUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_actiontarget()) {
    if (!this->actiontarget().IsInitialized()) return false;
  }
  return true;
}

void MoveActionUp::Swap(MoveActionUp* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(actiontarget_, other->actiontarget_);
    std::swap(isadjust_, other->isadjust_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoveActionUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoveActionUp_descriptor_;
  metadata.reflection = MoveActionUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoveActionDown::kPerformerIdFieldNumber;
const int MoveActionDown::kActionTargetFieldNumber;
const int MoveActionDown::kStateFieldNumber;
const int MoveActionDown::kDelayTimeFieldNumber;
const int MoveActionDown::kSourceFieldNumber;
const int MoveActionDown::kMstateFieldNumber;
const int MoveActionDown::kTypeFieldNumber;
const int MoveActionDown::kIsAdjustFieldNumber;
#endif  // !_MSC_VER

MoveActionDown::MoveActionDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MoveActionDown::InitAsDefaultInstance() {
  actiontarget_ = const_cast< ::ActionTargetBean*>(&::ActionTargetBean::default_instance());
}

MoveActionDown::MoveActionDown(const MoveActionDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MoveActionDown::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  actiontarget_ = NULL;
  state_ = 0u;
  delaytime_ = 0u;
  source_ = 0u;
  mstate_ = 0u;
  type_ = 0u;
  isadjust_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoveActionDown::~MoveActionDown() {
  SharedDtor();
}

void MoveActionDown::SharedDtor() {
  if (this != default_instance_) {
    delete actiontarget_;
  }
}

void MoveActionDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveActionDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoveActionDown_descriptor_;
}

const MoveActionDown& MoveActionDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

MoveActionDown* MoveActionDown::default_instance_ = NULL;

MoveActionDown* MoveActionDown::New() const {
  return new MoveActionDown;
}

void MoveActionDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
    if (has_actiontarget()) {
      if (actiontarget_ != NULL) actiontarget_->::ActionTargetBean::Clear();
    }
    state_ = 0u;
    delaytime_ = 0u;
    source_ = 0u;
    mstate_ = 0u;
    type_ = 0u;
    isadjust_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoveActionDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_actionTarget;
        break;
      }

      // required .ActionTargetBean actionTarget = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_actionTarget:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_actiontarget()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // required uint32 state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_delayTime;
        break;
      }

      // required uint32 delayTime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_delayTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delaytime_)));
          set_has_delaytime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_source;
        break;
      }

      // required uint32 source = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_source:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));
          set_has_source();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_mstate;
        break;
      }

      // optional uint32 mstate = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mstate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mstate_)));
          set_has_mstate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_type;
        break;
      }

      // optional uint32 type = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_isAdjust;
        break;
      }

      // optional bool isAdjust = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isAdjust:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isadjust_)));
          set_has_isadjust();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MoveActionDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  // required .ActionTargetBean actionTarget = 2;
  if (has_actiontarget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->actiontarget(), output);
  }

  // required uint32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->state(), output);
  }

  // required uint32 delayTime = 4;
  if (has_delaytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->delaytime(), output);
  }

  // required uint32 source = 6;
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->source(), output);
  }

  // optional uint32 mstate = 7;
  if (has_mstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->mstate(), output);
  }

  // optional uint32 type = 8;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->type(), output);
  }

  // optional bool isAdjust = 9;
  if (has_isadjust()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isadjust(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MoveActionDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  // required .ActionTargetBean actionTarget = 2;
  if (has_actiontarget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->actiontarget(), target);
  }

  // required uint32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->state(), target);
  }

  // required uint32 delayTime = 4;
  if (has_delaytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->delaytime(), target);
  }

  // required uint32 source = 6;
  if (has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->source(), target);
  }

  // optional uint32 mstate = 7;
  if (has_mstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->mstate(), target);
  }

  // optional uint32 type = 8;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->type(), target);
  }

  // optional bool isAdjust = 9;
  if (has_isadjust()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isadjust(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MoveActionDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required .ActionTargetBean actionTarget = 2;
    if (has_actiontarget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actiontarget());
    }

    // required uint32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // required uint32 delayTime = 4;
    if (has_delaytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->delaytime());
    }

    // required uint32 source = 6;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source());
    }

    // optional uint32 mstate = 7;
    if (has_mstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mstate());
    }

    // optional uint32 type = 8;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional bool isAdjust = 9;
    if (has_isadjust()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveActionDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoveActionDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoveActionDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoveActionDown::MergeFrom(const MoveActionDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_actiontarget()) {
      mutable_actiontarget()->::ActionTargetBean::MergeFrom(from.actiontarget());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_delaytime()) {
      set_delaytime(from.delaytime());
    }
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_mstate()) {
      set_mstate(from.mstate());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_isadjust()) {
      set_isadjust(from.isadjust());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoveActionDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveActionDown::CopyFrom(const MoveActionDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveActionDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_actiontarget()) {
    if (!this->actiontarget().IsInitialized()) return false;
  }
  return true;
}

void MoveActionDown::Swap(MoveActionDown* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(actiontarget_, other->actiontarget_);
    std::swap(state_, other->state_);
    std::swap(delaytime_, other->delaytime_);
    std::swap(source_, other->source_);
    std::swap(mstate_, other->mstate_);
    std::swap(type_, other->type_);
    std::swap(isadjust_, other->isadjust_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoveActionDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoveActionDown_descriptor_;
  metadata.reflection = MoveActionDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemoveDown::kTypeFieldNumber;
const int RemoveDown::kIdFieldNumber;
const int RemoveDown::kMagicResaultBeanFieldNumber;
#endif  // !_MSC_VER

RemoveDown::RemoveDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RemoveDown::InitAsDefaultInstance() {
  magicresaultbean_ = const_cast< ::MagicResaultBean*>(&::MagicResaultBean::default_instance());
}

RemoveDown::RemoveDown(const RemoveDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RemoveDown::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  id_ = 0u;
  magicresaultbean_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveDown::~RemoveDown() {
  SharedDtor();
}

void RemoveDown::SharedDtor() {
  if (this != default_instance_) {
    delete magicresaultbean_;
  }
}

void RemoveDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveDown_descriptor_;
}

const RemoveDown& RemoveDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

RemoveDown* RemoveDown::default_instance_ = NULL;

RemoveDown* RemoveDown::New() const {
  return new RemoveDown;
}

void RemoveDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    id_ = 0u;
    if (has_magicresaultbean()) {
      if (magicresaultbean_ != NULL) magicresaultbean_->::MagicResaultBean::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // required uint32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_magicResaultBean;
        break;
      }

      // optional .MagicResaultBean magicResaultBean = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_magicResaultBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_magicresaultbean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RemoveDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // optional .MagicResaultBean magicResaultBean = 3;
  if (has_magicresaultbean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->magicresaultbean(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RemoveDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // optional .MagicResaultBean magicResaultBean = 3;
  if (has_magicresaultbean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->magicresaultbean(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RemoveDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional .MagicResaultBean magicResaultBean = 3;
    if (has_magicresaultbean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->magicresaultbean());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveDown::MergeFrom(const RemoveDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_magicresaultbean()) {
      mutable_magicresaultbean()->::MagicResaultBean::MergeFrom(from.magicresaultbean());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveDown::CopyFrom(const RemoveDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_magicresaultbean()) {
    if (!this->magicresaultbean().IsInitialized()) return false;
  }
  return true;
}

void RemoveDown::Swap(RemoveDown* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(id_, other->id_);
    std::swap(magicresaultbean_, other->magicresaultbean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveDown_descriptor_;
  metadata.reflection = RemoveDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IdleActionUp::kPerformerIdFieldNumber;
#endif  // !_MSC_VER

IdleActionUp::IdleActionUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void IdleActionUp::InitAsDefaultInstance() {
}

IdleActionUp::IdleActionUp(const IdleActionUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void IdleActionUp::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IdleActionUp::~IdleActionUp() {
  SharedDtor();
}

void IdleActionUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IdleActionUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdleActionUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IdleActionUp_descriptor_;
}

const IdleActionUp& IdleActionUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

IdleActionUp* IdleActionUp::default_instance_ = NULL;

IdleActionUp* IdleActionUp::New() const {
  return new IdleActionUp;
}

void IdleActionUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IdleActionUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void IdleActionUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* IdleActionUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int IdleActionUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdleActionUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IdleActionUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IdleActionUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IdleActionUp::MergeFrom(const IdleActionUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IdleActionUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdleActionUp::CopyFrom(const IdleActionUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdleActionUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void IdleActionUp::Swap(IdleActionUp* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IdleActionUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IdleActionUp_descriptor_;
  metadata.reflection = IdleActionUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IdleActionDown::kPerformerIdFieldNumber;
const int IdleActionDown::kPositionFieldNumber;
#endif  // !_MSC_VER

IdleActionDown::IdleActionDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void IdleActionDown::InitAsDefaultInstance() {
  position_ = const_cast< ::CoordinateBean*>(&::CoordinateBean::default_instance());
}

IdleActionDown::IdleActionDown(const IdleActionDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void IdleActionDown::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  position_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IdleActionDown::~IdleActionDown() {
  SharedDtor();
}

void IdleActionDown::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void IdleActionDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdleActionDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IdleActionDown_descriptor_;
}

const IdleActionDown& IdleActionDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

IdleActionDown* IdleActionDown::default_instance_ = NULL;

IdleActionDown* IdleActionDown::New() const {
  return new IdleActionDown;
}

void IdleActionDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
    if (has_position()) {
      if (position_ != NULL) position_->::CoordinateBean::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IdleActionDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_position;
        break;
      }

      // required .CoordinateBean position = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void IdleActionDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  // required .CoordinateBean position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->position(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* IdleActionDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  // required .CoordinateBean position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int IdleActionDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required .CoordinateBean position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdleActionDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IdleActionDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IdleActionDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IdleActionDown::MergeFrom(const IdleActionDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_position()) {
      mutable_position()->::CoordinateBean::MergeFrom(from.position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IdleActionDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdleActionDown::CopyFrom(const IdleActionDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdleActionDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void IdleActionDown::Swap(IdleActionDown* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(position_, other->position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IdleActionDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IdleActionDown_descriptor_;
  metadata.reflection = IdleActionDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NetDelayCheckUp::kStepFieldNumber;
const int NetDelayCheckUp::kCTimeFieldNumber;
const int NetDelayCheckUp::kVersionFieldNumber;
#endif  // !_MSC_VER

NetDelayCheckUp::NetDelayCheckUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NetDelayCheckUp::InitAsDefaultInstance() {
}

NetDelayCheckUp::NetDelayCheckUp(const NetDelayCheckUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NetDelayCheckUp::SharedCtor() {
  _cached_size_ = 0;
  step_ = 0u;
  ctime_ = GOOGLE_ULONGLONG(0);
  version_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NetDelayCheckUp::~NetDelayCheckUp() {
  SharedDtor();
}

void NetDelayCheckUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NetDelayCheckUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetDelayCheckUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetDelayCheckUp_descriptor_;
}

const NetDelayCheckUp& NetDelayCheckUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

NetDelayCheckUp* NetDelayCheckUp::default_instance_ = NULL;

NetDelayCheckUp* NetDelayCheckUp::New() const {
  return new NetDelayCheckUp;
}

void NetDelayCheckUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    step_ = 0u;
    ctime_ = GOOGLE_ULONGLONG(0);
    version_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NetDelayCheckUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 step = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &step_)));
          set_has_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cTime;
        break;
      }

      // required uint64 cTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ctime_)));
          set_has_ctime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_version;
        break;
      }

      // optional uint32 version = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NetDelayCheckUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 step = 1;
  if (has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->step(), output);
  }

  // required uint64 cTime = 2;
  if (has_ctime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ctime(), output);
  }

  // optional uint32 version = 3;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NetDelayCheckUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 step = 1;
  if (has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->step(), target);
  }

  // required uint64 cTime = 2;
  if (has_ctime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ctime(), target);
  }

  // optional uint32 version = 3;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NetDelayCheckUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 step = 1;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->step());
    }

    // required uint64 cTime = 2;
    if (has_ctime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ctime());
    }

    // optional uint32 version = 3;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetDelayCheckUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NetDelayCheckUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NetDelayCheckUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NetDelayCheckUp::MergeFrom(const NetDelayCheckUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_step()) {
      set_step(from.step());
    }
    if (from.has_ctime()) {
      set_ctime(from.ctime());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NetDelayCheckUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetDelayCheckUp::CopyFrom(const NetDelayCheckUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetDelayCheckUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void NetDelayCheckUp::Swap(NetDelayCheckUp* other) {
  if (other != this) {
    std::swap(step_, other->step_);
    std::swap(ctime_, other->ctime_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NetDelayCheckUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetDelayCheckUp_descriptor_;
  metadata.reflection = NetDelayCheckUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NetDelayCheckDown::kVersionFieldNumber;
const int NetDelayCheckDown::kCTimeFieldNumber;
#endif  // !_MSC_VER

NetDelayCheckDown::NetDelayCheckDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NetDelayCheckDown::InitAsDefaultInstance() {
}

NetDelayCheckDown::NetDelayCheckDown(const NetDelayCheckDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NetDelayCheckDown::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
  ctime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NetDelayCheckDown::~NetDelayCheckDown() {
  SharedDtor();
}

void NetDelayCheckDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NetDelayCheckDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetDelayCheckDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NetDelayCheckDown_descriptor_;
}

const NetDelayCheckDown& NetDelayCheckDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

NetDelayCheckDown* NetDelayCheckDown::default_instance_ = NULL;

NetDelayCheckDown* NetDelayCheckDown::New() const {
  return new NetDelayCheckDown;
}

void NetDelayCheckDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    version_ = 0u;
    ctime_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NetDelayCheckDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 version = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cTime;
        break;
      }

      // required uint64 cTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ctime_)));
          set_has_ctime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NetDelayCheckDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // required uint64 cTime = 2;
  if (has_ctime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ctime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NetDelayCheckDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // required uint64 cTime = 2;
  if (has_ctime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ctime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NetDelayCheckDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // required uint64 cTime = 2;
    if (has_ctime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ctime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetDelayCheckDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NetDelayCheckDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NetDelayCheckDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NetDelayCheckDown::MergeFrom(const NetDelayCheckDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_ctime()) {
      set_ctime(from.ctime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NetDelayCheckDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetDelayCheckDown::CopyFrom(const NetDelayCheckDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetDelayCheckDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void NetDelayCheckDown::Swap(NetDelayCheckDown* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(ctime_, other->ctime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NetDelayCheckDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NetDelayCheckDown_descriptor_;
  metadata.reflection = NetDelayCheckDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeadDown::kPerformerIdFieldNumber;
#endif  // !_MSC_VER

DeadDown::DeadDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DeadDown::InitAsDefaultInstance() {
}

DeadDown::DeadDown(const DeadDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DeadDown::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeadDown::~DeadDown() {
  SharedDtor();
}

void DeadDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeadDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeadDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeadDown_descriptor_;
}

const DeadDown& DeadDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

DeadDown* DeadDown::default_instance_ = NULL;

DeadDown* DeadDown::New() const {
  return new DeadDown;
}

void DeadDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeadDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DeadDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DeadDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DeadDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeadDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeadDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeadDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeadDown::MergeFrom(const DeadDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeadDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeadDown::CopyFrom(const DeadDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeadDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DeadDown::Swap(DeadDown* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeadDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeadDown_descriptor_;
  metadata.reflection = DeadDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TrapTriggerDown::kPerformerIdFieldNumber;
const int TrapTriggerDown::kKeyIdFieldNumber;
const int TrapTriggerDown::kTrapTriggerBeanFieldNumber;
#endif  // !_MSC_VER

TrapTriggerDown::TrapTriggerDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrapTriggerDown::InitAsDefaultInstance() {
}

TrapTriggerDown::TrapTriggerDown(const TrapTriggerDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrapTriggerDown::SharedCtor() {
  _cached_size_ = 0;
  performerid_ = 0u;
  keyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrapTriggerDown::~TrapTriggerDown() {
  SharedDtor();
}

void TrapTriggerDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrapTriggerDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrapTriggerDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrapTriggerDown_descriptor_;
}

const TrapTriggerDown& TrapTriggerDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

TrapTriggerDown* TrapTriggerDown::default_instance_ = NULL;

TrapTriggerDown* TrapTriggerDown::New() const {
  return new TrapTriggerDown;
}

void TrapTriggerDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    performerid_ = 0u;
    keyid_ = 0u;
  }
  traptriggerbean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrapTriggerDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 performerId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &performerid_)));
          set_has_performerid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_keyId;
        break;
      }

      // required uint32 keyId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_keyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &keyid_)));
          set_has_keyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_trapTriggerBean;
        break;
      }

      // repeated .TrapTriggerBean trapTriggerBean = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trapTriggerBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_traptriggerbean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_trapTriggerBean;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrapTriggerDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->performerid(), output);
  }

  // required uint32 keyId = 2;
  if (has_keyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->keyid(), output);
  }

  // repeated .TrapTriggerBean trapTriggerBean = 3;
  for (int i = 0; i < this->traptriggerbean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->traptriggerbean(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrapTriggerDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 performerId = 1;
  if (has_performerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->performerid(), target);
  }

  // required uint32 keyId = 2;
  if (has_keyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->keyid(), target);
  }

  // repeated .TrapTriggerBean trapTriggerBean = 3;
  for (int i = 0; i < this->traptriggerbean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->traptriggerbean(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrapTriggerDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 performerId = 1;
    if (has_performerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->performerid());
    }

    // required uint32 keyId = 2;
    if (has_keyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->keyid());
    }

  }
  // repeated .TrapTriggerBean trapTriggerBean = 3;
  total_size += 1 * this->traptriggerbean_size();
  for (int i = 0; i < this->traptriggerbean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->traptriggerbean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrapTriggerDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrapTriggerDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrapTriggerDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrapTriggerDown::MergeFrom(const TrapTriggerDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  traptriggerbean_.MergeFrom(from.traptriggerbean_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_performerid()) {
      set_performerid(from.performerid());
    }
    if (from.has_keyid()) {
      set_keyid(from.keyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrapTriggerDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrapTriggerDown::CopyFrom(const TrapTriggerDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrapTriggerDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < traptriggerbean_size(); i++) {
    if (!this->traptriggerbean(i).IsInitialized()) return false;
  }
  return true;
}

void TrapTriggerDown::Swap(TrapTriggerDown* other) {
  if (other != this) {
    std::swap(performerid_, other->performerid_);
    std::swap(keyid_, other->keyid_);
    traptriggerbean_.Swap(&other->traptriggerbean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrapTriggerDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrapTriggerDown_descriptor_;
  metadata.reflection = TrapTriggerDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BattleOverDown::kFailureTroopTypeFieldNumber;
#endif  // !_MSC_VER

BattleOverDown::BattleOverDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BattleOverDown::InitAsDefaultInstance() {
}

BattleOverDown::BattleOverDown(const BattleOverDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BattleOverDown::SharedCtor() {
  _cached_size_ = 0;
  failuretrooptype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleOverDown::~BattleOverDown() {
  SharedDtor();
}

void BattleOverDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleOverDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleOverDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleOverDown_descriptor_;
}

const BattleOverDown& BattleOverDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  return *default_instance_;
}

BattleOverDown* BattleOverDown::default_instance_ = NULL;

BattleOverDown* BattleOverDown::New() const {
  return new BattleOverDown;
}

void BattleOverDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    failuretrooptype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BattleOverDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 failureTroopType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &failuretrooptype_)));
          set_has_failuretrooptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BattleOverDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 failureTroopType = 1;
  if (has_failuretrooptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->failuretrooptype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BattleOverDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 failureTroopType = 1;
  if (has_failuretrooptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->failuretrooptype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BattleOverDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 failureTroopType = 1;
    if (has_failuretrooptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->failuretrooptype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleOverDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BattleOverDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BattleOverDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BattleOverDown::MergeFrom(const BattleOverDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_failuretrooptype()) {
      set_failuretrooptype(from.failuretrooptype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BattleOverDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleOverDown::CopyFrom(const BattleOverDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleOverDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BattleOverDown::Swap(BattleOverDown* other) {
  if (other != this) {
    std::swap(failuretrooptype_, other->failuretrooptype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BattleOverDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleOverDown_descriptor_;
  metadata.reflection = BattleOverDown_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
