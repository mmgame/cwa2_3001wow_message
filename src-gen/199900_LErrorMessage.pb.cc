// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: 199900_LErrorMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "199900_LErrorMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* LErrorDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LErrorDown_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LErrorCommondIdEnum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* LErrorTypeEnum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ModuleTypeEnum_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* InputErrorTypeEnum_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_199900_5fLErrorMessage_2eproto() {
  protobuf_AddDesc_199900_5fLErrorMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "199900_LErrorMessage.proto");
  GOOGLE_CHECK(file != NULL);
  LErrorDown_descriptor_ = file->message_type(0);
  static const int LErrorDown_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LErrorDown, errormessage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LErrorDown, errortype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LErrorDown, moduletype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LErrorDown, inputerrortype_),
  };
  LErrorDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LErrorDown_descriptor_,
      LErrorDown::default_instance_,
      LErrorDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LErrorDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LErrorDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LErrorDown));
  LErrorCommondIdEnum_descriptor_ = file->enum_type(0);
  LErrorTypeEnum_descriptor_ = file->enum_type(1);
  ModuleTypeEnum_descriptor_ = file->enum_type(2);
  InputErrorTypeEnum_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_199900_5fLErrorMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LErrorDown_descriptor_, &LErrorDown::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_199900_5fLErrorMessage_2eproto() {
  delete LErrorDown::default_instance_;
  delete LErrorDown_reflection_;
}

void protobuf_AddDesc_199900_5fLErrorMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032199900_LErrorMessage.proto\"\230\001\n\nLErrorD"
    "own\022\024\n\014errorMessage\030\001 \002(\t\022\"\n\terrorType\030\002"
    " \002(\0162\017.LErrorTypeEnum\022#\n\nmoduleType\030\003 \001("
    "\0162\017.ModuleTypeEnum\022+\n\016inputErrorType\030\004 \001"
    "(\0162\023.InputErrorTypeEnum*(\n\023LErrorCommond"
    "IdEnum\022\021\n\013_BErrorDown\020\231\201z*@\n\016LErrorTypeE"
    "num\022\016\n\nInputError\020\001\022\r\n\tDataError\020\002\022\017\n\013Sy"
    "stemError\020\003*\204\001\n\016ModuleTypeEnum\022\013\n\007MT_Use"
    "r\020\000\022\013\n\007MT_Item\020\001\022\013\n\007MT_Room\020\002\022\013\n\007MT_Hero"
    "\020\003\022\016\n\nMT_Economy\020\004\022\020\n\014MT_Equipment\020\005\022\020\n\014"
    "MT_Formation\020\006\022\n\n\006MT_Vip\020\007*`\n\022InputError"
    "TypeEnum\022\017\n\013IE_UserName\020\001\022\022\n\016IE_ConsumeT"
    "ype\020\002\022\024\n\020IE_FormationType\020\003\022\017\n\013IE_IconTy"
    "pe\020\004B \n\017com.cwa.messageB\rLErrorMessage", 558);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "199900_LErrorMessage.proto", &protobuf_RegisterTypes);
  LErrorDown::default_instance_ = new LErrorDown();
  LErrorDown::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_199900_5fLErrorMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_199900_5fLErrorMessage_2eproto {
  StaticDescriptorInitializer_199900_5fLErrorMessage_2eproto() {
    protobuf_AddDesc_199900_5fLErrorMessage_2eproto();
  }
} static_descriptor_initializer_199900_5fLErrorMessage_2eproto_;
const ::google::protobuf::EnumDescriptor* LErrorCommondIdEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LErrorCommondIdEnum_descriptor_;
}
bool LErrorCommondIdEnum_IsValid(int value) {
  switch(value) {
    case 1999001:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LErrorTypeEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LErrorTypeEnum_descriptor_;
}
bool LErrorTypeEnum_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ModuleTypeEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModuleTypeEnum_descriptor_;
}
bool ModuleTypeEnum_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InputErrorTypeEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputErrorTypeEnum_descriptor_;
}
bool InputErrorTypeEnum_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int LErrorDown::kErrorMessageFieldNumber;
const int LErrorDown::kErrorTypeFieldNumber;
const int LErrorDown::kModuleTypeFieldNumber;
const int LErrorDown::kInputErrorTypeFieldNumber;
#endif  // !_MSC_VER

LErrorDown::LErrorDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LErrorDown::InitAsDefaultInstance() {
}

LErrorDown::LErrorDown(const LErrorDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LErrorDown::SharedCtor() {
  _cached_size_ = 0;
  errormessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  errortype_ = 1;
  moduletype_ = 0;
  inputerrortype_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LErrorDown::~LErrorDown() {
  SharedDtor();
}

void LErrorDown::SharedDtor() {
  if (errormessage_ != &::google::protobuf::internal::kEmptyString) {
    delete errormessage_;
  }
  if (this != default_instance_) {
  }
}

void LErrorDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LErrorDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LErrorDown_descriptor_;
}

const LErrorDown& LErrorDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_199900_5fLErrorMessage_2eproto();
  return *default_instance_;
}

LErrorDown* LErrorDown::default_instance_ = NULL;

LErrorDown* LErrorDown::New() const {
  return new LErrorDown;
}

void LErrorDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_errormessage()) {
      if (errormessage_ != &::google::protobuf::internal::kEmptyString) {
        errormessage_->clear();
      }
    }
    errortype_ = 1;
    moduletype_ = 0;
    inputerrortype_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LErrorDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string errorMessage = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->errormessage().data(), this->errormessage().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_errorType;
        break;
      }

      // required .LErrorTypeEnum errorType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_errorType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::LErrorTypeEnum_IsValid(value)) {
            set_errortype(static_cast< ::LErrorTypeEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_moduleType;
        break;
      }

      // optional .ModuleTypeEnum moduleType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_moduleType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ModuleTypeEnum_IsValid(value)) {
            set_moduletype(static_cast< ::ModuleTypeEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_inputErrorType;
        break;
      }

      // optional .InputErrorTypeEnum inputErrorType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inputErrorType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::InputErrorTypeEnum_IsValid(value)) {
            set_inputerrortype(static_cast< ::InputErrorTypeEnum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LErrorDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string errorMessage = 1;
  if (has_errormessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->errormessage().data(), this->errormessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->errormessage(), output);
  }

  // required .LErrorTypeEnum errorType = 2;
  if (has_errortype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->errortype(), output);
  }

  // optional .ModuleTypeEnum moduleType = 3;
  if (has_moduletype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->moduletype(), output);
  }

  // optional .InputErrorTypeEnum inputErrorType = 4;
  if (has_inputerrortype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->inputerrortype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LErrorDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string errorMessage = 1;
  if (has_errormessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->errormessage().data(), this->errormessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->errormessage(), target);
  }

  // required .LErrorTypeEnum errorType = 2;
  if (has_errortype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->errortype(), target);
  }

  // optional .ModuleTypeEnum moduleType = 3;
  if (has_moduletype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->moduletype(), target);
  }

  // optional .InputErrorTypeEnum inputErrorType = 4;
  if (has_inputerrortype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->inputerrortype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LErrorDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string errorMessage = 1;
    if (has_errormessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errormessage());
    }

    // required .LErrorTypeEnum errorType = 2;
    if (has_errortype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->errortype());
    }

    // optional .ModuleTypeEnum moduleType = 3;
    if (has_moduletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->moduletype());
    }

    // optional .InputErrorTypeEnum inputErrorType = 4;
    if (has_inputerrortype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->inputerrortype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LErrorDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LErrorDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LErrorDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LErrorDown::MergeFrom(const LErrorDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errormessage()) {
      set_errormessage(from.errormessage());
    }
    if (from.has_errortype()) {
      set_errortype(from.errortype());
    }
    if (from.has_moduletype()) {
      set_moduletype(from.moduletype());
    }
    if (from.has_inputerrortype()) {
      set_inputerrortype(from.inputerrortype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LErrorDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LErrorDown::CopyFrom(const LErrorDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LErrorDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LErrorDown::Swap(LErrorDown* other) {
  if (other != this) {
    std::swap(errormessage_, other->errormessage_);
    std::swap(errortype_, other->errortype_);
    std::swap(moduletype_, other->moduletype_);
    std::swap(inputerrortype_, other->inputerrortype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LErrorDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LErrorDown_descriptor_;
  metadata.reflection = LErrorDown_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
