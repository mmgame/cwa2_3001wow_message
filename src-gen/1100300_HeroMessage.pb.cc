// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: 1100300_HeroMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "1100300_HeroMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SlotInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SlotInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* EquipmentInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EquipmentInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChangeToStoneKeyIdBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangeToStoneKeyIdBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetHeroInfoUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetHeroInfoUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetHeroInfoDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetHeroInfoDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseHeroBookUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseHeroBookUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseHeroBookDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseHeroBookDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* CallHeroUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CallHeroUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroEvolutionUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroEvolutionUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroTrainUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroTrainUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroTrainDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroTrainDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* SaveTrainPatienceUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaveTrainPatienceUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CancelTrainPatienceUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CancelTrainPatienceUp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* HeroCommondIdEnum_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_1100300_5fHeroMessage_2eproto() {
  protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "1100300_HeroMessage.proto");
  GOOGLE_CHECK(file != NULL);
  SlotInfoBean_descriptor_ = file->message_type(0);
  static const int SlotInfoBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotInfoBean, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotInfoBean, plugid_),
  };
  SlotInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SlotInfoBean_descriptor_,
      SlotInfoBean::default_instance_,
      SlotInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SlotInfoBean));
  EquipmentInfoBean_descriptor_ = file->message_type(1);
  static const int EquipmentInfoBean_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentInfoBean, positionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentInfoBean, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentInfoBean, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentInfoBean, slotinfobean_),
  };
  EquipmentInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EquipmentInfoBean_descriptor_,
      EquipmentInfoBean::default_instance_,
      EquipmentInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipmentInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EquipmentInfoBean));
  HeroInfoBean_descriptor_ = file->message_type(2);
  static const int HeroInfoBean_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, experience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, currentpatience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, issave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, traintype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, waitpatience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, equipmentinfobean_),
  };
  HeroInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroInfoBean_descriptor_,
      HeroInfoBean::default_instance_,
      HeroInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroInfoBean));
  ChangeToStoneKeyIdBean_descriptor_ = file->message_type(3);
  static const int ChangeToStoneKeyIdBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeToStoneKeyIdBean, itemkeyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeToStoneKeyIdBean, count_),
  };
  ChangeToStoneKeyIdBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChangeToStoneKeyIdBean_descriptor_,
      ChangeToStoneKeyIdBean::default_instance_,
      ChangeToStoneKeyIdBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeToStoneKeyIdBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeToStoneKeyIdBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChangeToStoneKeyIdBean));
  GetHeroInfoUp_descriptor_ = file->message_type(4);
  static const int GetHeroInfoUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHeroInfoUp, userid_),
  };
  GetHeroInfoUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetHeroInfoUp_descriptor_,
      GetHeroInfoUp::default_instance_,
      GetHeroInfoUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHeroInfoUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHeroInfoUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetHeroInfoUp));
  GetHeroInfoDown_descriptor_ = file->message_type(5);
  static const int GetHeroInfoDown_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHeroInfoDown, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHeroInfoDown, heroexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHeroInfoDown, heroinfobean_),
  };
  GetHeroInfoDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetHeroInfoDown_descriptor_,
      GetHeroInfoDown::default_instance_,
      GetHeroInfoDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHeroInfoDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHeroInfoDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetHeroInfoDown));
  UseHeroBookUp_descriptor_ = file->message_type(6);
  static const int UseHeroBookUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroBookUp, itemid_),
  };
  UseHeroBookUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseHeroBookUp_descriptor_,
      UseHeroBookUp::default_instance_,
      UseHeroBookUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroBookUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroBookUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseHeroBookUp));
  UseHeroBookDown_descriptor_ = file->message_type(7);
  static const int UseHeroBookDown_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroBookDown, ishavehero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroBookDown, herokeyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroBookDown, changetostonekeyidbean_),
  };
  UseHeroBookDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseHeroBookDown_descriptor_,
      UseHeroBookDown::default_instance_,
      UseHeroBookDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroBookDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHeroBookDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseHeroBookDown));
  CallHeroUp_descriptor_ = file->message_type(8);
  static const int CallHeroUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallHeroUp, herokeyid_),
  };
  CallHeroUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CallHeroUp_descriptor_,
      CallHeroUp::default_instance_,
      CallHeroUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallHeroUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CallHeroUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CallHeroUp));
  HeroEvolutionUp_descriptor_ = file->message_type(9);
  static const int HeroEvolutionUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolutionUp, herokeyid_),
  };
  HeroEvolutionUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroEvolutionUp_descriptor_,
      HeroEvolutionUp::default_instance_,
      HeroEvolutionUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolutionUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolutionUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroEvolutionUp));
  HeroTrainUp_descriptor_ = file->message_type(10);
  static const int HeroTrainUp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroTrainUp, herokeyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroTrainUp, traintype_),
  };
  HeroTrainUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroTrainUp_descriptor_,
      HeroTrainUp::default_instance_,
      HeroTrainUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroTrainUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroTrainUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroTrainUp));
  HeroTrainDown_descriptor_ = file->message_type(11);
  static const int HeroTrainDown_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroTrainDown, herokeyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroTrainDown, patiences_),
  };
  HeroTrainDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroTrainDown_descriptor_,
      HeroTrainDown::default_instance_,
      HeroTrainDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroTrainDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroTrainDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroTrainDown));
  SaveTrainPatienceUp_descriptor_ = file->message_type(12);
  static const int SaveTrainPatienceUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTrainPatienceUp, herokeyid_),
  };
  SaveTrainPatienceUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SaveTrainPatienceUp_descriptor_,
      SaveTrainPatienceUp::default_instance_,
      SaveTrainPatienceUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTrainPatienceUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaveTrainPatienceUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SaveTrainPatienceUp));
  CancelTrainPatienceUp_descriptor_ = file->message_type(13);
  static const int CancelTrainPatienceUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelTrainPatienceUp, herokeyid_),
  };
  CancelTrainPatienceUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CancelTrainPatienceUp_descriptor_,
      CancelTrainPatienceUp::default_instance_,
      CancelTrainPatienceUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelTrainPatienceUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelTrainPatienceUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CancelTrainPatienceUp));
  HeroCommondIdEnum_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_1100300_5fHeroMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SlotInfoBean_descriptor_, &SlotInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EquipmentInfoBean_descriptor_, &EquipmentInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroInfoBean_descriptor_, &HeroInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChangeToStoneKeyIdBean_descriptor_, &ChangeToStoneKeyIdBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetHeroInfoUp_descriptor_, &GetHeroInfoUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetHeroInfoDown_descriptor_, &GetHeroInfoDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseHeroBookUp_descriptor_, &UseHeroBookUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseHeroBookDown_descriptor_, &UseHeroBookDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CallHeroUp_descriptor_, &CallHeroUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroEvolutionUp_descriptor_, &HeroEvolutionUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroTrainUp_descriptor_, &HeroTrainUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroTrainDown_descriptor_, &HeroTrainDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SaveTrainPatienceUp_descriptor_, &SaveTrainPatienceUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CancelTrainPatienceUp_descriptor_, &CancelTrainPatienceUp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_1100300_5fHeroMessage_2eproto() {
  delete SlotInfoBean::default_instance_;
  delete SlotInfoBean_reflection_;
  delete EquipmentInfoBean::default_instance_;
  delete EquipmentInfoBean_reflection_;
  delete HeroInfoBean::default_instance_;
  delete HeroInfoBean_reflection_;
  delete ChangeToStoneKeyIdBean::default_instance_;
  delete ChangeToStoneKeyIdBean_reflection_;
  delete GetHeroInfoUp::default_instance_;
  delete GetHeroInfoUp_reflection_;
  delete GetHeroInfoDown::default_instance_;
  delete GetHeroInfoDown_reflection_;
  delete UseHeroBookUp::default_instance_;
  delete UseHeroBookUp_reflection_;
  delete UseHeroBookDown::default_instance_;
  delete UseHeroBookDown_reflection_;
  delete CallHeroUp::default_instance_;
  delete CallHeroUp_reflection_;
  delete HeroEvolutionUp::default_instance_;
  delete HeroEvolutionUp_reflection_;
  delete HeroTrainUp::default_instance_;
  delete HeroTrainUp_reflection_;
  delete HeroTrainDown::default_instance_;
  delete HeroTrainDown_reflection_;
  delete SaveTrainPatienceUp::default_instance_;
  delete SaveTrainPatienceUp_reflection_;
  delete CancelTrainPatienceUp::default_instance_;
  delete CancelTrainPatienceUp_reflection_;
}

void protobuf_AddDesc_1100300_5fHeroMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\0311100300_HeroMessage.proto\"*\n\014SlotInfoB"
    "ean\022\n\n\002id\030\001 \002(\r\022\016\n\006plugId\030\002 \002(\r\"l\n\021Equip"
    "mentInfoBean\022\022\n\npositionId\030\001 \002(\r\022\r\n\005leve"
    "l\030\002 \002(\r\022\017\n\007quality\030\003 \002(\r\022#\n\014slotInfoBean"
    "\030\004 \003(\0132\r.SlotInfoBean\"\335\001\n\014HeroInfoBean\022\n"
    "\n\002id\030\001 \002(\r\022\r\n\005level\030\002 \002(\r\022\022\n\nexperience\030"
    "\003 \002(\r\022\014\n\004star\030\004 \002(\r\022\017\n\007quality\030\005 \002(\r\022\027\n\017"
    "currentPatience\030\006 \003(\r\022\016\n\006isSave\030\007 \002(\010\022\021\n"
    "\ttrainType\030\010 \002(\r\022\024\n\014waitPatience\030\t \003(\r\022-"
    "\n\021equipmentInfoBean\030\n \003(\0132\022.EquipmentInf"
    "oBean\":\n\026ChangeToStoneKeyIdBean\022\021\n\titemK"
    "eyId\030\001 \002(\r\022\r\n\005count\030\002 \002(\r\"\037\n\rGetHeroInfo"
    "Up\022\016\n\006userId\030\001 \002(\t\"W\n\017GetHeroInfoDown\022\016\n"
    "\006userId\030\001 \002(\t\022\017\n\007heroExp\030\002 \002(\r\022#\n\014heroIn"
    "foBean\030\003 \003(\0132\r.HeroInfoBean\"\037\n\rUseHeroBo"
    "okUp\022\016\n\006itemId\030\001 \002(\r\"q\n\017UseHeroBookDown\022"
    "\022\n\nisHaveHero\030\001 \002(\010\022\021\n\theroKeyId\030\002 \002(\r\0227"
    "\n\026changeToStoneKeyIdBean\030\003 \001(\0132\027.ChangeT"
    "oStoneKeyIdBean\"\037\n\nCallHeroUp\022\021\n\theroKey"
    "Id\030\001 \002(\r\"$\n\017HeroEvolutionUp\022\021\n\theroKeyId"
    "\030\001 \002(\r\"3\n\013HeroTrainUp\022\021\n\theroKeyId\030\001 \002(\r"
    "\022\021\n\ttrainType\030\002 \002(\r\"5\n\rHeroTrainDown\022\021\n\t"
    "heroKeyId\030\001 \002(\r\022\021\n\tpatiences\030\002 \003(\r\"(\n\023Sa"
    "veTrainPatienceUp\022\021\n\theroKeyId\030\001 \002(\r\"*\n\025"
    "CancelTrainPatienceUp\022\021\n\theroKeyId\030\001 \002(\r"
    "*\223\002\n\021HeroCommondIdEnum\022\024\n\016_GetHeroInfoUp"
    "\020\215\224C\022\026\n\020_GetHeroInfoDown\020\216\224C\022\024\n\016_UseHero"
    "BookUp\020\217\224C\022\026\n\020_UseHeroBookDown\020\220\224C\022\021\n\013_C"
    "allHeroUp\020\221\224C\022\023\n\r_CallHeroDown\020\222\224C\022\026\n\020_H"
    "eroEvolutionUp\020\223\224C\022\022\n\014_HeroTrainUp\020\225\224C\022\024"
    "\n\016_HeroTrainDown\020\226\224C\022\032\n\024_SaveTrainPatien"
    "ceUp\020\227\224C\022\034\n\026_CancelTrainPatienceUp\020\231\224CB\036"
    "\n\017com.cwa.messageB\013HeroMessage", 1310);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "1100300_HeroMessage.proto", &protobuf_RegisterTypes);
  SlotInfoBean::default_instance_ = new SlotInfoBean();
  EquipmentInfoBean::default_instance_ = new EquipmentInfoBean();
  HeroInfoBean::default_instance_ = new HeroInfoBean();
  ChangeToStoneKeyIdBean::default_instance_ = new ChangeToStoneKeyIdBean();
  GetHeroInfoUp::default_instance_ = new GetHeroInfoUp();
  GetHeroInfoDown::default_instance_ = new GetHeroInfoDown();
  UseHeroBookUp::default_instance_ = new UseHeroBookUp();
  UseHeroBookDown::default_instance_ = new UseHeroBookDown();
  CallHeroUp::default_instance_ = new CallHeroUp();
  HeroEvolutionUp::default_instance_ = new HeroEvolutionUp();
  HeroTrainUp::default_instance_ = new HeroTrainUp();
  HeroTrainDown::default_instance_ = new HeroTrainDown();
  SaveTrainPatienceUp::default_instance_ = new SaveTrainPatienceUp();
  CancelTrainPatienceUp::default_instance_ = new CancelTrainPatienceUp();
  SlotInfoBean::default_instance_->InitAsDefaultInstance();
  EquipmentInfoBean::default_instance_->InitAsDefaultInstance();
  HeroInfoBean::default_instance_->InitAsDefaultInstance();
  ChangeToStoneKeyIdBean::default_instance_->InitAsDefaultInstance();
  GetHeroInfoUp::default_instance_->InitAsDefaultInstance();
  GetHeroInfoDown::default_instance_->InitAsDefaultInstance();
  UseHeroBookUp::default_instance_->InitAsDefaultInstance();
  UseHeroBookDown::default_instance_->InitAsDefaultInstance();
  CallHeroUp::default_instance_->InitAsDefaultInstance();
  HeroEvolutionUp::default_instance_->InitAsDefaultInstance();
  HeroTrainUp::default_instance_->InitAsDefaultInstance();
  HeroTrainDown::default_instance_->InitAsDefaultInstance();
  SaveTrainPatienceUp::default_instance_->InitAsDefaultInstance();
  CancelTrainPatienceUp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_1100300_5fHeroMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_1100300_5fHeroMessage_2eproto {
  StaticDescriptorInitializer_1100300_5fHeroMessage_2eproto() {
    protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  }
} static_descriptor_initializer_1100300_5fHeroMessage_2eproto_;
const ::google::protobuf::EnumDescriptor* HeroCommondIdEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroCommondIdEnum_descriptor_;
}
bool HeroCommondIdEnum_IsValid(int value) {
  switch(value) {
    case 1100301:
    case 1100302:
    case 1100303:
    case 1100304:
    case 1100305:
    case 1100306:
    case 1100307:
    case 1100309:
    case 1100310:
    case 1100311:
    case 1100313:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int SlotInfoBean::kIdFieldNumber;
const int SlotInfoBean::kPlugIdFieldNumber;
#endif  // !_MSC_VER

SlotInfoBean::SlotInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SlotInfoBean::InitAsDefaultInstance() {
}

SlotInfoBean::SlotInfoBean(const SlotInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SlotInfoBean::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  plugid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SlotInfoBean::~SlotInfoBean() {
  SharedDtor();
}

void SlotInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SlotInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SlotInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SlotInfoBean_descriptor_;
}

const SlotInfoBean& SlotInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

SlotInfoBean* SlotInfoBean::default_instance_ = NULL;

SlotInfoBean* SlotInfoBean::New() const {
  return new SlotInfoBean;
}

void SlotInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    plugid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SlotInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_plugId;
        break;
      }

      // required uint32 plugId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_plugId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &plugid_)));
          set_has_plugid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SlotInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 plugId = 2;
  if (has_plugid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->plugid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SlotInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 plugId = 2;
  if (has_plugid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->plugid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SlotInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 plugId = 2;
    if (has_plugid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->plugid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SlotInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SlotInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SlotInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SlotInfoBean::MergeFrom(const SlotInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_plugid()) {
      set_plugid(from.plugid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SlotInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlotInfoBean::CopyFrom(const SlotInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlotInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SlotInfoBean::Swap(SlotInfoBean* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(plugid_, other->plugid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SlotInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SlotInfoBean_descriptor_;
  metadata.reflection = SlotInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EquipmentInfoBean::kPositionIdFieldNumber;
const int EquipmentInfoBean::kLevelFieldNumber;
const int EquipmentInfoBean::kQualityFieldNumber;
const int EquipmentInfoBean::kSlotInfoBeanFieldNumber;
#endif  // !_MSC_VER

EquipmentInfoBean::EquipmentInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EquipmentInfoBean::InitAsDefaultInstance() {
}

EquipmentInfoBean::EquipmentInfoBean(const EquipmentInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EquipmentInfoBean::SharedCtor() {
  _cached_size_ = 0;
  positionid_ = 0u;
  level_ = 0u;
  quality_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EquipmentInfoBean::~EquipmentInfoBean() {
  SharedDtor();
}

void EquipmentInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EquipmentInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipmentInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EquipmentInfoBean_descriptor_;
}

const EquipmentInfoBean& EquipmentInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

EquipmentInfoBean* EquipmentInfoBean::default_instance_ = NULL;

EquipmentInfoBean* EquipmentInfoBean::New() const {
  return new EquipmentInfoBean;
}

void EquipmentInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    positionid_ = 0u;
    level_ = 0u;
    quality_ = 0u;
  }
  slotinfobean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EquipmentInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 positionId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &positionid_)));
          set_has_positionid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required uint32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_quality;
        break;
      }

      // required uint32 quality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_slotInfoBean;
        break;
      }

      // repeated .SlotInfoBean slotInfoBean = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_slotInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slotinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_slotInfoBean;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EquipmentInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 positionId = 1;
  if (has_positionid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->positionid(), output);
  }

  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // required uint32 quality = 3;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quality(), output);
  }

  // repeated .SlotInfoBean slotInfoBean = 4;
  for (int i = 0; i < this->slotinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->slotinfobean(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EquipmentInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 positionId = 1;
  if (has_positionid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->positionid(), target);
  }

  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // required uint32 quality = 3;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quality(), target);
  }

  // repeated .SlotInfoBean slotInfoBean = 4;
  for (int i = 0; i < this->slotinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->slotinfobean(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EquipmentInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 positionId = 1;
    if (has_positionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->positionid());
    }

    // required uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 quality = 3;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

  }
  // repeated .SlotInfoBean slotInfoBean = 4;
  total_size += 1 * this->slotinfobean_size();
  for (int i = 0; i < this->slotinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slotinfobean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipmentInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EquipmentInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EquipmentInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EquipmentInfoBean::MergeFrom(const EquipmentInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  slotinfobean_.MergeFrom(from.slotinfobean_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_positionid()) {
      set_positionid(from.positionid());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EquipmentInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipmentInfoBean::CopyFrom(const EquipmentInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipmentInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  for (int i = 0; i < slotinfobean_size(); i++) {
    if (!this->slotinfobean(i).IsInitialized()) return false;
  }
  return true;
}

void EquipmentInfoBean::Swap(EquipmentInfoBean* other) {
  if (other != this) {
    std::swap(positionid_, other->positionid_);
    std::swap(level_, other->level_);
    std::swap(quality_, other->quality_);
    slotinfobean_.Swap(&other->slotinfobean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EquipmentInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EquipmentInfoBean_descriptor_;
  metadata.reflection = EquipmentInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroInfoBean::kIdFieldNumber;
const int HeroInfoBean::kLevelFieldNumber;
const int HeroInfoBean::kExperienceFieldNumber;
const int HeroInfoBean::kStarFieldNumber;
const int HeroInfoBean::kQualityFieldNumber;
const int HeroInfoBean::kCurrentPatienceFieldNumber;
const int HeroInfoBean::kIsSaveFieldNumber;
const int HeroInfoBean::kTrainTypeFieldNumber;
const int HeroInfoBean::kWaitPatienceFieldNumber;
const int HeroInfoBean::kEquipmentInfoBeanFieldNumber;
#endif  // !_MSC_VER

HeroInfoBean::HeroInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroInfoBean::InitAsDefaultInstance() {
}

HeroInfoBean::HeroInfoBean(const HeroInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroInfoBean::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  level_ = 0u;
  experience_ = 0u;
  star_ = 0u;
  quality_ = 0u;
  issave_ = false;
  traintype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroInfoBean::~HeroInfoBean() {
  SharedDtor();
}

void HeroInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroInfoBean_descriptor_;
}

const HeroInfoBean& HeroInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

HeroInfoBean* HeroInfoBean::default_instance_ = NULL;

HeroInfoBean* HeroInfoBean::New() const {
  return new HeroInfoBean;
}

void HeroInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    level_ = 0u;
    experience_ = 0u;
    star_ = 0u;
    quality_ = 0u;
    issave_ = false;
    traintype_ = 0u;
  }
  currentpatience_.Clear();
  waitpatience_.Clear();
  equipmentinfobean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required uint32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_experience;
        break;
      }

      // required uint32 experience = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_experience:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &experience_)));
          set_has_experience();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_star;
        break;
      }

      // required uint32 star = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_quality;
        break;
      }

      // required uint32 quality = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_currentPatience;
        break;
      }

      // repeated uint32 currentPatience = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_currentPatience:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_currentpatience())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_currentpatience())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_currentPatience;
        if (input->ExpectTag(56)) goto parse_isSave;
        break;
      }

      // required bool isSave = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isSave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issave_)));
          set_has_issave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_trainType;
        break;
      }

      // required uint32 trainType = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_trainType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &traintype_)));
          set_has_traintype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_waitPatience;
        break;
      }

      // repeated uint32 waitPatience = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_waitPatience:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 72, input, this->mutable_waitpatience())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_waitpatience())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_waitPatience;
        if (input->ExpectTag(82)) goto parse_equipmentInfoBean;
        break;
      }

      // repeated .EquipmentInfoBean equipmentInfoBean = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equipmentInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equipmentinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_equipmentInfoBean;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // required uint32 experience = 3;
  if (has_experience()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->experience(), output);
  }

  // required uint32 star = 4;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->star(), output);
  }

  // required uint32 quality = 5;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->quality(), output);
  }

  // repeated uint32 currentPatience = 6;
  for (int i = 0; i < this->currentpatience_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->currentpatience(i), output);
  }

  // required bool isSave = 7;
  if (has_issave()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->issave(), output);
  }

  // required uint32 trainType = 8;
  if (has_traintype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->traintype(), output);
  }

  // repeated uint32 waitPatience = 9;
  for (int i = 0; i < this->waitpatience_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      9, this->waitpatience(i), output);
  }

  // repeated .EquipmentInfoBean equipmentInfoBean = 10;
  for (int i = 0; i < this->equipmentinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->equipmentinfobean(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // required uint32 experience = 3;
  if (has_experience()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->experience(), target);
  }

  // required uint32 star = 4;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->star(), target);
  }

  // required uint32 quality = 5;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->quality(), target);
  }

  // repeated uint32 currentPatience = 6;
  for (int i = 0; i < this->currentpatience_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->currentpatience(i), target);
  }

  // required bool isSave = 7;
  if (has_issave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->issave(), target);
  }

  // required uint32 trainType = 8;
  if (has_traintype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->traintype(), target);
  }

  // repeated uint32 waitPatience = 9;
  for (int i = 0; i < this->waitpatience_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(9, this->waitpatience(i), target);
  }

  // repeated .EquipmentInfoBean equipmentInfoBean = 10;
  for (int i = 0; i < this->equipmentinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->equipmentinfobean(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 experience = 3;
    if (has_experience()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->experience());
    }

    // required uint32 star = 4;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

    // required uint32 quality = 5;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // required bool isSave = 7;
    if (has_issave()) {
      total_size += 1 + 1;
    }

    // required uint32 trainType = 8;
    if (has_traintype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->traintype());
    }

  }
  // repeated uint32 currentPatience = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->currentpatience_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->currentpatience(i));
    }
    total_size += 1 * this->currentpatience_size() + data_size;
  }

  // repeated uint32 waitPatience = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->waitpatience_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->waitpatience(i));
    }
    total_size += 1 * this->waitpatience_size() + data_size;
  }

  // repeated .EquipmentInfoBean equipmentInfoBean = 10;
  total_size += 1 * this->equipmentinfobean_size();
  for (int i = 0; i < this->equipmentinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equipmentinfobean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroInfoBean::MergeFrom(const HeroInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  currentpatience_.MergeFrom(from.currentpatience_);
  waitpatience_.MergeFrom(from.waitpatience_);
  equipmentinfobean_.MergeFrom(from.equipmentinfobean_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_experience()) {
      set_experience(from.experience());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_issave()) {
      set_issave(from.issave());
    }
    if (from.has_traintype()) {
      set_traintype(from.traintype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroInfoBean::CopyFrom(const HeroInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000df) != 0x000000df) return false;

  for (int i = 0; i < equipmentinfobean_size(); i++) {
    if (!this->equipmentinfobean(i).IsInitialized()) return false;
  }
  return true;
}

void HeroInfoBean::Swap(HeroInfoBean* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(experience_, other->experience_);
    std::swap(star_, other->star_);
    std::swap(quality_, other->quality_);
    currentpatience_.Swap(&other->currentpatience_);
    std::swap(issave_, other->issave_);
    std::swap(traintype_, other->traintype_);
    waitpatience_.Swap(&other->waitpatience_);
    equipmentinfobean_.Swap(&other->equipmentinfobean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroInfoBean_descriptor_;
  metadata.reflection = HeroInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChangeToStoneKeyIdBean::kItemKeyIdFieldNumber;
const int ChangeToStoneKeyIdBean::kCountFieldNumber;
#endif  // !_MSC_VER

ChangeToStoneKeyIdBean::ChangeToStoneKeyIdBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChangeToStoneKeyIdBean::InitAsDefaultInstance() {
}

ChangeToStoneKeyIdBean::ChangeToStoneKeyIdBean(const ChangeToStoneKeyIdBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChangeToStoneKeyIdBean::SharedCtor() {
  _cached_size_ = 0;
  itemkeyid_ = 0u;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChangeToStoneKeyIdBean::~ChangeToStoneKeyIdBean() {
  SharedDtor();
}

void ChangeToStoneKeyIdBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChangeToStoneKeyIdBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeToStoneKeyIdBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeToStoneKeyIdBean_descriptor_;
}

const ChangeToStoneKeyIdBean& ChangeToStoneKeyIdBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

ChangeToStoneKeyIdBean* ChangeToStoneKeyIdBean::default_instance_ = NULL;

ChangeToStoneKeyIdBean* ChangeToStoneKeyIdBean::New() const {
  return new ChangeToStoneKeyIdBean;
}

void ChangeToStoneKeyIdBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemkeyid_ = 0u;
    count_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChangeToStoneKeyIdBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 itemKeyId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemkeyid_)));
          set_has_itemkeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required uint32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ChangeToStoneKeyIdBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 itemKeyId = 1;
  if (has_itemkeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemkeyid(), output);
  }

  // required uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChangeToStoneKeyIdBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 itemKeyId = 1;
  if (has_itemkeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemkeyid(), target);
  }

  // required uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChangeToStoneKeyIdBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 itemKeyId = 1;
    if (has_itemkeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemkeyid());
    }

    // required uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeToStoneKeyIdBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChangeToStoneKeyIdBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChangeToStoneKeyIdBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChangeToStoneKeyIdBean::MergeFrom(const ChangeToStoneKeyIdBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemkeyid()) {
      set_itemkeyid(from.itemkeyid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChangeToStoneKeyIdBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeToStoneKeyIdBean::CopyFrom(const ChangeToStoneKeyIdBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeToStoneKeyIdBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ChangeToStoneKeyIdBean::Swap(ChangeToStoneKeyIdBean* other) {
  if (other != this) {
    std::swap(itemkeyid_, other->itemkeyid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChangeToStoneKeyIdBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangeToStoneKeyIdBean_descriptor_;
  metadata.reflection = ChangeToStoneKeyIdBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetHeroInfoUp::kUserIdFieldNumber;
#endif  // !_MSC_VER

GetHeroInfoUp::GetHeroInfoUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetHeroInfoUp::InitAsDefaultInstance() {
}

GetHeroInfoUp::GetHeroInfoUp(const GetHeroInfoUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetHeroInfoUp::SharedCtor() {
  _cached_size_ = 0;
  userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetHeroInfoUp::~GetHeroInfoUp() {
  SharedDtor();
}

void GetHeroInfoUp::SharedDtor() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (this != default_instance_) {
  }
}

void GetHeroInfoUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetHeroInfoUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetHeroInfoUp_descriptor_;
}

const GetHeroInfoUp& GetHeroInfoUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

GetHeroInfoUp* GetHeroInfoUp::default_instance_ = NULL;

GetHeroInfoUp* GetHeroInfoUp::New() const {
  return new GetHeroInfoUp;
}

void GetHeroInfoUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_userid()) {
      if (userid_ != &::google::protobuf::internal::kEmptyString) {
        userid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetHeroInfoUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetHeroInfoUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string userId = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->userid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetHeroInfoUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string userId = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetHeroInfoUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string userId = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetHeroInfoUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetHeroInfoUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetHeroInfoUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetHeroInfoUp::MergeFrom(const GetHeroInfoUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_userid(from.userid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetHeroInfoUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHeroInfoUp::CopyFrom(const GetHeroInfoUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHeroInfoUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetHeroInfoUp::Swap(GetHeroInfoUp* other) {
  if (other != this) {
    std::swap(userid_, other->userid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetHeroInfoUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetHeroInfoUp_descriptor_;
  metadata.reflection = GetHeroInfoUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetHeroInfoDown::kUserIdFieldNumber;
const int GetHeroInfoDown::kHeroExpFieldNumber;
const int GetHeroInfoDown::kHeroInfoBeanFieldNumber;
#endif  // !_MSC_VER

GetHeroInfoDown::GetHeroInfoDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetHeroInfoDown::InitAsDefaultInstance() {
}

GetHeroInfoDown::GetHeroInfoDown(const GetHeroInfoDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetHeroInfoDown::SharedCtor() {
  _cached_size_ = 0;
  userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  heroexp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetHeroInfoDown::~GetHeroInfoDown() {
  SharedDtor();
}

void GetHeroInfoDown::SharedDtor() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (this != default_instance_) {
  }
}

void GetHeroInfoDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetHeroInfoDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetHeroInfoDown_descriptor_;
}

const GetHeroInfoDown& GetHeroInfoDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

GetHeroInfoDown* GetHeroInfoDown::default_instance_ = NULL;

GetHeroInfoDown* GetHeroInfoDown::New() const {
  return new GetHeroInfoDown;
}

void GetHeroInfoDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_userid()) {
      if (userid_ != &::google::protobuf::internal::kEmptyString) {
        userid_->clear();
      }
    }
    heroexp_ = 0u;
  }
  heroinfobean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetHeroInfoDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_heroExp;
        break;
      }

      // required uint32 heroExp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroexp_)));
          set_has_heroexp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_heroInfoBean;
        break;
      }

      // repeated .HeroInfoBean heroInfoBean = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heroInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_heroinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_heroInfoBean;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetHeroInfoDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string userId = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->userid(), output);
  }

  // required uint32 heroExp = 2;
  if (has_heroexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->heroexp(), output);
  }

  // repeated .HeroInfoBean heroInfoBean = 3;
  for (int i = 0; i < this->heroinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->heroinfobean(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetHeroInfoDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string userId = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // required uint32 heroExp = 2;
  if (has_heroexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->heroexp(), target);
  }

  // repeated .HeroInfoBean heroInfoBean = 3;
  for (int i = 0; i < this->heroinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->heroinfobean(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetHeroInfoDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string userId = 1;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userid());
    }

    // required uint32 heroExp = 2;
    if (has_heroexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroexp());
    }

  }
  // repeated .HeroInfoBean heroInfoBean = 3;
  total_size += 1 * this->heroinfobean_size();
  for (int i = 0; i < this->heroinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->heroinfobean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetHeroInfoDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetHeroInfoDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetHeroInfoDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetHeroInfoDown::MergeFrom(const GetHeroInfoDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  heroinfobean_.MergeFrom(from.heroinfobean_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_heroexp()) {
      set_heroexp(from.heroexp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetHeroInfoDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHeroInfoDown::CopyFrom(const GetHeroInfoDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHeroInfoDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < heroinfobean_size(); i++) {
    if (!this->heroinfobean(i).IsInitialized()) return false;
  }
  return true;
}

void GetHeroInfoDown::Swap(GetHeroInfoDown* other) {
  if (other != this) {
    std::swap(userid_, other->userid_);
    std::swap(heroexp_, other->heroexp_);
    heroinfobean_.Swap(&other->heroinfobean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetHeroInfoDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetHeroInfoDown_descriptor_;
  metadata.reflection = GetHeroInfoDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseHeroBookUp::kItemIdFieldNumber;
#endif  // !_MSC_VER

UseHeroBookUp::UseHeroBookUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UseHeroBookUp::InitAsDefaultInstance() {
}

UseHeroBookUp::UseHeroBookUp(const UseHeroBookUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UseHeroBookUp::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseHeroBookUp::~UseHeroBookUp() {
  SharedDtor();
}

void UseHeroBookUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseHeroBookUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseHeroBookUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseHeroBookUp_descriptor_;
}

const UseHeroBookUp& UseHeroBookUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

UseHeroBookUp* UseHeroBookUp::default_instance_ = NULL;

UseHeroBookUp* UseHeroBookUp::New() const {
  return new UseHeroBookUp;
}

void UseHeroBookUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseHeroBookUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 itemId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UseHeroBookUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 itemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UseHeroBookUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 itemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UseHeroBookUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 itemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseHeroBookUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseHeroBookUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseHeroBookUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseHeroBookUp::MergeFrom(const UseHeroBookUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseHeroBookUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseHeroBookUp::CopyFrom(const UseHeroBookUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseHeroBookUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UseHeroBookUp::Swap(UseHeroBookUp* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseHeroBookUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseHeroBookUp_descriptor_;
  metadata.reflection = UseHeroBookUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseHeroBookDown::kIsHaveHeroFieldNumber;
const int UseHeroBookDown::kHeroKeyIdFieldNumber;
const int UseHeroBookDown::kChangeToStoneKeyIdBeanFieldNumber;
#endif  // !_MSC_VER

UseHeroBookDown::UseHeroBookDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UseHeroBookDown::InitAsDefaultInstance() {
  changetostonekeyidbean_ = const_cast< ::ChangeToStoneKeyIdBean*>(&::ChangeToStoneKeyIdBean::default_instance());
}

UseHeroBookDown::UseHeroBookDown(const UseHeroBookDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UseHeroBookDown::SharedCtor() {
  _cached_size_ = 0;
  ishavehero_ = false;
  herokeyid_ = 0u;
  changetostonekeyidbean_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseHeroBookDown::~UseHeroBookDown() {
  SharedDtor();
}

void UseHeroBookDown::SharedDtor() {
  if (this != default_instance_) {
    delete changetostonekeyidbean_;
  }
}

void UseHeroBookDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseHeroBookDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseHeroBookDown_descriptor_;
}

const UseHeroBookDown& UseHeroBookDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

UseHeroBookDown* UseHeroBookDown::default_instance_ = NULL;

UseHeroBookDown* UseHeroBookDown::New() const {
  return new UseHeroBookDown;
}

void UseHeroBookDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ishavehero_ = false;
    herokeyid_ = 0u;
    if (has_changetostonekeyidbean()) {
      if (changetostonekeyidbean_ != NULL) changetostonekeyidbean_->::ChangeToStoneKeyIdBean::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseHeroBookDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool isHaveHero = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ishavehero_)));
          set_has_ishavehero();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_heroKeyId;
        break;
      }

      // required uint32 heroKeyId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroKeyId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herokeyid_)));
          set_has_herokeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_changeToStoneKeyIdBean;
        break;
      }

      // optional .ChangeToStoneKeyIdBean changeToStoneKeyIdBean = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_changeToStoneKeyIdBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_changetostonekeyidbean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UseHeroBookDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool isHaveHero = 1;
  if (has_ishavehero()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ishavehero(), output);
  }

  // required uint32 heroKeyId = 2;
  if (has_herokeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->herokeyid(), output);
  }

  // optional .ChangeToStoneKeyIdBean changeToStoneKeyIdBean = 3;
  if (has_changetostonekeyidbean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->changetostonekeyidbean(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UseHeroBookDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool isHaveHero = 1;
  if (has_ishavehero()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ishavehero(), target);
  }

  // required uint32 heroKeyId = 2;
  if (has_herokeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->herokeyid(), target);
  }

  // optional .ChangeToStoneKeyIdBean changeToStoneKeyIdBean = 3;
  if (has_changetostonekeyidbean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->changetostonekeyidbean(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UseHeroBookDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool isHaveHero = 1;
    if (has_ishavehero()) {
      total_size += 1 + 1;
    }

    // required uint32 heroKeyId = 2;
    if (has_herokeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herokeyid());
    }

    // optional .ChangeToStoneKeyIdBean changeToStoneKeyIdBean = 3;
    if (has_changetostonekeyidbean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->changetostonekeyidbean());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseHeroBookDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseHeroBookDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseHeroBookDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseHeroBookDown::MergeFrom(const UseHeroBookDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ishavehero()) {
      set_ishavehero(from.ishavehero());
    }
    if (from.has_herokeyid()) {
      set_herokeyid(from.herokeyid());
    }
    if (from.has_changetostonekeyidbean()) {
      mutable_changetostonekeyidbean()->::ChangeToStoneKeyIdBean::MergeFrom(from.changetostonekeyidbean());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseHeroBookDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseHeroBookDown::CopyFrom(const UseHeroBookDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseHeroBookDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_changetostonekeyidbean()) {
    if (!this->changetostonekeyidbean().IsInitialized()) return false;
  }
  return true;
}

void UseHeroBookDown::Swap(UseHeroBookDown* other) {
  if (other != this) {
    std::swap(ishavehero_, other->ishavehero_);
    std::swap(herokeyid_, other->herokeyid_);
    std::swap(changetostonekeyidbean_, other->changetostonekeyidbean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseHeroBookDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseHeroBookDown_descriptor_;
  metadata.reflection = UseHeroBookDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CallHeroUp::kHeroKeyIdFieldNumber;
#endif  // !_MSC_VER

CallHeroUp::CallHeroUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CallHeroUp::InitAsDefaultInstance() {
}

CallHeroUp::CallHeroUp(const CallHeroUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CallHeroUp::SharedCtor() {
  _cached_size_ = 0;
  herokeyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CallHeroUp::~CallHeroUp() {
  SharedDtor();
}

void CallHeroUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CallHeroUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallHeroUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CallHeroUp_descriptor_;
}

const CallHeroUp& CallHeroUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

CallHeroUp* CallHeroUp::default_instance_ = NULL;

CallHeroUp* CallHeroUp::New() const {
  return new CallHeroUp;
}

void CallHeroUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    herokeyid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CallHeroUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroKeyId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herokeyid_)));
          set_has_herokeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CallHeroUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->herokeyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CallHeroUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->herokeyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CallHeroUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroKeyId = 1;
    if (has_herokeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herokeyid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallHeroUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CallHeroUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CallHeroUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CallHeroUp::MergeFrom(const CallHeroUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_herokeyid()) {
      set_herokeyid(from.herokeyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CallHeroUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallHeroUp::CopyFrom(const CallHeroUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallHeroUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CallHeroUp::Swap(CallHeroUp* other) {
  if (other != this) {
    std::swap(herokeyid_, other->herokeyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CallHeroUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CallHeroUp_descriptor_;
  metadata.reflection = CallHeroUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroEvolutionUp::kHeroKeyIdFieldNumber;
#endif  // !_MSC_VER

HeroEvolutionUp::HeroEvolutionUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroEvolutionUp::InitAsDefaultInstance() {
}

HeroEvolutionUp::HeroEvolutionUp(const HeroEvolutionUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroEvolutionUp::SharedCtor() {
  _cached_size_ = 0;
  herokeyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroEvolutionUp::~HeroEvolutionUp() {
  SharedDtor();
}

void HeroEvolutionUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroEvolutionUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroEvolutionUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroEvolutionUp_descriptor_;
}

const HeroEvolutionUp& HeroEvolutionUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

HeroEvolutionUp* HeroEvolutionUp::default_instance_ = NULL;

HeroEvolutionUp* HeroEvolutionUp::New() const {
  return new HeroEvolutionUp;
}

void HeroEvolutionUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    herokeyid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroEvolutionUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroKeyId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herokeyid_)));
          set_has_herokeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroEvolutionUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->herokeyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroEvolutionUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->herokeyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroEvolutionUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroKeyId = 1;
    if (has_herokeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herokeyid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroEvolutionUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroEvolutionUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroEvolutionUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroEvolutionUp::MergeFrom(const HeroEvolutionUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_herokeyid()) {
      set_herokeyid(from.herokeyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroEvolutionUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroEvolutionUp::CopyFrom(const HeroEvolutionUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroEvolutionUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HeroEvolutionUp::Swap(HeroEvolutionUp* other) {
  if (other != this) {
    std::swap(herokeyid_, other->herokeyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroEvolutionUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroEvolutionUp_descriptor_;
  metadata.reflection = HeroEvolutionUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroTrainUp::kHeroKeyIdFieldNumber;
const int HeroTrainUp::kTrainTypeFieldNumber;
#endif  // !_MSC_VER

HeroTrainUp::HeroTrainUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroTrainUp::InitAsDefaultInstance() {
}

HeroTrainUp::HeroTrainUp(const HeroTrainUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroTrainUp::SharedCtor() {
  _cached_size_ = 0;
  herokeyid_ = 0u;
  traintype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroTrainUp::~HeroTrainUp() {
  SharedDtor();
}

void HeroTrainUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroTrainUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroTrainUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroTrainUp_descriptor_;
}

const HeroTrainUp& HeroTrainUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

HeroTrainUp* HeroTrainUp::default_instance_ = NULL;

HeroTrainUp* HeroTrainUp::New() const {
  return new HeroTrainUp;
}

void HeroTrainUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    herokeyid_ = 0u;
    traintype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroTrainUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroKeyId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herokeyid_)));
          set_has_herokeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_trainType;
        break;
      }

      // required uint32 trainType = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_trainType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &traintype_)));
          set_has_traintype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroTrainUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->herokeyid(), output);
  }

  // required uint32 trainType = 2;
  if (has_traintype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->traintype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroTrainUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->herokeyid(), target);
  }

  // required uint32 trainType = 2;
  if (has_traintype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->traintype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroTrainUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroKeyId = 1;
    if (has_herokeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herokeyid());
    }

    // required uint32 trainType = 2;
    if (has_traintype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->traintype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroTrainUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroTrainUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroTrainUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroTrainUp::MergeFrom(const HeroTrainUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_herokeyid()) {
      set_herokeyid(from.herokeyid());
    }
    if (from.has_traintype()) {
      set_traintype(from.traintype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroTrainUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroTrainUp::CopyFrom(const HeroTrainUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroTrainUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HeroTrainUp::Swap(HeroTrainUp* other) {
  if (other != this) {
    std::swap(herokeyid_, other->herokeyid_);
    std::swap(traintype_, other->traintype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroTrainUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroTrainUp_descriptor_;
  metadata.reflection = HeroTrainUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroTrainDown::kHeroKeyIdFieldNumber;
const int HeroTrainDown::kPatiencesFieldNumber;
#endif  // !_MSC_VER

HeroTrainDown::HeroTrainDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroTrainDown::InitAsDefaultInstance() {
}

HeroTrainDown::HeroTrainDown(const HeroTrainDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroTrainDown::SharedCtor() {
  _cached_size_ = 0;
  herokeyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroTrainDown::~HeroTrainDown() {
  SharedDtor();
}

void HeroTrainDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroTrainDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroTrainDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroTrainDown_descriptor_;
}

const HeroTrainDown& HeroTrainDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

HeroTrainDown* HeroTrainDown::default_instance_ = NULL;

HeroTrainDown* HeroTrainDown::New() const {
  return new HeroTrainDown;
}

void HeroTrainDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    herokeyid_ = 0u;
  }
  patiences_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroTrainDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroKeyId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herokeyid_)));
          set_has_herokeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_patiences;
        break;
      }

      // repeated uint32 patiences = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_patiences:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_patiences())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_patiences())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_patiences;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroTrainDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->herokeyid(), output);
  }

  // repeated uint32 patiences = 2;
  for (int i = 0; i < this->patiences_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->patiences(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroTrainDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->herokeyid(), target);
  }

  // repeated uint32 patiences = 2;
  for (int i = 0; i < this->patiences_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->patiences(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroTrainDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroKeyId = 1;
    if (has_herokeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herokeyid());
    }

  }
  // repeated uint32 patiences = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->patiences_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->patiences(i));
    }
    total_size += 1 * this->patiences_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroTrainDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroTrainDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroTrainDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroTrainDown::MergeFrom(const HeroTrainDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  patiences_.MergeFrom(from.patiences_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_herokeyid()) {
      set_herokeyid(from.herokeyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroTrainDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroTrainDown::CopyFrom(const HeroTrainDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroTrainDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HeroTrainDown::Swap(HeroTrainDown* other) {
  if (other != this) {
    std::swap(herokeyid_, other->herokeyid_);
    patiences_.Swap(&other->patiences_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroTrainDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroTrainDown_descriptor_;
  metadata.reflection = HeroTrainDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SaveTrainPatienceUp::kHeroKeyIdFieldNumber;
#endif  // !_MSC_VER

SaveTrainPatienceUp::SaveTrainPatienceUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SaveTrainPatienceUp::InitAsDefaultInstance() {
}

SaveTrainPatienceUp::SaveTrainPatienceUp(const SaveTrainPatienceUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SaveTrainPatienceUp::SharedCtor() {
  _cached_size_ = 0;
  herokeyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaveTrainPatienceUp::~SaveTrainPatienceUp() {
  SharedDtor();
}

void SaveTrainPatienceUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SaveTrainPatienceUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaveTrainPatienceUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaveTrainPatienceUp_descriptor_;
}

const SaveTrainPatienceUp& SaveTrainPatienceUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

SaveTrainPatienceUp* SaveTrainPatienceUp::default_instance_ = NULL;

SaveTrainPatienceUp* SaveTrainPatienceUp::New() const {
  return new SaveTrainPatienceUp;
}

void SaveTrainPatienceUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    herokeyid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SaveTrainPatienceUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroKeyId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herokeyid_)));
          set_has_herokeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SaveTrainPatienceUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->herokeyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SaveTrainPatienceUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->herokeyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SaveTrainPatienceUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroKeyId = 1;
    if (has_herokeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herokeyid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaveTrainPatienceUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SaveTrainPatienceUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SaveTrainPatienceUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SaveTrainPatienceUp::MergeFrom(const SaveTrainPatienceUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_herokeyid()) {
      set_herokeyid(from.herokeyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SaveTrainPatienceUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveTrainPatienceUp::CopyFrom(const SaveTrainPatienceUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveTrainPatienceUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SaveTrainPatienceUp::Swap(SaveTrainPatienceUp* other) {
  if (other != this) {
    std::swap(herokeyid_, other->herokeyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SaveTrainPatienceUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaveTrainPatienceUp_descriptor_;
  metadata.reflection = SaveTrainPatienceUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CancelTrainPatienceUp::kHeroKeyIdFieldNumber;
#endif  // !_MSC_VER

CancelTrainPatienceUp::CancelTrainPatienceUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CancelTrainPatienceUp::InitAsDefaultInstance() {
}

CancelTrainPatienceUp::CancelTrainPatienceUp(const CancelTrainPatienceUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CancelTrainPatienceUp::SharedCtor() {
  _cached_size_ = 0;
  herokeyid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CancelTrainPatienceUp::~CancelTrainPatienceUp() {
  SharedDtor();
}

void CancelTrainPatienceUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CancelTrainPatienceUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelTrainPatienceUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CancelTrainPatienceUp_descriptor_;
}

const CancelTrainPatienceUp& CancelTrainPatienceUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100300_5fHeroMessage_2eproto();
  return *default_instance_;
}

CancelTrainPatienceUp* CancelTrainPatienceUp::default_instance_ = NULL;

CancelTrainPatienceUp* CancelTrainPatienceUp::New() const {
  return new CancelTrainPatienceUp;
}

void CancelTrainPatienceUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    herokeyid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CancelTrainPatienceUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroKeyId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &herokeyid_)));
          set_has_herokeyid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CancelTrainPatienceUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->herokeyid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CancelTrainPatienceUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 heroKeyId = 1;
  if (has_herokeyid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->herokeyid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CancelTrainPatienceUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroKeyId = 1;
    if (has_herokeyid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->herokeyid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelTrainPatienceUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CancelTrainPatienceUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CancelTrainPatienceUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CancelTrainPatienceUp::MergeFrom(const CancelTrainPatienceUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_herokeyid()) {
      set_herokeyid(from.herokeyid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CancelTrainPatienceUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelTrainPatienceUp::CopyFrom(const CancelTrainPatienceUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelTrainPatienceUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CancelTrainPatienceUp::Swap(CancelTrainPatienceUp* other) {
  if (other != this) {
    std::swap(herokeyid_, other->herokeyid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CancelTrainPatienceUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CancelTrainPatienceUp_descriptor_;
  metadata.reflection = CancelTrainPatienceUp_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
