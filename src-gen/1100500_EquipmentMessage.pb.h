// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: 1100500_EquipmentMessage.proto

#ifndef PROTOBUF_1100500_5fEquipmentMessage_2eproto__INCLUDED
#define PROTOBUF_1100500_5fEquipmentMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

class EquipmentInfoBean;
class SlotInfoBean;
class GetEquipmentInfoUp;
class GetEquipmentInfoDown;
class UpgradeEquipmentLevelUp;
class UpgradeEquipmentQualityUp;
class PutonPluginUp;
class DischargePlugUp;
class RefinePlugUp;
class RefinePlugDown;

enum EquipmentCommondIdEnum {
  _GetEquipmentInfoUp = 1100501,
  _GetEquipmentInfoDown = 1100502,
  _UpgradeEquipmentLevelUp = 1100503,
  _UpgradeEquipmentQualityUp = 1100505,
  _PutonPluginUp = 1100507,
  _DischargePlugUp = 1100509,
  _RefinePlugUp = 1100511,
  _RefinePlugDown = 1100512
};
bool EquipmentCommondIdEnum_IsValid(int value);
const EquipmentCommondIdEnum EquipmentCommondIdEnum_MIN = _GetEquipmentInfoUp;
const EquipmentCommondIdEnum EquipmentCommondIdEnum_MAX = _RefinePlugDown;
const int EquipmentCommondIdEnum_ARRAYSIZE = EquipmentCommondIdEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* EquipmentCommondIdEnum_descriptor();
inline const ::std::string& EquipmentCommondIdEnum_Name(EquipmentCommondIdEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    EquipmentCommondIdEnum_descriptor(), value);
}
inline bool EquipmentCommondIdEnum_Parse(
    const ::std::string& name, EquipmentCommondIdEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EquipmentCommondIdEnum>(
    EquipmentCommondIdEnum_descriptor(), name, value);
}
// ===================================================================

class EquipmentInfoBean : public ::google::protobuf::Message {
 public:
  EquipmentInfoBean();
  virtual ~EquipmentInfoBean();

  EquipmentInfoBean(const EquipmentInfoBean& from);

  inline EquipmentInfoBean& operator=(const EquipmentInfoBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentInfoBean& default_instance();

  void Swap(EquipmentInfoBean* other);

  // implements Message ----------------------------------------------

  EquipmentInfoBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentInfoBean& from);
  void MergeFrom(const EquipmentInfoBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 positionId = 1;
  inline bool has_positionid() const;
  inline void clear_positionid();
  static const int kPositionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 positionid() const;
  inline void set_positionid(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // repeated .SlotInfoBean slotInfoBean = 4;
  inline int slotinfobean_size() const;
  inline void clear_slotinfobean();
  static const int kSlotInfoBeanFieldNumber = 4;
  inline const ::SlotInfoBean& slotinfobean(int index) const;
  inline ::SlotInfoBean* mutable_slotinfobean(int index);
  inline ::SlotInfoBean* add_slotinfobean();
  inline const ::google::protobuf::RepeatedPtrField< ::SlotInfoBean >&
      slotinfobean() const;
  inline ::google::protobuf::RepeatedPtrField< ::SlotInfoBean >*
      mutable_slotinfobean();

  // @@protoc_insertion_point(class_scope:EquipmentInfoBean)
 private:
  inline void set_has_positionid();
  inline void clear_has_positionid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_quality();
  inline void clear_has_quality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 positionid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::SlotInfoBean > slotinfobean_;
  ::google::protobuf::uint32 quality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static EquipmentInfoBean* default_instance_;
};
// -------------------------------------------------------------------

class SlotInfoBean : public ::google::protobuf::Message {
 public:
  SlotInfoBean();
  virtual ~SlotInfoBean();

  SlotInfoBean(const SlotInfoBean& from);

  inline SlotInfoBean& operator=(const SlotInfoBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SlotInfoBean& default_instance();

  void Swap(SlotInfoBean* other);

  // implements Message ----------------------------------------------

  SlotInfoBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SlotInfoBean& from);
  void MergeFrom(const SlotInfoBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 plugId = 2;
  inline bool has_plugid() const;
  inline void clear_plugid();
  static const int kPlugIdFieldNumber = 2;
  inline ::google::protobuf::uint32 plugid() const;
  inline void set_plugid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SlotInfoBean)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_plugid();
  inline void clear_has_plugid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 plugid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static SlotInfoBean* default_instance_;
};
// -------------------------------------------------------------------

class GetEquipmentInfoUp : public ::google::protobuf::Message {
 public:
  GetEquipmentInfoUp();
  virtual ~GetEquipmentInfoUp();

  GetEquipmentInfoUp(const GetEquipmentInfoUp& from);

  inline GetEquipmentInfoUp& operator=(const GetEquipmentInfoUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEquipmentInfoUp& default_instance();

  void Swap(GetEquipmentInfoUp* other);

  // implements Message ----------------------------------------------

  GetEquipmentInfoUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEquipmentInfoUp& from);
  void MergeFrom(const GetEquipmentInfoUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  inline void set_allocated_userid(::std::string* userid);

  // required uint32 heroKeyId = 2;
  inline bool has_herokeyid() const;
  inline void clear_herokeyid();
  static const int kHeroKeyIdFieldNumber = 2;
  inline ::google::protobuf::uint32 herokeyid() const;
  inline void set_herokeyid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GetEquipmentInfoUp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_herokeyid();
  inline void clear_has_herokeyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* userid_;
  ::google::protobuf::uint32 herokeyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static GetEquipmentInfoUp* default_instance_;
};
// -------------------------------------------------------------------

class GetEquipmentInfoDown : public ::google::protobuf::Message {
 public:
  GetEquipmentInfoDown();
  virtual ~GetEquipmentInfoDown();

  GetEquipmentInfoDown(const GetEquipmentInfoDown& from);

  inline GetEquipmentInfoDown& operator=(const GetEquipmentInfoDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEquipmentInfoDown& default_instance();

  void Swap(GetEquipmentInfoDown* other);

  // implements Message ----------------------------------------------

  GetEquipmentInfoDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEquipmentInfoDown& from);
  void MergeFrom(const GetEquipmentInfoDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  inline void set_allocated_userid(::std::string* userid);

  // required uint32 heroKeyId = 2;
  inline bool has_herokeyid() const;
  inline void clear_herokeyid();
  static const int kHeroKeyIdFieldNumber = 2;
  inline ::google::protobuf::uint32 herokeyid() const;
  inline void set_herokeyid(::google::protobuf::uint32 value);

  // repeated .EquipmentInfoBean equipmentInfoBean = 3;
  inline int equipmentinfobean_size() const;
  inline void clear_equipmentinfobean();
  static const int kEquipmentInfoBeanFieldNumber = 3;
  inline const ::EquipmentInfoBean& equipmentinfobean(int index) const;
  inline ::EquipmentInfoBean* mutable_equipmentinfobean(int index);
  inline ::EquipmentInfoBean* add_equipmentinfobean();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipmentInfoBean >&
      equipmentinfobean() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipmentInfoBean >*
      mutable_equipmentinfobean();

  // @@protoc_insertion_point(class_scope:GetEquipmentInfoDown)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_herokeyid();
  inline void clear_has_herokeyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* userid_;
  ::google::protobuf::RepeatedPtrField< ::EquipmentInfoBean > equipmentinfobean_;
  ::google::protobuf::uint32 herokeyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static GetEquipmentInfoDown* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeEquipmentLevelUp : public ::google::protobuf::Message {
 public:
  UpgradeEquipmentLevelUp();
  virtual ~UpgradeEquipmentLevelUp();

  UpgradeEquipmentLevelUp(const UpgradeEquipmentLevelUp& from);

  inline UpgradeEquipmentLevelUp& operator=(const UpgradeEquipmentLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeEquipmentLevelUp& default_instance();

  void Swap(UpgradeEquipmentLevelUp* other);

  // implements Message ----------------------------------------------

  UpgradeEquipmentLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeEquipmentLevelUp& from);
  void MergeFrom(const UpgradeEquipmentLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heroKeyId = 1;
  inline bool has_herokeyid() const;
  inline void clear_herokeyid();
  static const int kHeroKeyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 herokeyid() const;
  inline void set_herokeyid(::google::protobuf::uint32 value);

  // required uint32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UpgradeEquipmentLevelUp)
 private:
  inline void set_has_herokeyid();
  inline void clear_has_herokeyid();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 herokeyid_;
  ::google::protobuf::uint32 position_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static UpgradeEquipmentLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class UpgradeEquipmentQualityUp : public ::google::protobuf::Message {
 public:
  UpgradeEquipmentQualityUp();
  virtual ~UpgradeEquipmentQualityUp();

  UpgradeEquipmentQualityUp(const UpgradeEquipmentQualityUp& from);

  inline UpgradeEquipmentQualityUp& operator=(const UpgradeEquipmentQualityUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeEquipmentQualityUp& default_instance();

  void Swap(UpgradeEquipmentQualityUp* other);

  // implements Message ----------------------------------------------

  UpgradeEquipmentQualityUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpgradeEquipmentQualityUp& from);
  void MergeFrom(const UpgradeEquipmentQualityUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heroKeyId = 1;
  inline bool has_herokeyid() const;
  inline void clear_herokeyid();
  static const int kHeroKeyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 herokeyid() const;
  inline void set_herokeyid(::google::protobuf::uint32 value);

  // required uint32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UpgradeEquipmentQualityUp)
 private:
  inline void set_has_herokeyid();
  inline void clear_has_herokeyid();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 herokeyid_;
  ::google::protobuf::uint32 position_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static UpgradeEquipmentQualityUp* default_instance_;
};
// -------------------------------------------------------------------

class PutonPluginUp : public ::google::protobuf::Message {
 public:
  PutonPluginUp();
  virtual ~PutonPluginUp();

  PutonPluginUp(const PutonPluginUp& from);

  inline PutonPluginUp& operator=(const PutonPluginUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutonPluginUp& default_instance();

  void Swap(PutonPluginUp* other);

  // implements Message ----------------------------------------------

  PutonPluginUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutonPluginUp& from);
  void MergeFrom(const PutonPluginUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heroKeyId = 1;
  inline bool has_herokeyid() const;
  inline void clear_herokeyid();
  static const int kHeroKeyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 herokeyid() const;
  inline void set_herokeyid(::google::protobuf::uint32 value);

  // required uint32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // required uint32 slotId = 3;
  inline bool has_slotid() const;
  inline void clear_slotid();
  static const int kSlotIdFieldNumber = 3;
  inline ::google::protobuf::uint32 slotid() const;
  inline void set_slotid(::google::protobuf::uint32 value);

  // required uint32 pluginId = 4;
  inline bool has_pluginid() const;
  inline void clear_pluginid();
  static const int kPluginIdFieldNumber = 4;
  inline ::google::protobuf::uint32 pluginid() const;
  inline void set_pluginid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PutonPluginUp)
 private:
  inline void set_has_herokeyid();
  inline void clear_has_herokeyid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_slotid();
  inline void clear_has_slotid();
  inline void set_has_pluginid();
  inline void clear_has_pluginid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 herokeyid_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 slotid_;
  ::google::protobuf::uint32 pluginid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static PutonPluginUp* default_instance_;
};
// -------------------------------------------------------------------

class DischargePlugUp : public ::google::protobuf::Message {
 public:
  DischargePlugUp();
  virtual ~DischargePlugUp();

  DischargePlugUp(const DischargePlugUp& from);

  inline DischargePlugUp& operator=(const DischargePlugUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DischargePlugUp& default_instance();

  void Swap(DischargePlugUp* other);

  // implements Message ----------------------------------------------

  DischargePlugUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DischargePlugUp& from);
  void MergeFrom(const DischargePlugUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heroKeyId = 1;
  inline bool has_herokeyid() const;
  inline void clear_herokeyid();
  static const int kHeroKeyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 herokeyid() const;
  inline void set_herokeyid(::google::protobuf::uint32 value);

  // required uint32 position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline ::google::protobuf::uint32 position() const;
  inline void set_position(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DischargePlugUp)
 private:
  inline void set_has_herokeyid();
  inline void clear_has_herokeyid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 herokeyid_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static DischargePlugUp* default_instance_;
};
// -------------------------------------------------------------------

class RefinePlugUp : public ::google::protobuf::Message {
 public:
  RefinePlugUp();
  virtual ~RefinePlugUp();

  RefinePlugUp(const RefinePlugUp& from);

  inline RefinePlugUp& operator=(const RefinePlugUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefinePlugUp& default_instance();

  void Swap(RefinePlugUp* other);

  // implements Message ----------------------------------------------

  RefinePlugUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefinePlugUp& from);
  void MergeFrom(const RefinePlugUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plugId = 1;
  inline bool has_plugid() const;
  inline void clear_plugid();
  static const int kPlugIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plugid() const;
  inline void set_plugid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RefinePlugUp)
 private:
  inline void set_has_plugid();
  inline void clear_has_plugid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plugid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static RefinePlugUp* default_instance_;
};
// -------------------------------------------------------------------

class RefinePlugDown : public ::google::protobuf::Message {
 public:
  RefinePlugDown();
  virtual ~RefinePlugDown();

  RefinePlugDown(const RefinePlugDown& from);

  inline RefinePlugDown& operator=(const RefinePlugDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefinePlugDown& default_instance();

  void Swap(RefinePlugDown* other);

  // implements Message ----------------------------------------------

  RefinePlugDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefinePlugDown& from);
  void MergeFrom(const RefinePlugDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 plugId = 1;
  inline bool has_plugid() const;
  inline void clear_plugid();
  static const int kPlugIdFieldNumber = 1;
  inline ::google::protobuf::uint32 plugid() const;
  inline void set_plugid(::google::protobuf::uint32 value);

  // required bool success = 2;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 2;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:RefinePlugDown)
 private:
  inline void set_has_plugid();
  inline void clear_has_plugid();
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 plugid_;
  bool success_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_AssignDesc_1100500_5fEquipmentMessage_2eproto();
  friend void protobuf_ShutdownFile_1100500_5fEquipmentMessage_2eproto();

  void InitAsDefaultInstance();
  static RefinePlugDown* default_instance_;
};
// ===================================================================


// ===================================================================

// EquipmentInfoBean

// required uint32 positionId = 1;
inline bool EquipmentInfoBean::has_positionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentInfoBean::set_has_positionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentInfoBean::clear_has_positionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentInfoBean::clear_positionid() {
  positionid_ = 0u;
  clear_has_positionid();
}
inline ::google::protobuf::uint32 EquipmentInfoBean::positionid() const {
  return positionid_;
}
inline void EquipmentInfoBean::set_positionid(::google::protobuf::uint32 value) {
  set_has_positionid();
  positionid_ = value;
}

// required uint32 level = 2;
inline bool EquipmentInfoBean::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipmentInfoBean::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipmentInfoBean::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipmentInfoBean::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 EquipmentInfoBean::level() const {
  return level_;
}
inline void EquipmentInfoBean::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 quality = 3;
inline bool EquipmentInfoBean::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipmentInfoBean::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipmentInfoBean::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipmentInfoBean::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 EquipmentInfoBean::quality() const {
  return quality_;
}
inline void EquipmentInfoBean::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// repeated .SlotInfoBean slotInfoBean = 4;
inline int EquipmentInfoBean::slotinfobean_size() const {
  return slotinfobean_.size();
}
inline void EquipmentInfoBean::clear_slotinfobean() {
  slotinfobean_.Clear();
}
inline const ::SlotInfoBean& EquipmentInfoBean::slotinfobean(int index) const {
  return slotinfobean_.Get(index);
}
inline ::SlotInfoBean* EquipmentInfoBean::mutable_slotinfobean(int index) {
  return slotinfobean_.Mutable(index);
}
inline ::SlotInfoBean* EquipmentInfoBean::add_slotinfobean() {
  return slotinfobean_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SlotInfoBean >&
EquipmentInfoBean::slotinfobean() const {
  return slotinfobean_;
}
inline ::google::protobuf::RepeatedPtrField< ::SlotInfoBean >*
EquipmentInfoBean::mutable_slotinfobean() {
  return &slotinfobean_;
}

// -------------------------------------------------------------------

// SlotInfoBean

// required uint32 id = 1;
inline bool SlotInfoBean::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SlotInfoBean::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SlotInfoBean::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SlotInfoBean::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SlotInfoBean::id() const {
  return id_;
}
inline void SlotInfoBean::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 plugId = 2;
inline bool SlotInfoBean::has_plugid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SlotInfoBean::set_has_plugid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SlotInfoBean::clear_has_plugid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SlotInfoBean::clear_plugid() {
  plugid_ = 0u;
  clear_has_plugid();
}
inline ::google::protobuf::uint32 SlotInfoBean::plugid() const {
  return plugid_;
}
inline void SlotInfoBean::set_plugid(::google::protobuf::uint32 value) {
  set_has_plugid();
  plugid_ = value;
}

// -------------------------------------------------------------------

// GetEquipmentInfoUp

// required string userId = 1;
inline bool GetEquipmentInfoUp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetEquipmentInfoUp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetEquipmentInfoUp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetEquipmentInfoUp::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& GetEquipmentInfoUp::userid() const {
  return *userid_;
}
inline void GetEquipmentInfoUp::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void GetEquipmentInfoUp::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void GetEquipmentInfoUp::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetEquipmentInfoUp::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* GetEquipmentInfoUp::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetEquipmentInfoUp::set_allocated_userid(::std::string* userid) {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (userid) {
    set_has_userid();
    userid_ = userid;
  } else {
    clear_has_userid();
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 heroKeyId = 2;
inline bool GetEquipmentInfoUp::has_herokeyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetEquipmentInfoUp::set_has_herokeyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetEquipmentInfoUp::clear_has_herokeyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetEquipmentInfoUp::clear_herokeyid() {
  herokeyid_ = 0u;
  clear_has_herokeyid();
}
inline ::google::protobuf::uint32 GetEquipmentInfoUp::herokeyid() const {
  return herokeyid_;
}
inline void GetEquipmentInfoUp::set_herokeyid(::google::protobuf::uint32 value) {
  set_has_herokeyid();
  herokeyid_ = value;
}

// -------------------------------------------------------------------

// GetEquipmentInfoDown

// required string userId = 1;
inline bool GetEquipmentInfoDown::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetEquipmentInfoDown::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetEquipmentInfoDown::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetEquipmentInfoDown::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& GetEquipmentInfoDown::userid() const {
  return *userid_;
}
inline void GetEquipmentInfoDown::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void GetEquipmentInfoDown::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void GetEquipmentInfoDown::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetEquipmentInfoDown::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* GetEquipmentInfoDown::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetEquipmentInfoDown::set_allocated_userid(::std::string* userid) {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (userid) {
    set_has_userid();
    userid_ = userid;
  } else {
    clear_has_userid();
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 heroKeyId = 2;
inline bool GetEquipmentInfoDown::has_herokeyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetEquipmentInfoDown::set_has_herokeyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetEquipmentInfoDown::clear_has_herokeyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetEquipmentInfoDown::clear_herokeyid() {
  herokeyid_ = 0u;
  clear_has_herokeyid();
}
inline ::google::protobuf::uint32 GetEquipmentInfoDown::herokeyid() const {
  return herokeyid_;
}
inline void GetEquipmentInfoDown::set_herokeyid(::google::protobuf::uint32 value) {
  set_has_herokeyid();
  herokeyid_ = value;
}

// repeated .EquipmentInfoBean equipmentInfoBean = 3;
inline int GetEquipmentInfoDown::equipmentinfobean_size() const {
  return equipmentinfobean_.size();
}
inline void GetEquipmentInfoDown::clear_equipmentinfobean() {
  equipmentinfobean_.Clear();
}
inline const ::EquipmentInfoBean& GetEquipmentInfoDown::equipmentinfobean(int index) const {
  return equipmentinfobean_.Get(index);
}
inline ::EquipmentInfoBean* GetEquipmentInfoDown::mutable_equipmentinfobean(int index) {
  return equipmentinfobean_.Mutable(index);
}
inline ::EquipmentInfoBean* GetEquipmentInfoDown::add_equipmentinfobean() {
  return equipmentinfobean_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentInfoBean >&
GetEquipmentInfoDown::equipmentinfobean() const {
  return equipmentinfobean_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentInfoBean >*
GetEquipmentInfoDown::mutable_equipmentinfobean() {
  return &equipmentinfobean_;
}

// -------------------------------------------------------------------

// UpgradeEquipmentLevelUp

// required uint32 heroKeyId = 1;
inline bool UpgradeEquipmentLevelUp::has_herokeyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeEquipmentLevelUp::set_has_herokeyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeEquipmentLevelUp::clear_has_herokeyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeEquipmentLevelUp::clear_herokeyid() {
  herokeyid_ = 0u;
  clear_has_herokeyid();
}
inline ::google::protobuf::uint32 UpgradeEquipmentLevelUp::herokeyid() const {
  return herokeyid_;
}
inline void UpgradeEquipmentLevelUp::set_herokeyid(::google::protobuf::uint32 value) {
  set_has_herokeyid();
  herokeyid_ = value;
}

// required uint32 position = 2;
inline bool UpgradeEquipmentLevelUp::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeEquipmentLevelUp::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeEquipmentLevelUp::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeEquipmentLevelUp::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 UpgradeEquipmentLevelUp::position() const {
  return position_;
}
inline void UpgradeEquipmentLevelUp::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
}

// -------------------------------------------------------------------

// UpgradeEquipmentQualityUp

// required uint32 heroKeyId = 1;
inline bool UpgradeEquipmentQualityUp::has_herokeyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpgradeEquipmentQualityUp::set_has_herokeyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpgradeEquipmentQualityUp::clear_has_herokeyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpgradeEquipmentQualityUp::clear_herokeyid() {
  herokeyid_ = 0u;
  clear_has_herokeyid();
}
inline ::google::protobuf::uint32 UpgradeEquipmentQualityUp::herokeyid() const {
  return herokeyid_;
}
inline void UpgradeEquipmentQualityUp::set_herokeyid(::google::protobuf::uint32 value) {
  set_has_herokeyid();
  herokeyid_ = value;
}

// required uint32 position = 2;
inline bool UpgradeEquipmentQualityUp::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpgradeEquipmentQualityUp::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpgradeEquipmentQualityUp::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpgradeEquipmentQualityUp::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 UpgradeEquipmentQualityUp::position() const {
  return position_;
}
inline void UpgradeEquipmentQualityUp::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
}

// -------------------------------------------------------------------

// PutonPluginUp

// required uint32 heroKeyId = 1;
inline bool PutonPluginUp::has_herokeyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutonPluginUp::set_has_herokeyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutonPluginUp::clear_has_herokeyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutonPluginUp::clear_herokeyid() {
  herokeyid_ = 0u;
  clear_has_herokeyid();
}
inline ::google::protobuf::uint32 PutonPluginUp::herokeyid() const {
  return herokeyid_;
}
inline void PutonPluginUp::set_herokeyid(::google::protobuf::uint32 value) {
  set_has_herokeyid();
  herokeyid_ = value;
}

// required uint32 position = 2;
inline bool PutonPluginUp::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PutonPluginUp::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PutonPluginUp::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PutonPluginUp::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 PutonPluginUp::position() const {
  return position_;
}
inline void PutonPluginUp::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
}

// required uint32 slotId = 3;
inline bool PutonPluginUp::has_slotid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PutonPluginUp::set_has_slotid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PutonPluginUp::clear_has_slotid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PutonPluginUp::clear_slotid() {
  slotid_ = 0u;
  clear_has_slotid();
}
inline ::google::protobuf::uint32 PutonPluginUp::slotid() const {
  return slotid_;
}
inline void PutonPluginUp::set_slotid(::google::protobuf::uint32 value) {
  set_has_slotid();
  slotid_ = value;
}

// required uint32 pluginId = 4;
inline bool PutonPluginUp::has_pluginid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PutonPluginUp::set_has_pluginid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PutonPluginUp::clear_has_pluginid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PutonPluginUp::clear_pluginid() {
  pluginid_ = 0u;
  clear_has_pluginid();
}
inline ::google::protobuf::uint32 PutonPluginUp::pluginid() const {
  return pluginid_;
}
inline void PutonPluginUp::set_pluginid(::google::protobuf::uint32 value) {
  set_has_pluginid();
  pluginid_ = value;
}

// -------------------------------------------------------------------

// DischargePlugUp

// required uint32 heroKeyId = 1;
inline bool DischargePlugUp::has_herokeyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DischargePlugUp::set_has_herokeyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DischargePlugUp::clear_has_herokeyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DischargePlugUp::clear_herokeyid() {
  herokeyid_ = 0u;
  clear_has_herokeyid();
}
inline ::google::protobuf::uint32 DischargePlugUp::herokeyid() const {
  return herokeyid_;
}
inline void DischargePlugUp::set_herokeyid(::google::protobuf::uint32 value) {
  set_has_herokeyid();
  herokeyid_ = value;
}

// required uint32 position = 2;
inline bool DischargePlugUp::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DischargePlugUp::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DischargePlugUp::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DischargePlugUp::clear_position() {
  position_ = 0u;
  clear_has_position();
}
inline ::google::protobuf::uint32 DischargePlugUp::position() const {
  return position_;
}
inline void DischargePlugUp::set_position(::google::protobuf::uint32 value) {
  set_has_position();
  position_ = value;
}

// required uint32 type = 3;
inline bool DischargePlugUp::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DischargePlugUp::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DischargePlugUp::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DischargePlugUp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 DischargePlugUp::type() const {
  return type_;
}
inline void DischargePlugUp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RefinePlugUp

// required uint32 plugId = 1;
inline bool RefinePlugUp::has_plugid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefinePlugUp::set_has_plugid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefinePlugUp::clear_has_plugid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefinePlugUp::clear_plugid() {
  plugid_ = 0u;
  clear_has_plugid();
}
inline ::google::protobuf::uint32 RefinePlugUp::plugid() const {
  return plugid_;
}
inline void RefinePlugUp::set_plugid(::google::protobuf::uint32 value) {
  set_has_plugid();
  plugid_ = value;
}

// -------------------------------------------------------------------

// RefinePlugDown

// required uint32 plugId = 1;
inline bool RefinePlugDown::has_plugid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefinePlugDown::set_has_plugid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefinePlugDown::clear_has_plugid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefinePlugDown::clear_plugid() {
  plugid_ = 0u;
  clear_has_plugid();
}
inline ::google::protobuf::uint32 RefinePlugDown::plugid() const {
  return plugid_;
}
inline void RefinePlugDown::set_plugid(::google::protobuf::uint32 value) {
  set_has_plugid();
  plugid_ = value;
}

// required bool success = 2;
inline bool RefinePlugDown::has_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefinePlugDown::set_has_success() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefinePlugDown::clear_has_success() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefinePlugDown::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool RefinePlugDown::success() const {
  return success_;
}
inline void RefinePlugDown::set_success(bool value) {
  set_has_success();
  success_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EquipmentCommondIdEnum>() {
  return ::EquipmentCommondIdEnum_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_1100500_5fEquipmentMessage_2eproto__INCLUDED
