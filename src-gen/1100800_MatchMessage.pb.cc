// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: 1100800_MatchMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "1100800_MatchMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* FormationInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FormationInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* StarInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StarInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChapterStarInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChapterStarInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChapterAwardInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChapterAwardInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConcealInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConcealInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* DropInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DropInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* MopupDropInfoBean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MopupDropInfoBean_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMatchinfoUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMatchinfoUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMatchinfoDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetMatchinfoDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchStartUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchStartUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchOverUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchOverUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchOverDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchOverDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchMopupUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchMopupUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* MatchMopupDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MatchMopupDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyGoodsUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyGoodsUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyGoodsDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyGoodsDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyPowerUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyPowerUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetMatchCountUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetMatchCountUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStarAwardUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStarAwardUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefreshMatchShopUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefreshMatchShopUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* RefreshMatchShopDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RefreshMatchShopDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyAllGoodsUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyAllGoodsUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyAllGoodsDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyAllGoodsDown_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MatchCommondIdEnum_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_1100800_5fMatchMessage_2eproto() {
  protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "1100800_MatchMessage.proto");
  GOOGLE_CHECK(file != NULL);
  FormationInfoBean_descriptor_ = file->message_type(0);
  static const int FormationInfoBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationInfoBean, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationInfoBean, retinueid_),
  };
  FormationInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FormationInfoBean_descriptor_,
      FormationInfoBean::default_instance_,
      FormationInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FormationInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FormationInfoBean));
  StarInfoBean_descriptor_ = file->message_type(1);
  static const int StarInfoBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarInfoBean, passcardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarInfoBean, star_),
  };
  StarInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StarInfoBean_descriptor_,
      StarInfoBean::default_instance_,
      StarInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StarInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StarInfoBean));
  ChapterStarInfoBean_descriptor_ = file->message_type(2);
  static const int ChapterStarInfoBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStarInfoBean, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStarInfoBean, star_),
  };
  ChapterStarInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChapterStarInfoBean_descriptor_,
      ChapterStarInfoBean::default_instance_,
      ChapterStarInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStarInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterStarInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChapterStarInfoBean));
  ChapterAwardInfoBean_descriptor_ = file->message_type(3);
  static const int ChapterAwardInfoBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterAwardInfoBean, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterAwardInfoBean, awardstates_),
  };
  ChapterAwardInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChapterAwardInfoBean_descriptor_,
      ChapterAwardInfoBean::default_instance_,
      ChapterAwardInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterAwardInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChapterAwardInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChapterAwardInfoBean));
  BattleInfoBean_descriptor_ = file->message_type(4);
  static const int BattleInfoBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleInfoBean, passcardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleInfoBean, count_),
  };
  BattleInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BattleInfoBean_descriptor_,
      BattleInfoBean::default_instance_,
      BattleInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BattleInfoBean));
  ResetInfoBean_descriptor_ = file->message_type(5);
  static const int ResetInfoBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetInfoBean, passcardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetInfoBean, count_),
  };
  ResetInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResetInfoBean_descriptor_,
      ResetInfoBean::default_instance_,
      ResetInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResetInfoBean));
  ConcealInfoBean_descriptor_ = file->message_type(6);
  static const int ConcealInfoBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcealInfoBean, passcardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcealInfoBean, time_),
  };
  ConcealInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConcealInfoBean_descriptor_,
      ConcealInfoBean::default_instance_,
      ConcealInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcealInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConcealInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConcealInfoBean));
  ShopInfoBean_descriptor_ = file->message_type(7);
  static const int ShopInfoBean_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopInfoBean, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopInfoBean, shopip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopInfoBean, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopInfoBean, goodsindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopInfoBean, refreshcount_),
  };
  ShopInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopInfoBean_descriptor_,
      ShopInfoBean::default_instance_,
      ShopInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopInfoBean));
  MatchInfoBean_descriptor_ = file->message_type(8);
  static const int MatchInfoBean_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchInfoBean, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchInfoBean, passcard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchInfoBean, chapterstarinfobean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchInfoBean, battleinfobean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchInfoBean, resetinfobean_),
  };
  MatchInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MatchInfoBean_descriptor_,
      MatchInfoBean::default_instance_,
      MatchInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MatchInfoBean));
  DropInfoBean_descriptor_ = file->message_type(9);
  static const int DropInfoBean_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropInfoBean, goodsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropInfoBean, count_),
  };
  DropInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DropInfoBean_descriptor_,
      DropInfoBean::default_instance_,
      DropInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DropInfoBean));
  MopupDropInfoBean_descriptor_ = file->message_type(10);
  static const int MopupDropInfoBean_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MopupDropInfoBean, dropinfobean_),
  };
  MopupDropInfoBean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MopupDropInfoBean_descriptor_,
      MopupDropInfoBean::default_instance_,
      MopupDropInfoBean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MopupDropInfoBean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MopupDropInfoBean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MopupDropInfoBean));
  GetMatchinfoUp_descriptor_ = file->message_type(11);
  static const int GetMatchinfoUp_offsets_[1] = {
  };
  GetMatchinfoUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMatchinfoUp_descriptor_,
      GetMatchinfoUp::default_instance_,
      GetMatchinfoUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMatchinfoUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMatchinfoUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMatchinfoUp));
  GetMatchinfoDown_descriptor_ = file->message_type(12);
  static const int GetMatchinfoDown_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMatchinfoDown, matchinfobean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMatchinfoDown, mopupcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMatchinfoDown, concealinfobean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMatchinfoDown, shopinfobean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMatchinfoDown, chapterawardinfobean_),
  };
  GetMatchinfoDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetMatchinfoDown_descriptor_,
      GetMatchinfoDown::default_instance_,
      GetMatchinfoDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMatchinfoDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMatchinfoDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetMatchinfoDown));
  MatchStartUp_descriptor_ = file->message_type(13);
  static const int MatchStartUp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartUp, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartUp, passcardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartUp, formationinfobean_),
  };
  MatchStartUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MatchStartUp_descriptor_,
      MatchStartUp::default_instance_,
      MatchStartUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MatchStartUp));
  MatchOverUp_descriptor_ = file->message_type(14);
  static const int MatchOverUp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverUp, resulttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverUp, star_),
  };
  MatchOverUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MatchOverUp_descriptor_,
      MatchOverUp::default_instance_,
      MatchOverUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MatchOverUp));
  MatchOverDown_descriptor_ = file->message_type(15);
  static const int MatchOverDown_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverDown, dropinfobean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverDown, cancealopen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverDown, shopopen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverDown, concealinfobean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverDown, shopinfobean_),
  };
  MatchOverDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MatchOverDown_descriptor_,
      MatchOverDown::default_instance_,
      MatchOverDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchOverDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MatchOverDown));
  MatchMopupUp_descriptor_ = file->message_type(16);
  static const int MatchMopupUp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupUp, matchtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupUp, passcardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupUp, more_),
  };
  MatchMopupUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MatchMopupUp_descriptor_,
      MatchMopupUp::default_instance_,
      MatchMopupUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MatchMopupUp));
  MatchMopupDown_descriptor_ = file->message_type(17);
  static const int MatchMopupDown_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupDown, mopupdropinfobean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupDown, cancealopen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupDown, shopopen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupDown, concealinfobean_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupDown, shopinfobean_),
  };
  MatchMopupDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MatchMopupDown_descriptor_,
      MatchMopupDown::default_instance_,
      MatchMopupDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchMopupDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MatchMopupDown));
  BuyGoodsUp_descriptor_ = file->message_type(18);
  static const int BuyGoodsUp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyGoodsUp, shoptype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyGoodsUp, shelfid_),
  };
  BuyGoodsUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyGoodsUp_descriptor_,
      BuyGoodsUp::default_instance_,
      BuyGoodsUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyGoodsUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyGoodsUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyGoodsUp));
  BuyGoodsDown_descriptor_ = file->message_type(19);
  static const int BuyGoodsDown_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyGoodsDown, refresh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyGoodsDown, goodsindex_),
  };
  BuyGoodsDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyGoodsDown_descriptor_,
      BuyGoodsDown::default_instance_,
      BuyGoodsDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyGoodsDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyGoodsDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyGoodsDown));
  BuyPowerUp_descriptor_ = file->message_type(20);
  static const int BuyPowerUp_offsets_[1] = {
  };
  BuyPowerUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyPowerUp_descriptor_,
      BuyPowerUp::default_instance_,
      BuyPowerUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyPowerUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyPowerUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyPowerUp));
  ResetMatchCountUp_descriptor_ = file->message_type(21);
  static const int ResetMatchCountUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetMatchCountUp, passcardid_),
  };
  ResetMatchCountUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResetMatchCountUp_descriptor_,
      ResetMatchCountUp::default_instance_,
      ResetMatchCountUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetMatchCountUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetMatchCountUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResetMatchCountUp));
  GetStarAwardUp_descriptor_ = file->message_type(22);
  static const int GetStarAwardUp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStarAwardUp, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStarAwardUp, index_),
  };
  GetStarAwardUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStarAwardUp_descriptor_,
      GetStarAwardUp::default_instance_,
      GetStarAwardUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStarAwardUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStarAwardUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStarAwardUp));
  RefreshMatchShopUp_descriptor_ = file->message_type(23);
  static const int RefreshMatchShopUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshMatchShopUp, shoptype_),
  };
  RefreshMatchShopUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefreshMatchShopUp_descriptor_,
      RefreshMatchShopUp::default_instance_,
      RefreshMatchShopUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshMatchShopUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshMatchShopUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefreshMatchShopUp));
  RefreshMatchShopDown_descriptor_ = file->message_type(24);
  static const int RefreshMatchShopDown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshMatchShopDown, goodsindex_),
  };
  RefreshMatchShopDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RefreshMatchShopDown_descriptor_,
      RefreshMatchShopDown::default_instance_,
      RefreshMatchShopDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshMatchShopDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RefreshMatchShopDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RefreshMatchShopDown));
  BuyAllGoodsUp_descriptor_ = file->message_type(25);
  static const int BuyAllGoodsUp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyAllGoodsUp, shoptype_),
  };
  BuyAllGoodsUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyAllGoodsUp_descriptor_,
      BuyAllGoodsUp::default_instance_,
      BuyAllGoodsUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyAllGoodsUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyAllGoodsUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyAllGoodsUp));
  BuyAllGoodsDown_descriptor_ = file->message_type(26);
  static const int BuyAllGoodsDown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyAllGoodsDown, goodsindex_),
  };
  BuyAllGoodsDown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyAllGoodsDown_descriptor_,
      BuyAllGoodsDown::default_instance_,
      BuyAllGoodsDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyAllGoodsDown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyAllGoodsDown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyAllGoodsDown));
  MatchCommondIdEnum_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_1100800_5fMatchMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FormationInfoBean_descriptor_, &FormationInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StarInfoBean_descriptor_, &StarInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChapterStarInfoBean_descriptor_, &ChapterStarInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChapterAwardInfoBean_descriptor_, &ChapterAwardInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BattleInfoBean_descriptor_, &BattleInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResetInfoBean_descriptor_, &ResetInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConcealInfoBean_descriptor_, &ConcealInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopInfoBean_descriptor_, &ShopInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MatchInfoBean_descriptor_, &MatchInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DropInfoBean_descriptor_, &DropInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MopupDropInfoBean_descriptor_, &MopupDropInfoBean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMatchinfoUp_descriptor_, &GetMatchinfoUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetMatchinfoDown_descriptor_, &GetMatchinfoDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MatchStartUp_descriptor_, &MatchStartUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MatchOverUp_descriptor_, &MatchOverUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MatchOverDown_descriptor_, &MatchOverDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MatchMopupUp_descriptor_, &MatchMopupUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MatchMopupDown_descriptor_, &MatchMopupDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyGoodsUp_descriptor_, &BuyGoodsUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyGoodsDown_descriptor_, &BuyGoodsDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyPowerUp_descriptor_, &BuyPowerUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResetMatchCountUp_descriptor_, &ResetMatchCountUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStarAwardUp_descriptor_, &GetStarAwardUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefreshMatchShopUp_descriptor_, &RefreshMatchShopUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RefreshMatchShopDown_descriptor_, &RefreshMatchShopDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyAllGoodsUp_descriptor_, &BuyAllGoodsUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyAllGoodsDown_descriptor_, &BuyAllGoodsDown::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_1100800_5fMatchMessage_2eproto() {
  delete FormationInfoBean::default_instance_;
  delete FormationInfoBean_reflection_;
  delete StarInfoBean::default_instance_;
  delete StarInfoBean_reflection_;
  delete ChapterStarInfoBean::default_instance_;
  delete ChapterStarInfoBean_reflection_;
  delete ChapterAwardInfoBean::default_instance_;
  delete ChapterAwardInfoBean_reflection_;
  delete BattleInfoBean::default_instance_;
  delete BattleInfoBean_reflection_;
  delete ResetInfoBean::default_instance_;
  delete ResetInfoBean_reflection_;
  delete ConcealInfoBean::default_instance_;
  delete ConcealInfoBean_reflection_;
  delete ShopInfoBean::default_instance_;
  delete ShopInfoBean_reflection_;
  delete MatchInfoBean::default_instance_;
  delete MatchInfoBean_reflection_;
  delete DropInfoBean::default_instance_;
  delete DropInfoBean_reflection_;
  delete MopupDropInfoBean::default_instance_;
  delete MopupDropInfoBean_reflection_;
  delete GetMatchinfoUp::default_instance_;
  delete GetMatchinfoUp_reflection_;
  delete GetMatchinfoDown::default_instance_;
  delete GetMatchinfoDown_reflection_;
  delete MatchStartUp::default_instance_;
  delete MatchStartUp_reflection_;
  delete MatchOverUp::default_instance_;
  delete MatchOverUp_reflection_;
  delete MatchOverDown::default_instance_;
  delete MatchOverDown_reflection_;
  delete MatchMopupUp::default_instance_;
  delete MatchMopupUp_reflection_;
  delete MatchMopupDown::default_instance_;
  delete MatchMopupDown_reflection_;
  delete BuyGoodsUp::default_instance_;
  delete BuyGoodsUp_reflection_;
  delete BuyGoodsDown::default_instance_;
  delete BuyGoodsDown_reflection_;
  delete BuyPowerUp::default_instance_;
  delete BuyPowerUp_reflection_;
  delete ResetMatchCountUp::default_instance_;
  delete ResetMatchCountUp_reflection_;
  delete GetStarAwardUp::default_instance_;
  delete GetStarAwardUp_reflection_;
  delete RefreshMatchShopUp::default_instance_;
  delete RefreshMatchShopUp_reflection_;
  delete RefreshMatchShopDown::default_instance_;
  delete RefreshMatchShopDown_reflection_;
  delete BuyAllGoodsUp::default_instance_;
  delete BuyAllGoodsUp_reflection_;
  delete BuyAllGoodsDown::default_instance_;
  delete BuyAllGoodsDown_reflection_;
}

void protobuf_AddDesc_1100800_5fMatchMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\0321100800_MatchMessage.proto\"6\n\021Formatio"
    "nInfoBean\022\016\n\006heroId\030\001 \002(\r\022\021\n\tretinueId\030\002"
    " \002(\r\"0\n\014StarInfoBean\022\022\n\npasscardId\030\001 \002(\r"
    "\022\014\n\004star\030\002 \002(\r\"E\n\023ChapterStarInfoBean\022\021\n"
    "\tchapterId\030\001 \002(\r\022\033\n\004star\030\002 \003(\0132\r.StarInf"
    "oBean\">\n\024ChapterAwardInfoBean\022\021\n\tchapter"
    "Id\030\001 \002(\r\022\023\n\013awardStates\030\003 \002(\r\"3\n\016BattleI"
    "nfoBean\022\022\n\npasscardId\030\001 \002(\r\022\r\n\005count\030\002 \002"
    "(\r\"2\n\rResetInfoBean\022\022\n\npasscardId\030\001 \002(\r\022"
    "\r\n\005count\030\002 \002(\r\"3\n\017ConcealInfoBean\022\022\n\npas"
    "scardId\030\001 \002(\r\022\014\n\004time\030\002 \002(\004\"d\n\014ShopInfoB"
    "ean\022\014\n\004type\030\001 \002(\r\022\016\n\006shopIp\030\002 \002(\r\022\014\n\004tim"
    "e\030\003 \002(\004\022\022\n\ngoodsIndex\030\004 \003(\r\022\024\n\014refreshCo"
    "unt\030\005 \002(\r\"\262\001\n\rMatchInfoBean\022\014\n\004type\030\001 \002("
    "\r\022\020\n\010passcard\030\002 \002(\r\0221\n\023chapterStarInfoBe"
    "an\030\003 \003(\0132\024.ChapterStarInfoBean\022\'\n\016battle"
    "InfoBean\030\004 \003(\0132\017.BattleInfoBean\022%\n\rreset"
    "InfoBean\030\005 \003(\0132\016.ResetInfoBean\".\n\014DropIn"
    "foBean\022\017\n\007goodsId\030\001 \002(\r\022\r\n\005count\030\002 \002(\r\"8"
    "\n\021MopupDropInfoBean\022#\n\014dropInfoBean\030\001 \003("
    "\0132\r.DropInfoBean\"\020\n\016GetMatchinfoUp\"\322\001\n\020G"
    "etMatchinfoDown\022%\n\rMatchInfoBean\030\001 \003(\0132\016"
    ".MatchInfoBean\022\022\n\nmopupCount\030\002 \002(\r\022)\n\017co"
    "ncealInfoBean\030\003 \003(\0132\020.ConcealInfoBean\022#\n"
    "\014shopInfoBean\030\004 \003(\0132\r.ShopInfoBean\0223\n\024ch"
    "apterAwardInfoBean\030\005 \003(\0132\025.ChapterAwardI"
    "nfoBean\"_\n\014MatchStartUp\022\014\n\004type\030\001 \002(\r\022\022\n"
    "\npasscardId\030\002 \002(\r\022-\n\021formationInfoBean\030\003"
    " \003(\0132\022.FormationInfoBean\"/\n\013MatchOverUp\022"
    "\022\n\nresultType\030\001 \002(\r\022\014\n\004star\030\002 \001(\r\"\253\001\n\rMa"
    "tchOverDown\022#\n\014dropInfoBean\030\001 \003(\0132\r.Drop"
    "InfoBean\022\023\n\013cancealOpen\030\002 \002(\010\022\020\n\010shopOpe"
    "n\030\003 \002(\010\022)\n\017concealInfoBean\030\004 \001(\0132\020.Conce"
    "alInfoBean\022#\n\014shopInfoBean\030\005 \001(\0132\r.ShopI"
    "nfoBean\"C\n\014MatchMopupUp\022\021\n\tmatchType\030\001 \002"
    "(\r\022\022\n\npasscardId\030\002 \002(\r\022\014\n\004more\030\003 \002(\010\"\266\001\n"
    "\016MatchMopupDown\022-\n\021mopupDropInfoBean\030\001 \003"
    "(\0132\022.MopupDropInfoBean\022\023\n\013cancealOpen\030\002 "
    "\002(\010\022\020\n\010shopOpen\030\003 \002(\010\022)\n\017concealInfoBean"
    "\030\004 \001(\0132\020.ConcealInfoBean\022#\n\014shopInfoBean"
    "\030\005 \001(\0132\r.ShopInfoBean\"/\n\nBuyGoodsUp\022\020\n\010s"
    "hopType\030\001 \002(\r\022\017\n\007shelfId\030\002 \002(\r\"3\n\014BuyGoo"
    "dsDown\022\017\n\007refresh\030\001 \002(\010\022\022\n\ngoodsIndex\030\002 "
    "\003(\r\"\014\n\nBuyPowerUp\"\'\n\021ResetMatchCountUp\022\022"
    "\n\npasscardId\030\001 \002(\r\"2\n\016GetStarAwardUp\022\021\n\t"
    "chapterId\030\001 \002(\r\022\r\n\005index\030\002 \002(\r\"&\n\022Refres"
    "hMatchShopUp\022\020\n\010shopType\030\001 \002(\r\"*\n\024Refres"
    "hMatchShopDown\022\022\n\ngoodsIndex\030\001 \003(\r\"!\n\rBu"
    "yAllGoodsUp\022\020\n\010shopType\030\001 \002(\r\"%\n\017BuyAllG"
    "oodsDown\022\022\n\ngoodsIndex\030\001 \003(\r*\201\003\n\022MatchCo"
    "mmondIdEnum\022\025\n\017_GetMatchinfoUp\020\201\230C\022\027\n\021_G"
    "etMatchinfoDown\020\202\230C\022\023\n\r_MatchStartUp\020\203\230C"
    "\022\022\n\014_MatchOverUp\020\205\230C\022\024\n\016_MatchOverDown\020\206"
    "\230C\022\023\n\r_MatchMopupUp\020\207\230C\022\025\n\017_MatchMopupDo"
    "wn\020\210\230C\022\021\n\013_BuyGoodsUp\020\211\230C\022\023\n\r_BuyGoodsDo"
    "wn\020\212\230C\022\021\n\013_BuyPowerUp\020\213\230C\022\030\n\022_ResetMatch"
    "CountUp\020\215\230C\022\025\n\017_GetStarAwardUp\020\217\230C\022\031\n\023_R"
    "efreshMatchShopUp\020\221\230C\022\033\n\025_RefreshMatchSh"
    "opDown\020\222\230C\022\024\n\016_BuyAllGoodsUp\020\223\230C\022\026\n\020_Buy"
    "AllGoodsDown\020\224\230CB\037\n\017com.cwa.messageB\014Mat"
    "chMessage", 2409);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "1100800_MatchMessage.proto", &protobuf_RegisterTypes);
  FormationInfoBean::default_instance_ = new FormationInfoBean();
  StarInfoBean::default_instance_ = new StarInfoBean();
  ChapterStarInfoBean::default_instance_ = new ChapterStarInfoBean();
  ChapterAwardInfoBean::default_instance_ = new ChapterAwardInfoBean();
  BattleInfoBean::default_instance_ = new BattleInfoBean();
  ResetInfoBean::default_instance_ = new ResetInfoBean();
  ConcealInfoBean::default_instance_ = new ConcealInfoBean();
  ShopInfoBean::default_instance_ = new ShopInfoBean();
  MatchInfoBean::default_instance_ = new MatchInfoBean();
  DropInfoBean::default_instance_ = new DropInfoBean();
  MopupDropInfoBean::default_instance_ = new MopupDropInfoBean();
  GetMatchinfoUp::default_instance_ = new GetMatchinfoUp();
  GetMatchinfoDown::default_instance_ = new GetMatchinfoDown();
  MatchStartUp::default_instance_ = new MatchStartUp();
  MatchOverUp::default_instance_ = new MatchOverUp();
  MatchOverDown::default_instance_ = new MatchOverDown();
  MatchMopupUp::default_instance_ = new MatchMopupUp();
  MatchMopupDown::default_instance_ = new MatchMopupDown();
  BuyGoodsUp::default_instance_ = new BuyGoodsUp();
  BuyGoodsDown::default_instance_ = new BuyGoodsDown();
  BuyPowerUp::default_instance_ = new BuyPowerUp();
  ResetMatchCountUp::default_instance_ = new ResetMatchCountUp();
  GetStarAwardUp::default_instance_ = new GetStarAwardUp();
  RefreshMatchShopUp::default_instance_ = new RefreshMatchShopUp();
  RefreshMatchShopDown::default_instance_ = new RefreshMatchShopDown();
  BuyAllGoodsUp::default_instance_ = new BuyAllGoodsUp();
  BuyAllGoodsDown::default_instance_ = new BuyAllGoodsDown();
  FormationInfoBean::default_instance_->InitAsDefaultInstance();
  StarInfoBean::default_instance_->InitAsDefaultInstance();
  ChapterStarInfoBean::default_instance_->InitAsDefaultInstance();
  ChapterAwardInfoBean::default_instance_->InitAsDefaultInstance();
  BattleInfoBean::default_instance_->InitAsDefaultInstance();
  ResetInfoBean::default_instance_->InitAsDefaultInstance();
  ConcealInfoBean::default_instance_->InitAsDefaultInstance();
  ShopInfoBean::default_instance_->InitAsDefaultInstance();
  MatchInfoBean::default_instance_->InitAsDefaultInstance();
  DropInfoBean::default_instance_->InitAsDefaultInstance();
  MopupDropInfoBean::default_instance_->InitAsDefaultInstance();
  GetMatchinfoUp::default_instance_->InitAsDefaultInstance();
  GetMatchinfoDown::default_instance_->InitAsDefaultInstance();
  MatchStartUp::default_instance_->InitAsDefaultInstance();
  MatchOverUp::default_instance_->InitAsDefaultInstance();
  MatchOverDown::default_instance_->InitAsDefaultInstance();
  MatchMopupUp::default_instance_->InitAsDefaultInstance();
  MatchMopupDown::default_instance_->InitAsDefaultInstance();
  BuyGoodsUp::default_instance_->InitAsDefaultInstance();
  BuyGoodsDown::default_instance_->InitAsDefaultInstance();
  BuyPowerUp::default_instance_->InitAsDefaultInstance();
  ResetMatchCountUp::default_instance_->InitAsDefaultInstance();
  GetStarAwardUp::default_instance_->InitAsDefaultInstance();
  RefreshMatchShopUp::default_instance_->InitAsDefaultInstance();
  RefreshMatchShopDown::default_instance_->InitAsDefaultInstance();
  BuyAllGoodsUp::default_instance_->InitAsDefaultInstance();
  BuyAllGoodsDown::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_1100800_5fMatchMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_1100800_5fMatchMessage_2eproto {
  StaticDescriptorInitializer_1100800_5fMatchMessage_2eproto() {
    protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  }
} static_descriptor_initializer_1100800_5fMatchMessage_2eproto_;
const ::google::protobuf::EnumDescriptor* MatchCommondIdEnum_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchCommondIdEnum_descriptor_;
}
bool MatchCommondIdEnum_IsValid(int value) {
  switch(value) {
    case 1100801:
    case 1100802:
    case 1100803:
    case 1100805:
    case 1100806:
    case 1100807:
    case 1100808:
    case 1100809:
    case 1100810:
    case 1100811:
    case 1100813:
    case 1100815:
    case 1100817:
    case 1100818:
    case 1100819:
    case 1100820:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int FormationInfoBean::kHeroIdFieldNumber;
const int FormationInfoBean::kRetinueIdFieldNumber;
#endif  // !_MSC_VER

FormationInfoBean::FormationInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FormationInfoBean::InitAsDefaultInstance() {
}

FormationInfoBean::FormationInfoBean(const FormationInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FormationInfoBean::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0u;
  retinueid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FormationInfoBean::~FormationInfoBean() {
  SharedDtor();
}

void FormationInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FormationInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FormationInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FormationInfoBean_descriptor_;
}

const FormationInfoBean& FormationInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

FormationInfoBean* FormationInfoBean::default_instance_ = NULL;

FormationInfoBean* FormationInfoBean::New() const {
  return new FormationInfoBean;
}

void FormationInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heroid_ = 0u;
    retinueid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FormationInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 heroId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_retinueId;
        break;
      }

      // required uint32 retinueId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_retinueId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retinueid_)));
          set_has_retinueid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FormationInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 heroId = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // required uint32 retinueId = 2;
  if (has_retinueid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->retinueid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FormationInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 heroId = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // required uint32 retinueId = 2;
  if (has_retinueid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->retinueid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FormationInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 heroId = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // required uint32 retinueId = 2;
    if (has_retinueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->retinueid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FormationInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FormationInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FormationInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FormationInfoBean::MergeFrom(const FormationInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_retinueid()) {
      set_retinueid(from.retinueid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FormationInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FormationInfoBean::CopyFrom(const FormationInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FormationInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void FormationInfoBean::Swap(FormationInfoBean* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(retinueid_, other->retinueid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FormationInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FormationInfoBean_descriptor_;
  metadata.reflection = FormationInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StarInfoBean::kPasscardIdFieldNumber;
const int StarInfoBean::kStarFieldNumber;
#endif  // !_MSC_VER

StarInfoBean::StarInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StarInfoBean::InitAsDefaultInstance() {
}

StarInfoBean::StarInfoBean(const StarInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StarInfoBean::SharedCtor() {
  _cached_size_ = 0;
  passcardid_ = 0u;
  star_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StarInfoBean::~StarInfoBean() {
  SharedDtor();
}

void StarInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StarInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StarInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StarInfoBean_descriptor_;
}

const StarInfoBean& StarInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

StarInfoBean* StarInfoBean::default_instance_ = NULL;

StarInfoBean* StarInfoBean::New() const {
  return new StarInfoBean;
}

void StarInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    passcardid_ = 0u;
    star_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StarInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 passcardId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passcardid_)));
          set_has_passcardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_star;
        break;
      }

      // required uint32 star = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StarInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->passcardid(), output);
  }

  // required uint32 star = 2;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->star(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StarInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->passcardid(), target);
  }

  // required uint32 star = 2;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->star(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StarInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 passcardId = 1;
    if (has_passcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passcardid());
    }

    // required uint32 star = 2;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StarInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StarInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StarInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StarInfoBean::MergeFrom(const StarInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_passcardid()) {
      set_passcardid(from.passcardid());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StarInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StarInfoBean::CopyFrom(const StarInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StarInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void StarInfoBean::Swap(StarInfoBean* other) {
  if (other != this) {
    std::swap(passcardid_, other->passcardid_);
    std::swap(star_, other->star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StarInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StarInfoBean_descriptor_;
  metadata.reflection = StarInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChapterStarInfoBean::kChapterIdFieldNumber;
const int ChapterStarInfoBean::kStarFieldNumber;
#endif  // !_MSC_VER

ChapterStarInfoBean::ChapterStarInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChapterStarInfoBean::InitAsDefaultInstance() {
}

ChapterStarInfoBean::ChapterStarInfoBean(const ChapterStarInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChapterStarInfoBean::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChapterStarInfoBean::~ChapterStarInfoBean() {
  SharedDtor();
}

void ChapterStarInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChapterStarInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChapterStarInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChapterStarInfoBean_descriptor_;
}

const ChapterStarInfoBean& ChapterStarInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

ChapterStarInfoBean* ChapterStarInfoBean::default_instance_ = NULL;

ChapterStarInfoBean* ChapterStarInfoBean::New() const {
  return new ChapterStarInfoBean;
}

void ChapterStarInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chapterid_ = 0u;
  }
  star_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChapterStarInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 chapterId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_star;
        break;
      }

      // repeated .StarInfoBean star = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_star:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_star()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_star;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ChapterStarInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 chapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // repeated .StarInfoBean star = 2;
  for (int i = 0; i < this->star_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->star(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChapterStarInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 chapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // repeated .StarInfoBean star = 2;
  for (int i = 0; i < this->star_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->star(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChapterStarInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 chapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

  }
  // repeated .StarInfoBean star = 2;
  total_size += 1 * this->star_size();
  for (int i = 0; i < this->star_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->star(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChapterStarInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChapterStarInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChapterStarInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChapterStarInfoBean::MergeFrom(const ChapterStarInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  star_.MergeFrom(from.star_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChapterStarInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChapterStarInfoBean::CopyFrom(const ChapterStarInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChapterStarInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < star_size(); i++) {
    if (!this->star(i).IsInitialized()) return false;
  }
  return true;
}

void ChapterStarInfoBean::Swap(ChapterStarInfoBean* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    star_.Swap(&other->star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChapterStarInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChapterStarInfoBean_descriptor_;
  metadata.reflection = ChapterStarInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChapterAwardInfoBean::kChapterIdFieldNumber;
const int ChapterAwardInfoBean::kAwardStatesFieldNumber;
#endif  // !_MSC_VER

ChapterAwardInfoBean::ChapterAwardInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChapterAwardInfoBean::InitAsDefaultInstance() {
}

ChapterAwardInfoBean::ChapterAwardInfoBean(const ChapterAwardInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChapterAwardInfoBean::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  awardstates_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChapterAwardInfoBean::~ChapterAwardInfoBean() {
  SharedDtor();
}

void ChapterAwardInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChapterAwardInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChapterAwardInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChapterAwardInfoBean_descriptor_;
}

const ChapterAwardInfoBean& ChapterAwardInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

ChapterAwardInfoBean* ChapterAwardInfoBean::default_instance_ = NULL;

ChapterAwardInfoBean* ChapterAwardInfoBean::New() const {
  return new ChapterAwardInfoBean;
}

void ChapterAwardInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chapterid_ = 0u;
    awardstates_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChapterAwardInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 chapterId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_awardStates;
        break;
      }

      // required uint32 awardStates = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_awardStates:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &awardstates_)));
          set_has_awardstates();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ChapterAwardInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 chapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // required uint32 awardStates = 3;
  if (has_awardstates()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->awardstates(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChapterAwardInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 chapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // required uint32 awardStates = 3;
  if (has_awardstates()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->awardstates(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChapterAwardInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 chapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // required uint32 awardStates = 3;
    if (has_awardstates()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->awardstates());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChapterAwardInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChapterAwardInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChapterAwardInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChapterAwardInfoBean::MergeFrom(const ChapterAwardInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_awardstates()) {
      set_awardstates(from.awardstates());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChapterAwardInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChapterAwardInfoBean::CopyFrom(const ChapterAwardInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChapterAwardInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ChapterAwardInfoBean::Swap(ChapterAwardInfoBean* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(awardstates_, other->awardstates_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChapterAwardInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChapterAwardInfoBean_descriptor_;
  metadata.reflection = ChapterAwardInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BattleInfoBean::kPasscardIdFieldNumber;
const int BattleInfoBean::kCountFieldNumber;
#endif  // !_MSC_VER

BattleInfoBean::BattleInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BattleInfoBean::InitAsDefaultInstance() {
}

BattleInfoBean::BattleInfoBean(const BattleInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BattleInfoBean::SharedCtor() {
  _cached_size_ = 0;
  passcardid_ = 0u;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BattleInfoBean::~BattleInfoBean() {
  SharedDtor();
}

void BattleInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleInfoBean_descriptor_;
}

const BattleInfoBean& BattleInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

BattleInfoBean* BattleInfoBean::default_instance_ = NULL;

BattleInfoBean* BattleInfoBean::New() const {
  return new BattleInfoBean;
}

void BattleInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    passcardid_ = 0u;
    count_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BattleInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 passcardId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passcardid_)));
          set_has_passcardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required uint32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BattleInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->passcardid(), output);
  }

  // required uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BattleInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->passcardid(), target);
  }

  // required uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BattleInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 passcardId = 1;
    if (has_passcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passcardid());
    }

    // required uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BattleInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BattleInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BattleInfoBean::MergeFrom(const BattleInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_passcardid()) {
      set_passcardid(from.passcardid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BattleInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleInfoBean::CopyFrom(const BattleInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BattleInfoBean::Swap(BattleInfoBean* other) {
  if (other != this) {
    std::swap(passcardid_, other->passcardid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BattleInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleInfoBean_descriptor_;
  metadata.reflection = BattleInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResetInfoBean::kPasscardIdFieldNumber;
const int ResetInfoBean::kCountFieldNumber;
#endif  // !_MSC_VER

ResetInfoBean::ResetInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResetInfoBean::InitAsDefaultInstance() {
}

ResetInfoBean::ResetInfoBean(const ResetInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResetInfoBean::SharedCtor() {
  _cached_size_ = 0;
  passcardid_ = 0u;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetInfoBean::~ResetInfoBean() {
  SharedDtor();
}

void ResetInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetInfoBean_descriptor_;
}

const ResetInfoBean& ResetInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

ResetInfoBean* ResetInfoBean::default_instance_ = NULL;

ResetInfoBean* ResetInfoBean::New() const {
  return new ResetInfoBean;
}

void ResetInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    passcardid_ = 0u;
    count_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResetInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 passcardId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passcardid_)));
          set_has_passcardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required uint32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResetInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->passcardid(), output);
  }

  // required uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResetInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->passcardid(), target);
  }

  // required uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResetInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 passcardId = 1;
    if (has_passcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passcardid());
    }

    // required uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResetInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResetInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResetInfoBean::MergeFrom(const ResetInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_passcardid()) {
      set_passcardid(from.passcardid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResetInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetInfoBean::CopyFrom(const ResetInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ResetInfoBean::Swap(ResetInfoBean* other) {
  if (other != this) {
    std::swap(passcardid_, other->passcardid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResetInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetInfoBean_descriptor_;
  metadata.reflection = ResetInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConcealInfoBean::kPasscardIdFieldNumber;
const int ConcealInfoBean::kTimeFieldNumber;
#endif  // !_MSC_VER

ConcealInfoBean::ConcealInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ConcealInfoBean::InitAsDefaultInstance() {
}

ConcealInfoBean::ConcealInfoBean(const ConcealInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ConcealInfoBean::SharedCtor() {
  _cached_size_ = 0;
  passcardid_ = 0u;
  time_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConcealInfoBean::~ConcealInfoBean() {
  SharedDtor();
}

void ConcealInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ConcealInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConcealInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConcealInfoBean_descriptor_;
}

const ConcealInfoBean& ConcealInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

ConcealInfoBean* ConcealInfoBean::default_instance_ = NULL;

ConcealInfoBean* ConcealInfoBean::New() const {
  return new ConcealInfoBean;
}

void ConcealInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    passcardid_ = 0u;
    time_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConcealInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 passcardId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passcardid_)));
          set_has_passcardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // required uint64 time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ConcealInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->passcardid(), output);
  }

  // required uint64 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ConcealInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->passcardid(), target);
  }

  // required uint64 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ConcealInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 passcardId = 1;
    if (has_passcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passcardid());
    }

    // required uint64 time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConcealInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConcealInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConcealInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConcealInfoBean::MergeFrom(const ConcealInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_passcardid()) {
      set_passcardid(from.passcardid());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConcealInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConcealInfoBean::CopyFrom(const ConcealInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConcealInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ConcealInfoBean::Swap(ConcealInfoBean* other) {
  if (other != this) {
    std::swap(passcardid_, other->passcardid_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConcealInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConcealInfoBean_descriptor_;
  metadata.reflection = ConcealInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShopInfoBean::kTypeFieldNumber;
const int ShopInfoBean::kShopIpFieldNumber;
const int ShopInfoBean::kTimeFieldNumber;
const int ShopInfoBean::kGoodsIndexFieldNumber;
const int ShopInfoBean::kRefreshCountFieldNumber;
#endif  // !_MSC_VER

ShopInfoBean::ShopInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ShopInfoBean::InitAsDefaultInstance() {
}

ShopInfoBean::ShopInfoBean(const ShopInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ShopInfoBean::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  shopip_ = 0u;
  time_ = GOOGLE_ULONGLONG(0);
  refreshcount_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopInfoBean::~ShopInfoBean() {
  SharedDtor();
}

void ShopInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShopInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopInfoBean_descriptor_;
}

const ShopInfoBean& ShopInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

ShopInfoBean* ShopInfoBean::default_instance_ = NULL;

ShopInfoBean* ShopInfoBean::New() const {
  return new ShopInfoBean;
}

void ShopInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    shopip_ = 0u;
    time_ = GOOGLE_ULONGLONG(0);
    refreshcount_ = 0u;
  }
  goodsindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_shopIp;
        break;
      }

      // required uint32 shopIp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shopIp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopip_)));
          set_has_shopip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }

      // required uint64 time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_goodsIndex;
        break;
      }

      // repeated uint32 goodsIndex = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goodsIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32, input, this->mutable_goodsindex())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_goodsindex())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_goodsIndex;
        if (input->ExpectTag(40)) goto parse_refreshCount;
        break;
      }

      // required uint32 refreshCount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refreshCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refreshcount_)));
          set_has_refreshcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ShopInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required uint32 shopIp = 2;
  if (has_shopip()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shopip(), output);
  }

  // required uint64 time = 3;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->time(), output);
  }

  // repeated uint32 goodsIndex = 4;
  for (int i = 0; i < this->goodsindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->goodsindex(i), output);
  }

  // required uint32 refreshCount = 5;
  if (has_refreshcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->refreshcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ShopInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required uint32 shopIp = 2;
  if (has_shopip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->shopip(), target);
  }

  // required uint64 time = 3;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->time(), target);
  }

  // repeated uint32 goodsIndex = 4;
  for (int i = 0; i < this->goodsindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->goodsindex(i), target);
  }

  // required uint32 refreshCount = 5;
  if (has_refreshcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->refreshcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ShopInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 shopIp = 2;
    if (has_shopip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopip());
    }

    // required uint64 time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->time());
    }

    // required uint32 refreshCount = 5;
    if (has_refreshcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->refreshcount());
    }

  }
  // repeated uint32 goodsIndex = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->goodsindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->goodsindex(i));
    }
    total_size += 1 * this->goodsindex_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopInfoBean::MergeFrom(const ShopInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsindex_.MergeFrom(from.goodsindex_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_shopip()) {
      set_shopip(from.shopip());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_refreshcount()) {
      set_refreshcount(from.refreshcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopInfoBean::CopyFrom(const ShopInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000017) != 0x00000017) return false;

  return true;
}

void ShopInfoBean::Swap(ShopInfoBean* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(shopip_, other->shopip_);
    std::swap(time_, other->time_);
    goodsindex_.Swap(&other->goodsindex_);
    std::swap(refreshcount_, other->refreshcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopInfoBean_descriptor_;
  metadata.reflection = ShopInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MatchInfoBean::kTypeFieldNumber;
const int MatchInfoBean::kPasscardFieldNumber;
const int MatchInfoBean::kChapterStarInfoBeanFieldNumber;
const int MatchInfoBean::kBattleInfoBeanFieldNumber;
const int MatchInfoBean::kResetInfoBeanFieldNumber;
#endif  // !_MSC_VER

MatchInfoBean::MatchInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MatchInfoBean::InitAsDefaultInstance() {
}

MatchInfoBean::MatchInfoBean(const MatchInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MatchInfoBean::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  passcard_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MatchInfoBean::~MatchInfoBean() {
  SharedDtor();
}

void MatchInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MatchInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchInfoBean_descriptor_;
}

const MatchInfoBean& MatchInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

MatchInfoBean* MatchInfoBean::default_instance_ = NULL;

MatchInfoBean* MatchInfoBean::New() const {
  return new MatchInfoBean;
}

void MatchInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    passcard_ = 0u;
  }
  chapterstarinfobean_.Clear();
  battleinfobean_.Clear();
  resetinfobean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MatchInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_passcard;
        break;
      }

      // required uint32 passcard = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_passcard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passcard_)));
          set_has_passcard();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_chapterStarInfoBean;
        break;
      }

      // repeated .ChapterStarInfoBean chapterStarInfoBean = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_chapterStarInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterstarinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_chapterStarInfoBean;
        if (input->ExpectTag(34)) goto parse_battleInfoBean;
        break;
      }

      // repeated .BattleInfoBean battleInfoBean = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_battleInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_battleinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_battleInfoBean;
        if (input->ExpectTag(42)) goto parse_resetInfoBean;
        break;
      }

      // repeated .ResetInfoBean resetInfoBean = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resetInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resetinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_resetInfoBean;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MatchInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required uint32 passcard = 2;
  if (has_passcard()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->passcard(), output);
  }

  // repeated .ChapterStarInfoBean chapterStarInfoBean = 3;
  for (int i = 0; i < this->chapterstarinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->chapterstarinfobean(i), output);
  }

  // repeated .BattleInfoBean battleInfoBean = 4;
  for (int i = 0; i < this->battleinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->battleinfobean(i), output);
  }

  // repeated .ResetInfoBean resetInfoBean = 5;
  for (int i = 0; i < this->resetinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->resetinfobean(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MatchInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required uint32 passcard = 2;
  if (has_passcard()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->passcard(), target);
  }

  // repeated .ChapterStarInfoBean chapterStarInfoBean = 3;
  for (int i = 0; i < this->chapterstarinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->chapterstarinfobean(i), target);
  }

  // repeated .BattleInfoBean battleInfoBean = 4;
  for (int i = 0; i < this->battleinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->battleinfobean(i), target);
  }

  // repeated .ResetInfoBean resetInfoBean = 5;
  for (int i = 0; i < this->resetinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->resetinfobean(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MatchInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 passcard = 2;
    if (has_passcard()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passcard());
    }

  }
  // repeated .ChapterStarInfoBean chapterStarInfoBean = 3;
  total_size += 1 * this->chapterstarinfobean_size();
  for (int i = 0; i < this->chapterstarinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterstarinfobean(i));
  }

  // repeated .BattleInfoBean battleInfoBean = 4;
  total_size += 1 * this->battleinfobean_size();
  for (int i = 0; i < this->battleinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->battleinfobean(i));
  }

  // repeated .ResetInfoBean resetInfoBean = 5;
  total_size += 1 * this->resetinfobean_size();
  for (int i = 0; i < this->resetinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resetinfobean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MatchInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MatchInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MatchInfoBean::MergeFrom(const MatchInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  chapterstarinfobean_.MergeFrom(from.chapterstarinfobean_);
  battleinfobean_.MergeFrom(from.battleinfobean_);
  resetinfobean_.MergeFrom(from.resetinfobean_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_passcard()) {
      set_passcard(from.passcard());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MatchInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchInfoBean::CopyFrom(const MatchInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < chapterstarinfobean_size(); i++) {
    if (!this->chapterstarinfobean(i).IsInitialized()) return false;
  }
  for (int i = 0; i < battleinfobean_size(); i++) {
    if (!this->battleinfobean(i).IsInitialized()) return false;
  }
  for (int i = 0; i < resetinfobean_size(); i++) {
    if (!this->resetinfobean(i).IsInitialized()) return false;
  }
  return true;
}

void MatchInfoBean::Swap(MatchInfoBean* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(passcard_, other->passcard_);
    chapterstarinfobean_.Swap(&other->chapterstarinfobean_);
    battleinfobean_.Swap(&other->battleinfobean_);
    resetinfobean_.Swap(&other->resetinfobean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MatchInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchInfoBean_descriptor_;
  metadata.reflection = MatchInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DropInfoBean::kGoodsIdFieldNumber;
const int DropInfoBean::kCountFieldNumber;
#endif  // !_MSC_VER

DropInfoBean::DropInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DropInfoBean::InitAsDefaultInstance() {
}

DropInfoBean::DropInfoBean(const DropInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DropInfoBean::SharedCtor() {
  _cached_size_ = 0;
  goodsid_ = 0u;
  count_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DropInfoBean::~DropInfoBean() {
  SharedDtor();
}

void DropInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DropInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DropInfoBean_descriptor_;
}

const DropInfoBean& DropInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

DropInfoBean* DropInfoBean::default_instance_ = NULL;

DropInfoBean* DropInfoBean::New() const {
  return new DropInfoBean;
}

void DropInfoBean::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    goodsid_ = 0u;
    count_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DropInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 goodsId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodsid_)));
          set_has_goodsid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // required uint32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DropInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 goodsId = 1;
  if (has_goodsid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goodsid(), output);
  }

  // required uint32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DropInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 goodsId = 1;
  if (has_goodsid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goodsid(), target);
  }

  // required uint32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DropInfoBean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 goodsId = 1;
    if (has_goodsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodsid());
    }

    // required uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DropInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DropInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DropInfoBean::MergeFrom(const DropInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goodsid()) {
      set_goodsid(from.goodsid());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DropInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropInfoBean::CopyFrom(const DropInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropInfoBean::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DropInfoBean::Swap(DropInfoBean* other) {
  if (other != this) {
    std::swap(goodsid_, other->goodsid_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DropInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DropInfoBean_descriptor_;
  metadata.reflection = DropInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MopupDropInfoBean::kDropInfoBeanFieldNumber;
#endif  // !_MSC_VER

MopupDropInfoBean::MopupDropInfoBean()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MopupDropInfoBean::InitAsDefaultInstance() {
}

MopupDropInfoBean::MopupDropInfoBean(const MopupDropInfoBean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MopupDropInfoBean::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MopupDropInfoBean::~MopupDropInfoBean() {
  SharedDtor();
}

void MopupDropInfoBean::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MopupDropInfoBean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MopupDropInfoBean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MopupDropInfoBean_descriptor_;
}

const MopupDropInfoBean& MopupDropInfoBean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

MopupDropInfoBean* MopupDropInfoBean::default_instance_ = NULL;

MopupDropInfoBean* MopupDropInfoBean::New() const {
  return new MopupDropInfoBean;
}

void MopupDropInfoBean::Clear() {
  dropinfobean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MopupDropInfoBean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DropInfoBean dropInfoBean = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dropInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dropinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_dropInfoBean;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MopupDropInfoBean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .DropInfoBean dropInfoBean = 1;
  for (int i = 0; i < this->dropinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dropinfobean(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MopupDropInfoBean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .DropInfoBean dropInfoBean = 1;
  for (int i = 0; i < this->dropinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dropinfobean(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MopupDropInfoBean::ByteSize() const {
  int total_size = 0;

  // repeated .DropInfoBean dropInfoBean = 1;
  total_size += 1 * this->dropinfobean_size();
  for (int i = 0; i < this->dropinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dropinfobean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MopupDropInfoBean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MopupDropInfoBean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MopupDropInfoBean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MopupDropInfoBean::MergeFrom(const MopupDropInfoBean& from) {
  GOOGLE_CHECK_NE(&from, this);
  dropinfobean_.MergeFrom(from.dropinfobean_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MopupDropInfoBean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MopupDropInfoBean::CopyFrom(const MopupDropInfoBean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MopupDropInfoBean::IsInitialized() const {

  for (int i = 0; i < dropinfobean_size(); i++) {
    if (!this->dropinfobean(i).IsInitialized()) return false;
  }
  return true;
}

void MopupDropInfoBean::Swap(MopupDropInfoBean* other) {
  if (other != this) {
    dropinfobean_.Swap(&other->dropinfobean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MopupDropInfoBean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MopupDropInfoBean_descriptor_;
  metadata.reflection = MopupDropInfoBean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetMatchinfoUp::GetMatchinfoUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetMatchinfoUp::InitAsDefaultInstance() {
}

GetMatchinfoUp::GetMatchinfoUp(const GetMatchinfoUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetMatchinfoUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMatchinfoUp::~GetMatchinfoUp() {
  SharedDtor();
}

void GetMatchinfoUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetMatchinfoUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMatchinfoUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMatchinfoUp_descriptor_;
}

const GetMatchinfoUp& GetMatchinfoUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

GetMatchinfoUp* GetMatchinfoUp::default_instance_ = NULL;

GetMatchinfoUp* GetMatchinfoUp::New() const {
  return new GetMatchinfoUp;
}

void GetMatchinfoUp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetMatchinfoUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void GetMatchinfoUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetMatchinfoUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetMatchinfoUp::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMatchinfoUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetMatchinfoUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetMatchinfoUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetMatchinfoUp::MergeFrom(const GetMatchinfoUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetMatchinfoUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMatchinfoUp::CopyFrom(const GetMatchinfoUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMatchinfoUp::IsInitialized() const {

  return true;
}

void GetMatchinfoUp::Swap(GetMatchinfoUp* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetMatchinfoUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMatchinfoUp_descriptor_;
  metadata.reflection = GetMatchinfoUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetMatchinfoDown::kMatchInfoBeanFieldNumber;
const int GetMatchinfoDown::kMopupCountFieldNumber;
const int GetMatchinfoDown::kConcealInfoBeanFieldNumber;
const int GetMatchinfoDown::kShopInfoBeanFieldNumber;
const int GetMatchinfoDown::kChapterAwardInfoBeanFieldNumber;
#endif  // !_MSC_VER

GetMatchinfoDown::GetMatchinfoDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetMatchinfoDown::InitAsDefaultInstance() {
}

GetMatchinfoDown::GetMatchinfoDown(const GetMatchinfoDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetMatchinfoDown::SharedCtor() {
  _cached_size_ = 0;
  mopupcount_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetMatchinfoDown::~GetMatchinfoDown() {
  SharedDtor();
}

void GetMatchinfoDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetMatchinfoDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMatchinfoDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMatchinfoDown_descriptor_;
}

const GetMatchinfoDown& GetMatchinfoDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

GetMatchinfoDown* GetMatchinfoDown::default_instance_ = NULL;

GetMatchinfoDown* GetMatchinfoDown::New() const {
  return new GetMatchinfoDown;
}

void GetMatchinfoDown::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    mopupcount_ = 0u;
  }
  matchinfobean_.Clear();
  concealinfobean_.Clear();
  shopinfobean_.Clear();
  chapterawardinfobean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetMatchinfoDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MatchInfoBean MatchInfoBean = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_MatchInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_matchinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_MatchInfoBean;
        if (input->ExpectTag(16)) goto parse_mopupCount;
        break;
      }

      // required uint32 mopupCount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mopupCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mopupcount_)));
          set_has_mopupcount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_concealInfoBean;
        break;
      }

      // repeated .ConcealInfoBean concealInfoBean = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_concealInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_concealinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_concealInfoBean;
        if (input->ExpectTag(34)) goto parse_shopInfoBean;
        break;
      }

      // repeated .ShopInfoBean shopInfoBean = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shopInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shopinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_shopInfoBean;
        if (input->ExpectTag(42)) goto parse_chapterAwardInfoBean;
        break;
      }

      // repeated .ChapterAwardInfoBean chapterAwardInfoBean = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_chapterAwardInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chapterawardinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_chapterAwardInfoBean;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetMatchinfoDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .MatchInfoBean MatchInfoBean = 1;
  for (int i = 0; i < this->matchinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->matchinfobean(i), output);
  }

  // required uint32 mopupCount = 2;
  if (has_mopupcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mopupcount(), output);
  }

  // repeated .ConcealInfoBean concealInfoBean = 3;
  for (int i = 0; i < this->concealinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->concealinfobean(i), output);
  }

  // repeated .ShopInfoBean shopInfoBean = 4;
  for (int i = 0; i < this->shopinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->shopinfobean(i), output);
  }

  // repeated .ChapterAwardInfoBean chapterAwardInfoBean = 5;
  for (int i = 0; i < this->chapterawardinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->chapterawardinfobean(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetMatchinfoDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MatchInfoBean MatchInfoBean = 1;
  for (int i = 0; i < this->matchinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->matchinfobean(i), target);
  }

  // required uint32 mopupCount = 2;
  if (has_mopupcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mopupcount(), target);
  }

  // repeated .ConcealInfoBean concealInfoBean = 3;
  for (int i = 0; i < this->concealinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->concealinfobean(i), target);
  }

  // repeated .ShopInfoBean shopInfoBean = 4;
  for (int i = 0; i < this->shopinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->shopinfobean(i), target);
  }

  // repeated .ChapterAwardInfoBean chapterAwardInfoBean = 5;
  for (int i = 0; i < this->chapterawardinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->chapterawardinfobean(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetMatchinfoDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required uint32 mopupCount = 2;
    if (has_mopupcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mopupcount());
    }

  }
  // repeated .MatchInfoBean MatchInfoBean = 1;
  total_size += 1 * this->matchinfobean_size();
  for (int i = 0; i < this->matchinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matchinfobean(i));
  }

  // repeated .ConcealInfoBean concealInfoBean = 3;
  total_size += 1 * this->concealinfobean_size();
  for (int i = 0; i < this->concealinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->concealinfobean(i));
  }

  // repeated .ShopInfoBean shopInfoBean = 4;
  total_size += 1 * this->shopinfobean_size();
  for (int i = 0; i < this->shopinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shopinfobean(i));
  }

  // repeated .ChapterAwardInfoBean chapterAwardInfoBean = 5;
  total_size += 1 * this->chapterawardinfobean_size();
  for (int i = 0; i < this->chapterawardinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterawardinfobean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMatchinfoDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetMatchinfoDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetMatchinfoDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetMatchinfoDown::MergeFrom(const GetMatchinfoDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  matchinfobean_.MergeFrom(from.matchinfobean_);
  concealinfobean_.MergeFrom(from.concealinfobean_);
  shopinfobean_.MergeFrom(from.shopinfobean_);
  chapterawardinfobean_.MergeFrom(from.chapterawardinfobean_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_mopupcount()) {
      set_mopupcount(from.mopupcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetMatchinfoDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMatchinfoDown::CopyFrom(const GetMatchinfoDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMatchinfoDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  for (int i = 0; i < matchinfobean_size(); i++) {
    if (!this->matchinfobean(i).IsInitialized()) return false;
  }
  for (int i = 0; i < concealinfobean_size(); i++) {
    if (!this->concealinfobean(i).IsInitialized()) return false;
  }
  for (int i = 0; i < shopinfobean_size(); i++) {
    if (!this->shopinfobean(i).IsInitialized()) return false;
  }
  for (int i = 0; i < chapterawardinfobean_size(); i++) {
    if (!this->chapterawardinfobean(i).IsInitialized()) return false;
  }
  return true;
}

void GetMatchinfoDown::Swap(GetMatchinfoDown* other) {
  if (other != this) {
    matchinfobean_.Swap(&other->matchinfobean_);
    std::swap(mopupcount_, other->mopupcount_);
    concealinfobean_.Swap(&other->concealinfobean_);
    shopinfobean_.Swap(&other->shopinfobean_);
    chapterawardinfobean_.Swap(&other->chapterawardinfobean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetMatchinfoDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMatchinfoDown_descriptor_;
  metadata.reflection = GetMatchinfoDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MatchStartUp::kTypeFieldNumber;
const int MatchStartUp::kPasscardIdFieldNumber;
const int MatchStartUp::kFormationInfoBeanFieldNumber;
#endif  // !_MSC_VER

MatchStartUp::MatchStartUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MatchStartUp::InitAsDefaultInstance() {
}

MatchStartUp::MatchStartUp(const MatchStartUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MatchStartUp::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  passcardid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MatchStartUp::~MatchStartUp() {
  SharedDtor();
}

void MatchStartUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MatchStartUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchStartUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchStartUp_descriptor_;
}

const MatchStartUp& MatchStartUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

MatchStartUp* MatchStartUp::default_instance_ = NULL;

MatchStartUp* MatchStartUp::New() const {
  return new MatchStartUp;
}

void MatchStartUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    passcardid_ = 0u;
  }
  formationinfobean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MatchStartUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_passcardId;
        break;
      }

      // required uint32 passcardId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_passcardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passcardid_)));
          set_has_passcardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_formationInfoBean;
        break;
      }

      // repeated .FormationInfoBean formationInfoBean = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_formationInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_formationinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_formationInfoBean;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MatchStartUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required uint32 passcardId = 2;
  if (has_passcardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->passcardid(), output);
  }

  // repeated .FormationInfoBean formationInfoBean = 3;
  for (int i = 0; i < this->formationinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->formationinfobean(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MatchStartUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required uint32 passcardId = 2;
  if (has_passcardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->passcardid(), target);
  }

  // repeated .FormationInfoBean formationInfoBean = 3;
  for (int i = 0; i < this->formationinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->formationinfobean(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MatchStartUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // required uint32 passcardId = 2;
    if (has_passcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passcardid());
    }

  }
  // repeated .FormationInfoBean formationInfoBean = 3;
  total_size += 1 * this->formationinfobean_size();
  for (int i = 0; i < this->formationinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->formationinfobean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchStartUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MatchStartUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MatchStartUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MatchStartUp::MergeFrom(const MatchStartUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  formationinfobean_.MergeFrom(from.formationinfobean_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_passcardid()) {
      set_passcardid(from.passcardid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MatchStartUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchStartUp::CopyFrom(const MatchStartUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchStartUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < formationinfobean_size(); i++) {
    if (!this->formationinfobean(i).IsInitialized()) return false;
  }
  return true;
}

void MatchStartUp::Swap(MatchStartUp* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(passcardid_, other->passcardid_);
    formationinfobean_.Swap(&other->formationinfobean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MatchStartUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchStartUp_descriptor_;
  metadata.reflection = MatchStartUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MatchOverUp::kResultTypeFieldNumber;
const int MatchOverUp::kStarFieldNumber;
#endif  // !_MSC_VER

MatchOverUp::MatchOverUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MatchOverUp::InitAsDefaultInstance() {
}

MatchOverUp::MatchOverUp(const MatchOverUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MatchOverUp::SharedCtor() {
  _cached_size_ = 0;
  resulttype_ = 0u;
  star_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MatchOverUp::~MatchOverUp() {
  SharedDtor();
}

void MatchOverUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MatchOverUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchOverUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchOverUp_descriptor_;
}

const MatchOverUp& MatchOverUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

MatchOverUp* MatchOverUp::default_instance_ = NULL;

MatchOverUp* MatchOverUp::New() const {
  return new MatchOverUp;
}

void MatchOverUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    resulttype_ = 0u;
    star_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MatchOverUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 resultType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resulttype_)));
          set_has_resulttype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_star;
        break;
      }

      // optional uint32 star = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MatchOverUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 resultType = 1;
  if (has_resulttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->resulttype(), output);
  }

  // optional uint32 star = 2;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->star(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MatchOverUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 resultType = 1;
  if (has_resulttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->resulttype(), target);
  }

  // optional uint32 star = 2;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->star(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MatchOverUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 resultType = 1;
    if (has_resulttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->resulttype());
    }

    // optional uint32 star = 2;
    if (has_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->star());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchOverUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MatchOverUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MatchOverUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MatchOverUp::MergeFrom(const MatchOverUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resulttype()) {
      set_resulttype(from.resulttype());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MatchOverUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchOverUp::CopyFrom(const MatchOverUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchOverUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MatchOverUp::Swap(MatchOverUp* other) {
  if (other != this) {
    std::swap(resulttype_, other->resulttype_);
    std::swap(star_, other->star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MatchOverUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchOverUp_descriptor_;
  metadata.reflection = MatchOverUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MatchOverDown::kDropInfoBeanFieldNumber;
const int MatchOverDown::kCancealOpenFieldNumber;
const int MatchOverDown::kShopOpenFieldNumber;
const int MatchOverDown::kConcealInfoBeanFieldNumber;
const int MatchOverDown::kShopInfoBeanFieldNumber;
#endif  // !_MSC_VER

MatchOverDown::MatchOverDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MatchOverDown::InitAsDefaultInstance() {
  concealinfobean_ = const_cast< ::ConcealInfoBean*>(&::ConcealInfoBean::default_instance());
  shopinfobean_ = const_cast< ::ShopInfoBean*>(&::ShopInfoBean::default_instance());
}

MatchOverDown::MatchOverDown(const MatchOverDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MatchOverDown::SharedCtor() {
  _cached_size_ = 0;
  cancealopen_ = false;
  shopopen_ = false;
  concealinfobean_ = NULL;
  shopinfobean_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MatchOverDown::~MatchOverDown() {
  SharedDtor();
}

void MatchOverDown::SharedDtor() {
  if (this != default_instance_) {
    delete concealinfobean_;
    delete shopinfobean_;
  }
}

void MatchOverDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchOverDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchOverDown_descriptor_;
}

const MatchOverDown& MatchOverDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

MatchOverDown* MatchOverDown::default_instance_ = NULL;

MatchOverDown* MatchOverDown::New() const {
  return new MatchOverDown;
}

void MatchOverDown::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    cancealopen_ = false;
    shopopen_ = false;
    if (has_concealinfobean()) {
      if (concealinfobean_ != NULL) concealinfobean_->::ConcealInfoBean::Clear();
    }
    if (has_shopinfobean()) {
      if (shopinfobean_ != NULL) shopinfobean_->::ShopInfoBean::Clear();
    }
  }
  dropinfobean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MatchOverDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DropInfoBean dropInfoBean = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dropInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dropinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_dropInfoBean;
        if (input->ExpectTag(16)) goto parse_cancealOpen;
        break;
      }

      // required bool cancealOpen = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cancealOpen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cancealopen_)));
          set_has_cancealopen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_shopOpen;
        break;
      }

      // required bool shopOpen = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shopOpen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &shopopen_)));
          set_has_shopopen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_concealInfoBean;
        break;
      }

      // optional .ConcealInfoBean concealInfoBean = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_concealInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_concealinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_shopInfoBean;
        break;
      }

      // optional .ShopInfoBean shopInfoBean = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shopInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shopinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MatchOverDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .DropInfoBean dropInfoBean = 1;
  for (int i = 0; i < this->dropinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dropinfobean(i), output);
  }

  // required bool cancealOpen = 2;
  if (has_cancealopen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->cancealopen(), output);
  }

  // required bool shopOpen = 3;
  if (has_shopopen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->shopopen(), output);
  }

  // optional .ConcealInfoBean concealInfoBean = 4;
  if (has_concealinfobean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->concealinfobean(), output);
  }

  // optional .ShopInfoBean shopInfoBean = 5;
  if (has_shopinfobean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->shopinfobean(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MatchOverDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .DropInfoBean dropInfoBean = 1;
  for (int i = 0; i < this->dropinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->dropinfobean(i), target);
  }

  // required bool cancealOpen = 2;
  if (has_cancealopen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->cancealopen(), target);
  }

  // required bool shopOpen = 3;
  if (has_shopopen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->shopopen(), target);
  }

  // optional .ConcealInfoBean concealInfoBean = 4;
  if (has_concealinfobean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->concealinfobean(), target);
  }

  // optional .ShopInfoBean shopInfoBean = 5;
  if (has_shopinfobean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->shopinfobean(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MatchOverDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required bool cancealOpen = 2;
    if (has_cancealopen()) {
      total_size += 1 + 1;
    }

    // required bool shopOpen = 3;
    if (has_shopopen()) {
      total_size += 1 + 1;
    }

    // optional .ConcealInfoBean concealInfoBean = 4;
    if (has_concealinfobean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->concealinfobean());
    }

    // optional .ShopInfoBean shopInfoBean = 5;
    if (has_shopinfobean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shopinfobean());
    }

  }
  // repeated .DropInfoBean dropInfoBean = 1;
  total_size += 1 * this->dropinfobean_size();
  for (int i = 0; i < this->dropinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dropinfobean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchOverDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MatchOverDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MatchOverDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MatchOverDown::MergeFrom(const MatchOverDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  dropinfobean_.MergeFrom(from.dropinfobean_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_cancealopen()) {
      set_cancealopen(from.cancealopen());
    }
    if (from.has_shopopen()) {
      set_shopopen(from.shopopen());
    }
    if (from.has_concealinfobean()) {
      mutable_concealinfobean()->::ConcealInfoBean::MergeFrom(from.concealinfobean());
    }
    if (from.has_shopinfobean()) {
      mutable_shopinfobean()->::ShopInfoBean::MergeFrom(from.shopinfobean());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MatchOverDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchOverDown::CopyFrom(const MatchOverDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchOverDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  for (int i = 0; i < dropinfobean_size(); i++) {
    if (!this->dropinfobean(i).IsInitialized()) return false;
  }
  if (has_concealinfobean()) {
    if (!this->concealinfobean().IsInitialized()) return false;
  }
  if (has_shopinfobean()) {
    if (!this->shopinfobean().IsInitialized()) return false;
  }
  return true;
}

void MatchOverDown::Swap(MatchOverDown* other) {
  if (other != this) {
    dropinfobean_.Swap(&other->dropinfobean_);
    std::swap(cancealopen_, other->cancealopen_);
    std::swap(shopopen_, other->shopopen_);
    std::swap(concealinfobean_, other->concealinfobean_);
    std::swap(shopinfobean_, other->shopinfobean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MatchOverDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchOverDown_descriptor_;
  metadata.reflection = MatchOverDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MatchMopupUp::kMatchTypeFieldNumber;
const int MatchMopupUp::kPasscardIdFieldNumber;
const int MatchMopupUp::kMoreFieldNumber;
#endif  // !_MSC_VER

MatchMopupUp::MatchMopupUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MatchMopupUp::InitAsDefaultInstance() {
}

MatchMopupUp::MatchMopupUp(const MatchMopupUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MatchMopupUp::SharedCtor() {
  _cached_size_ = 0;
  matchtype_ = 0u;
  passcardid_ = 0u;
  more_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MatchMopupUp::~MatchMopupUp() {
  SharedDtor();
}

void MatchMopupUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MatchMopupUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchMopupUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchMopupUp_descriptor_;
}

const MatchMopupUp& MatchMopupUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

MatchMopupUp* MatchMopupUp::default_instance_ = NULL;

MatchMopupUp* MatchMopupUp::New() const {
  return new MatchMopupUp;
}

void MatchMopupUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    matchtype_ = 0u;
    passcardid_ = 0u;
    more_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MatchMopupUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 matchType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchtype_)));
          set_has_matchtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_passcardId;
        break;
      }

      // required uint32 passcardId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_passcardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passcardid_)));
          set_has_passcardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_more;
        break;
      }

      // required bool more = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_more:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &more_)));
          set_has_more();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MatchMopupUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 matchType = 1;
  if (has_matchtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchtype(), output);
  }

  // required uint32 passcardId = 2;
  if (has_passcardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->passcardid(), output);
  }

  // required bool more = 3;
  if (has_more()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->more(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MatchMopupUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 matchType = 1;
  if (has_matchtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchtype(), target);
  }

  // required uint32 passcardId = 2;
  if (has_passcardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->passcardid(), target);
  }

  // required bool more = 3;
  if (has_more()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->more(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MatchMopupUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 matchType = 1;
    if (has_matchtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matchtype());
    }

    // required uint32 passcardId = 2;
    if (has_passcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passcardid());
    }

    // required bool more = 3;
    if (has_more()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchMopupUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MatchMopupUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MatchMopupUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MatchMopupUp::MergeFrom(const MatchMopupUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_matchtype()) {
      set_matchtype(from.matchtype());
    }
    if (from.has_passcardid()) {
      set_passcardid(from.passcardid());
    }
    if (from.has_more()) {
      set_more(from.more());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MatchMopupUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchMopupUp::CopyFrom(const MatchMopupUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchMopupUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void MatchMopupUp::Swap(MatchMopupUp* other) {
  if (other != this) {
    std::swap(matchtype_, other->matchtype_);
    std::swap(passcardid_, other->passcardid_);
    std::swap(more_, other->more_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MatchMopupUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchMopupUp_descriptor_;
  metadata.reflection = MatchMopupUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MatchMopupDown::kMopupDropInfoBeanFieldNumber;
const int MatchMopupDown::kCancealOpenFieldNumber;
const int MatchMopupDown::kShopOpenFieldNumber;
const int MatchMopupDown::kConcealInfoBeanFieldNumber;
const int MatchMopupDown::kShopInfoBeanFieldNumber;
#endif  // !_MSC_VER

MatchMopupDown::MatchMopupDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MatchMopupDown::InitAsDefaultInstance() {
  concealinfobean_ = const_cast< ::ConcealInfoBean*>(&::ConcealInfoBean::default_instance());
  shopinfobean_ = const_cast< ::ShopInfoBean*>(&::ShopInfoBean::default_instance());
}

MatchMopupDown::MatchMopupDown(const MatchMopupDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MatchMopupDown::SharedCtor() {
  _cached_size_ = 0;
  cancealopen_ = false;
  shopopen_ = false;
  concealinfobean_ = NULL;
  shopinfobean_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MatchMopupDown::~MatchMopupDown() {
  SharedDtor();
}

void MatchMopupDown::SharedDtor() {
  if (this != default_instance_) {
    delete concealinfobean_;
    delete shopinfobean_;
  }
}

void MatchMopupDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchMopupDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MatchMopupDown_descriptor_;
}

const MatchMopupDown& MatchMopupDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

MatchMopupDown* MatchMopupDown::default_instance_ = NULL;

MatchMopupDown* MatchMopupDown::New() const {
  return new MatchMopupDown;
}

void MatchMopupDown::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    cancealopen_ = false;
    shopopen_ = false;
    if (has_concealinfobean()) {
      if (concealinfobean_ != NULL) concealinfobean_->::ConcealInfoBean::Clear();
    }
    if (has_shopinfobean()) {
      if (shopinfobean_ != NULL) shopinfobean_->::ShopInfoBean::Clear();
    }
  }
  mopupdropinfobean_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MatchMopupDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MopupDropInfoBean mopupDropInfoBean = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mopupDropInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mopupdropinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_mopupDropInfoBean;
        if (input->ExpectTag(16)) goto parse_cancealOpen;
        break;
      }

      // required bool cancealOpen = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cancealOpen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cancealopen_)));
          set_has_cancealopen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_shopOpen;
        break;
      }

      // required bool shopOpen = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shopOpen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &shopopen_)));
          set_has_shopopen();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_concealInfoBean;
        break;
      }

      // optional .ConcealInfoBean concealInfoBean = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_concealInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_concealinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_shopInfoBean;
        break;
      }

      // optional .ShopInfoBean shopInfoBean = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shopInfoBean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shopinfobean()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MatchMopupDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .MopupDropInfoBean mopupDropInfoBean = 1;
  for (int i = 0; i < this->mopupdropinfobean_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mopupdropinfobean(i), output);
  }

  // required bool cancealOpen = 2;
  if (has_cancealopen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->cancealopen(), output);
  }

  // required bool shopOpen = 3;
  if (has_shopopen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->shopopen(), output);
  }

  // optional .ConcealInfoBean concealInfoBean = 4;
  if (has_concealinfobean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->concealinfobean(), output);
  }

  // optional .ShopInfoBean shopInfoBean = 5;
  if (has_shopinfobean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->shopinfobean(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MatchMopupDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MopupDropInfoBean mopupDropInfoBean = 1;
  for (int i = 0; i < this->mopupdropinfobean_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mopupdropinfobean(i), target);
  }

  // required bool cancealOpen = 2;
  if (has_cancealopen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->cancealopen(), target);
  }

  // required bool shopOpen = 3;
  if (has_shopopen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->shopopen(), target);
  }

  // optional .ConcealInfoBean concealInfoBean = 4;
  if (has_concealinfobean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->concealinfobean(), target);
  }

  // optional .ShopInfoBean shopInfoBean = 5;
  if (has_shopinfobean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->shopinfobean(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MatchMopupDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required bool cancealOpen = 2;
    if (has_cancealopen()) {
      total_size += 1 + 1;
    }

    // required bool shopOpen = 3;
    if (has_shopopen()) {
      total_size += 1 + 1;
    }

    // optional .ConcealInfoBean concealInfoBean = 4;
    if (has_concealinfobean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->concealinfobean());
    }

    // optional .ShopInfoBean shopInfoBean = 5;
    if (has_shopinfobean()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shopinfobean());
    }

  }
  // repeated .MopupDropInfoBean mopupDropInfoBean = 1;
  total_size += 1 * this->mopupdropinfobean_size();
  for (int i = 0; i < this->mopupdropinfobean_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mopupdropinfobean(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchMopupDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MatchMopupDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MatchMopupDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MatchMopupDown::MergeFrom(const MatchMopupDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  mopupdropinfobean_.MergeFrom(from.mopupdropinfobean_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_cancealopen()) {
      set_cancealopen(from.cancealopen());
    }
    if (from.has_shopopen()) {
      set_shopopen(from.shopopen());
    }
    if (from.has_concealinfobean()) {
      mutable_concealinfobean()->::ConcealInfoBean::MergeFrom(from.concealinfobean());
    }
    if (from.has_shopinfobean()) {
      mutable_shopinfobean()->::ShopInfoBean::MergeFrom(from.shopinfobean());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MatchMopupDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchMopupDown::CopyFrom(const MatchMopupDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchMopupDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  for (int i = 0; i < mopupdropinfobean_size(); i++) {
    if (!this->mopupdropinfobean(i).IsInitialized()) return false;
  }
  if (has_concealinfobean()) {
    if (!this->concealinfobean().IsInitialized()) return false;
  }
  if (has_shopinfobean()) {
    if (!this->shopinfobean().IsInitialized()) return false;
  }
  return true;
}

void MatchMopupDown::Swap(MatchMopupDown* other) {
  if (other != this) {
    mopupdropinfobean_.Swap(&other->mopupdropinfobean_);
    std::swap(cancealopen_, other->cancealopen_);
    std::swap(shopopen_, other->shopopen_);
    std::swap(concealinfobean_, other->concealinfobean_);
    std::swap(shopinfobean_, other->shopinfobean_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MatchMopupDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MatchMopupDown_descriptor_;
  metadata.reflection = MatchMopupDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyGoodsUp::kShopTypeFieldNumber;
const int BuyGoodsUp::kShelfIdFieldNumber;
#endif  // !_MSC_VER

BuyGoodsUp::BuyGoodsUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuyGoodsUp::InitAsDefaultInstance() {
}

BuyGoodsUp::BuyGoodsUp(const BuyGoodsUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuyGoodsUp::SharedCtor() {
  _cached_size_ = 0;
  shoptype_ = 0u;
  shelfid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyGoodsUp::~BuyGoodsUp() {
  SharedDtor();
}

void BuyGoodsUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyGoodsUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyGoodsUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyGoodsUp_descriptor_;
}

const BuyGoodsUp& BuyGoodsUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

BuyGoodsUp* BuyGoodsUp::default_instance_ = NULL;

BuyGoodsUp* BuyGoodsUp::New() const {
  return new BuyGoodsUp;
}

void BuyGoodsUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shoptype_ = 0u;
    shelfid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyGoodsUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 shopType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shoptype_)));
          set_has_shoptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_shelfId;
        break;
      }

      // required uint32 shelfId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shelfId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shelfid_)));
          set_has_shelfid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuyGoodsUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 shopType = 1;
  if (has_shoptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shoptype(), output);
  }

  // required uint32 shelfId = 2;
  if (has_shelfid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shelfid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuyGoodsUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 shopType = 1;
  if (has_shoptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shoptype(), target);
  }

  // required uint32 shelfId = 2;
  if (has_shelfid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->shelfid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuyGoodsUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 shopType = 1;
    if (has_shoptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shoptype());
    }

    // required uint32 shelfId = 2;
    if (has_shelfid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shelfid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyGoodsUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyGoodsUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyGoodsUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyGoodsUp::MergeFrom(const BuyGoodsUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shoptype()) {
      set_shoptype(from.shoptype());
    }
    if (from.has_shelfid()) {
      set_shelfid(from.shelfid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyGoodsUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyGoodsUp::CopyFrom(const BuyGoodsUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyGoodsUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BuyGoodsUp::Swap(BuyGoodsUp* other) {
  if (other != this) {
    std::swap(shoptype_, other->shoptype_);
    std::swap(shelfid_, other->shelfid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyGoodsUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyGoodsUp_descriptor_;
  metadata.reflection = BuyGoodsUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyGoodsDown::kRefreshFieldNumber;
const int BuyGoodsDown::kGoodsIndexFieldNumber;
#endif  // !_MSC_VER

BuyGoodsDown::BuyGoodsDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuyGoodsDown::InitAsDefaultInstance() {
}

BuyGoodsDown::BuyGoodsDown(const BuyGoodsDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuyGoodsDown::SharedCtor() {
  _cached_size_ = 0;
  refresh_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyGoodsDown::~BuyGoodsDown() {
  SharedDtor();
}

void BuyGoodsDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyGoodsDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyGoodsDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyGoodsDown_descriptor_;
}

const BuyGoodsDown& BuyGoodsDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

BuyGoodsDown* BuyGoodsDown::default_instance_ = NULL;

BuyGoodsDown* BuyGoodsDown::New() const {
  return new BuyGoodsDown;
}

void BuyGoodsDown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refresh_ = false;
  }
  goodsindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyGoodsDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool refresh = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_goodsIndex;
        break;
      }

      // repeated uint32 goodsIndex = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goodsIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16, input, this->mutable_goodsindex())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_goodsindex())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_goodsIndex;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuyGoodsDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool refresh = 1;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->refresh(), output);
  }

  // repeated uint32 goodsIndex = 2;
  for (int i = 0; i < this->goodsindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->goodsindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuyGoodsDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool refresh = 1;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->refresh(), target);
  }

  // repeated uint32 goodsIndex = 2;
  for (int i = 0; i < this->goodsindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->goodsindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuyGoodsDown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool refresh = 1;
    if (has_refresh()) {
      total_size += 1 + 1;
    }

  }
  // repeated uint32 goodsIndex = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->goodsindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->goodsindex(i));
    }
    total_size += 1 * this->goodsindex_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyGoodsDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyGoodsDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyGoodsDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyGoodsDown::MergeFrom(const BuyGoodsDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsindex_.MergeFrom(from.goodsindex_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyGoodsDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyGoodsDown::CopyFrom(const BuyGoodsDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyGoodsDown::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuyGoodsDown::Swap(BuyGoodsDown* other) {
  if (other != this) {
    std::swap(refresh_, other->refresh_);
    goodsindex_.Swap(&other->goodsindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyGoodsDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyGoodsDown_descriptor_;
  metadata.reflection = BuyGoodsDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

BuyPowerUp::BuyPowerUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuyPowerUp::InitAsDefaultInstance() {
}

BuyPowerUp::BuyPowerUp(const BuyPowerUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuyPowerUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyPowerUp::~BuyPowerUp() {
  SharedDtor();
}

void BuyPowerUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyPowerUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyPowerUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyPowerUp_descriptor_;
}

const BuyPowerUp& BuyPowerUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

BuyPowerUp* BuyPowerUp::default_instance_ = NULL;

BuyPowerUp* BuyPowerUp::New() const {
  return new BuyPowerUp;
}

void BuyPowerUp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyPowerUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void BuyPowerUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuyPowerUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuyPowerUp::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyPowerUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyPowerUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyPowerUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyPowerUp::MergeFrom(const BuyPowerUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyPowerUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyPowerUp::CopyFrom(const BuyPowerUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyPowerUp::IsInitialized() const {

  return true;
}

void BuyPowerUp::Swap(BuyPowerUp* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyPowerUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyPowerUp_descriptor_;
  metadata.reflection = BuyPowerUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResetMatchCountUp::kPasscardIdFieldNumber;
#endif  // !_MSC_VER

ResetMatchCountUp::ResetMatchCountUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResetMatchCountUp::InitAsDefaultInstance() {
}

ResetMatchCountUp::ResetMatchCountUp(const ResetMatchCountUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResetMatchCountUp::SharedCtor() {
  _cached_size_ = 0;
  passcardid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetMatchCountUp::~ResetMatchCountUp() {
  SharedDtor();
}

void ResetMatchCountUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetMatchCountUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetMatchCountUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetMatchCountUp_descriptor_;
}

const ResetMatchCountUp& ResetMatchCountUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

ResetMatchCountUp* ResetMatchCountUp::default_instance_ = NULL;

ResetMatchCountUp* ResetMatchCountUp::New() const {
  return new ResetMatchCountUp;
}

void ResetMatchCountUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    passcardid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResetMatchCountUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 passcardId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passcardid_)));
          set_has_passcardid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResetMatchCountUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->passcardid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResetMatchCountUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 passcardId = 1;
  if (has_passcardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->passcardid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResetMatchCountUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 passcardId = 1;
    if (has_passcardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passcardid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetMatchCountUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResetMatchCountUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResetMatchCountUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResetMatchCountUp::MergeFrom(const ResetMatchCountUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_passcardid()) {
      set_passcardid(from.passcardid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResetMatchCountUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetMatchCountUp::CopyFrom(const ResetMatchCountUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetMatchCountUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResetMatchCountUp::Swap(ResetMatchCountUp* other) {
  if (other != this) {
    std::swap(passcardid_, other->passcardid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResetMatchCountUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetMatchCountUp_descriptor_;
  metadata.reflection = ResetMatchCountUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetStarAwardUp::kChapterIdFieldNumber;
const int GetStarAwardUp::kIndexFieldNumber;
#endif  // !_MSC_VER

GetStarAwardUp::GetStarAwardUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetStarAwardUp::InitAsDefaultInstance() {
}

GetStarAwardUp::GetStarAwardUp(const GetStarAwardUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetStarAwardUp::SharedCtor() {
  _cached_size_ = 0;
  chapterid_ = 0u;
  index_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStarAwardUp::~GetStarAwardUp() {
  SharedDtor();
}

void GetStarAwardUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetStarAwardUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStarAwardUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStarAwardUp_descriptor_;
}

const GetStarAwardUp& GetStarAwardUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

GetStarAwardUp* GetStarAwardUp::default_instance_ = NULL;

GetStarAwardUp* GetStarAwardUp::New() const {
  return new GetStarAwardUp;
}

void GetStarAwardUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chapterid_ = 0u;
    index_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetStarAwardUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 chapterId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));
          set_has_chapterid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }

      // required uint32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetStarAwardUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 chapterId = 1;
  if (has_chapterid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chapterid(), output);
  }

  // required uint32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetStarAwardUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 chapterId = 1;
  if (has_chapterid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chapterid(), target);
  }

  // required uint32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetStarAwardUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 chapterId = 1;
    if (has_chapterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chapterid());
    }

    // required uint32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetStarAwardUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetStarAwardUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetStarAwardUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetStarAwardUp::MergeFrom(const GetStarAwardUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chapterid()) {
      set_chapterid(from.chapterid());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetStarAwardUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStarAwardUp::CopyFrom(const GetStarAwardUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStarAwardUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GetStarAwardUp::Swap(GetStarAwardUp* other) {
  if (other != this) {
    std::swap(chapterid_, other->chapterid_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetStarAwardUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStarAwardUp_descriptor_;
  metadata.reflection = GetStarAwardUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RefreshMatchShopUp::kShopTypeFieldNumber;
#endif  // !_MSC_VER

RefreshMatchShopUp::RefreshMatchShopUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RefreshMatchShopUp::InitAsDefaultInstance() {
}

RefreshMatchShopUp::RefreshMatchShopUp(const RefreshMatchShopUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RefreshMatchShopUp::SharedCtor() {
  _cached_size_ = 0;
  shoptype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefreshMatchShopUp::~RefreshMatchShopUp() {
  SharedDtor();
}

void RefreshMatchShopUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefreshMatchShopUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshMatchShopUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefreshMatchShopUp_descriptor_;
}

const RefreshMatchShopUp& RefreshMatchShopUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

RefreshMatchShopUp* RefreshMatchShopUp::default_instance_ = NULL;

RefreshMatchShopUp* RefreshMatchShopUp::New() const {
  return new RefreshMatchShopUp;
}

void RefreshMatchShopUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shoptype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefreshMatchShopUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 shopType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shoptype_)));
          set_has_shoptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RefreshMatchShopUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 shopType = 1;
  if (has_shoptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shoptype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RefreshMatchShopUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 shopType = 1;
  if (has_shoptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shoptype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RefreshMatchShopUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 shopType = 1;
    if (has_shoptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shoptype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshMatchShopUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefreshMatchShopUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefreshMatchShopUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefreshMatchShopUp::MergeFrom(const RefreshMatchShopUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shoptype()) {
      set_shoptype(from.shoptype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefreshMatchShopUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshMatchShopUp::CopyFrom(const RefreshMatchShopUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshMatchShopUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RefreshMatchShopUp::Swap(RefreshMatchShopUp* other) {
  if (other != this) {
    std::swap(shoptype_, other->shoptype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefreshMatchShopUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefreshMatchShopUp_descriptor_;
  metadata.reflection = RefreshMatchShopUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RefreshMatchShopDown::kGoodsIndexFieldNumber;
#endif  // !_MSC_VER

RefreshMatchShopDown::RefreshMatchShopDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RefreshMatchShopDown::InitAsDefaultInstance() {
}

RefreshMatchShopDown::RefreshMatchShopDown(const RefreshMatchShopDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RefreshMatchShopDown::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RefreshMatchShopDown::~RefreshMatchShopDown() {
  SharedDtor();
}

void RefreshMatchShopDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RefreshMatchShopDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RefreshMatchShopDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RefreshMatchShopDown_descriptor_;
}

const RefreshMatchShopDown& RefreshMatchShopDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

RefreshMatchShopDown* RefreshMatchShopDown::default_instance_ = NULL;

RefreshMatchShopDown* RefreshMatchShopDown::New() const {
  return new RefreshMatchShopDown;
}

void RefreshMatchShopDown::Clear() {
  goodsindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RefreshMatchShopDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 goodsIndex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goodsIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_goodsindex())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_goodsindex())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_goodsIndex;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RefreshMatchShopDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 goodsIndex = 1;
  for (int i = 0; i < this->goodsindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->goodsindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RefreshMatchShopDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 goodsIndex = 1;
  for (int i = 0; i < this->goodsindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->goodsindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RefreshMatchShopDown::ByteSize() const {
  int total_size = 0;

  // repeated uint32 goodsIndex = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->goodsindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->goodsindex(i));
    }
    total_size += 1 * this->goodsindex_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RefreshMatchShopDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RefreshMatchShopDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RefreshMatchShopDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RefreshMatchShopDown::MergeFrom(const RefreshMatchShopDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsindex_.MergeFrom(from.goodsindex_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RefreshMatchShopDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefreshMatchShopDown::CopyFrom(const RefreshMatchShopDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefreshMatchShopDown::IsInitialized() const {

  return true;
}

void RefreshMatchShopDown::Swap(RefreshMatchShopDown* other) {
  if (other != this) {
    goodsindex_.Swap(&other->goodsindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RefreshMatchShopDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RefreshMatchShopDown_descriptor_;
  metadata.reflection = RefreshMatchShopDown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyAllGoodsUp::kShopTypeFieldNumber;
#endif  // !_MSC_VER

BuyAllGoodsUp::BuyAllGoodsUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuyAllGoodsUp::InitAsDefaultInstance() {
}

BuyAllGoodsUp::BuyAllGoodsUp(const BuyAllGoodsUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuyAllGoodsUp::SharedCtor() {
  _cached_size_ = 0;
  shoptype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyAllGoodsUp::~BuyAllGoodsUp() {
  SharedDtor();
}

void BuyAllGoodsUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyAllGoodsUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyAllGoodsUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyAllGoodsUp_descriptor_;
}

const BuyAllGoodsUp& BuyAllGoodsUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

BuyAllGoodsUp* BuyAllGoodsUp::default_instance_ = NULL;

BuyAllGoodsUp* BuyAllGoodsUp::New() const {
  return new BuyAllGoodsUp;
}

void BuyAllGoodsUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shoptype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyAllGoodsUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 shopType = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shoptype_)));
          set_has_shoptype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuyAllGoodsUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 shopType = 1;
  if (has_shoptype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shoptype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuyAllGoodsUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 shopType = 1;
  if (has_shoptype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shoptype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuyAllGoodsUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 shopType = 1;
    if (has_shoptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shoptype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyAllGoodsUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyAllGoodsUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyAllGoodsUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyAllGoodsUp::MergeFrom(const BuyAllGoodsUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shoptype()) {
      set_shoptype(from.shoptype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyAllGoodsUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyAllGoodsUp::CopyFrom(const BuyAllGoodsUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyAllGoodsUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuyAllGoodsUp::Swap(BuyAllGoodsUp* other) {
  if (other != this) {
    std::swap(shoptype_, other->shoptype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyAllGoodsUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyAllGoodsUp_descriptor_;
  metadata.reflection = BuyAllGoodsUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyAllGoodsDown::kGoodsIndexFieldNumber;
#endif  // !_MSC_VER

BuyAllGoodsDown::BuyAllGoodsDown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuyAllGoodsDown::InitAsDefaultInstance() {
}

BuyAllGoodsDown::BuyAllGoodsDown(const BuyAllGoodsDown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuyAllGoodsDown::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyAllGoodsDown::~BuyAllGoodsDown() {
  SharedDtor();
}

void BuyAllGoodsDown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyAllGoodsDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyAllGoodsDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyAllGoodsDown_descriptor_;
}

const BuyAllGoodsDown& BuyAllGoodsDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_1100800_5fMatchMessage_2eproto();
  return *default_instance_;
}

BuyAllGoodsDown* BuyAllGoodsDown::default_instance_ = NULL;

BuyAllGoodsDown* BuyAllGoodsDown::New() const {
  return new BuyAllGoodsDown;
}

void BuyAllGoodsDown::Clear() {
  goodsindex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyAllGoodsDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 goodsIndex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goodsIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_goodsindex())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_goodsindex())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_goodsIndex;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuyAllGoodsDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 goodsIndex = 1;
  for (int i = 0; i < this->goodsindex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->goodsindex(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuyAllGoodsDown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 goodsIndex = 1;
  for (int i = 0; i < this->goodsindex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->goodsindex(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuyAllGoodsDown::ByteSize() const {
  int total_size = 0;

  // repeated uint32 goodsIndex = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->goodsindex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->goodsindex(i));
    }
    total_size += 1 * this->goodsindex_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyAllGoodsDown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyAllGoodsDown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyAllGoodsDown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyAllGoodsDown::MergeFrom(const BuyAllGoodsDown& from) {
  GOOGLE_CHECK_NE(&from, this);
  goodsindex_.MergeFrom(from.goodsindex_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyAllGoodsDown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyAllGoodsDown::CopyFrom(const BuyAllGoodsDown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyAllGoodsDown::IsInitialized() const {

  return true;
}

void BuyAllGoodsDown::Swap(BuyAllGoodsDown* other) {
  if (other != this) {
    goodsindex_.Swap(&other->goodsindex_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyAllGoodsDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyAllGoodsDown_descriptor_;
  metadata.reflection = BuyAllGoodsDown_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
