// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: 1100400_EconomyMessage.proto

#ifndef PROTOBUF_1100400_5fEconomyMessage_2eproto__INCLUDED
#define PROTOBUF_1100400_5fEconomyMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_1100400_5fEconomyMessage_2eproto();
void protobuf_AssignDesc_1100400_5fEconomyMessage_2eproto();
void protobuf_ShutdownFile_1100400_5fEconomyMessage_2eproto();

class UserEconomyBean;
class GetUserEconomyUp;
class GetUserEconomyDown;
class ExchangeMoneyUp;

enum EconomyCommondIdEnum {
  _GetUserEconomyUp = 1100401,
  _GetUserEconomyDown = 1100402,
  _ExchangeMoneyUp = 1100403
};
bool EconomyCommondIdEnum_IsValid(int value);
const EconomyCommondIdEnum EconomyCommondIdEnum_MIN = _GetUserEconomyUp;
const EconomyCommondIdEnum EconomyCommondIdEnum_MAX = _ExchangeMoneyUp;
const int EconomyCommondIdEnum_ARRAYSIZE = EconomyCommondIdEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* EconomyCommondIdEnum_descriptor();
inline const ::std::string& EconomyCommondIdEnum_Name(EconomyCommondIdEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    EconomyCommondIdEnum_descriptor(), value);
}
inline bool EconomyCommondIdEnum_Parse(
    const ::std::string& name, EconomyCommondIdEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EconomyCommondIdEnum>(
    EconomyCommondIdEnum_descriptor(), name, value);
}
// ===================================================================

class UserEconomyBean : public ::google::protobuf::Message {
 public:
  UserEconomyBean();
  virtual ~UserEconomyBean();

  UserEconomyBean(const UserEconomyBean& from);

  inline UserEconomyBean& operator=(const UserEconomyBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserEconomyBean& default_instance();

  void Swap(UserEconomyBean* other);

  // implements Message ----------------------------------------------

  UserEconomyBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserEconomyBean& from);
  void MergeFrom(const UserEconomyBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 moneyType = 1;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 moneytype() const;
  inline void set_moneytype(::google::protobuf::uint32 value);

  // required uint32 moneyCount = 2;
  inline bool has_moneycount() const;
  inline void clear_moneycount();
  static const int kMoneyCountFieldNumber = 2;
  inline ::google::protobuf::uint32 moneycount() const;
  inline void set_moneycount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserEconomyBean)
 private:
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_moneycount();
  inline void clear_has_moneycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 moneytype_;
  ::google::protobuf::uint32 moneycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100400_5fEconomyMessage_2eproto();
  friend void protobuf_AssignDesc_1100400_5fEconomyMessage_2eproto();
  friend void protobuf_ShutdownFile_1100400_5fEconomyMessage_2eproto();

  void InitAsDefaultInstance();
  static UserEconomyBean* default_instance_;
};
// -------------------------------------------------------------------

class GetUserEconomyUp : public ::google::protobuf::Message {
 public:
  GetUserEconomyUp();
  virtual ~GetUserEconomyUp();

  GetUserEconomyUp(const GetUserEconomyUp& from);

  inline GetUserEconomyUp& operator=(const GetUserEconomyUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserEconomyUp& default_instance();

  void Swap(GetUserEconomyUp* other);

  // implements Message ----------------------------------------------

  GetUserEconomyUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserEconomyUp& from);
  void MergeFrom(const GetUserEconomyUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GetUserEconomyUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100400_5fEconomyMessage_2eproto();
  friend void protobuf_AssignDesc_1100400_5fEconomyMessage_2eproto();
  friend void protobuf_ShutdownFile_1100400_5fEconomyMessage_2eproto();

  void InitAsDefaultInstance();
  static GetUserEconomyUp* default_instance_;
};
// -------------------------------------------------------------------

class GetUserEconomyDown : public ::google::protobuf::Message {
 public:
  GetUserEconomyDown();
  virtual ~GetUserEconomyDown();

  GetUserEconomyDown(const GetUserEconomyDown& from);

  inline GetUserEconomyDown& operator=(const GetUserEconomyDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserEconomyDown& default_instance();

  void Swap(GetUserEconomyDown* other);

  // implements Message ----------------------------------------------

  GetUserEconomyDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserEconomyDown& from);
  void MergeFrom(const GetUserEconomyDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UserEconomyBean userEconomyBean = 1;
  inline int usereconomybean_size() const;
  inline void clear_usereconomybean();
  static const int kUserEconomyBeanFieldNumber = 1;
  inline const ::UserEconomyBean& usereconomybean(int index) const;
  inline ::UserEconomyBean* mutable_usereconomybean(int index);
  inline ::UserEconomyBean* add_usereconomybean();
  inline const ::google::protobuf::RepeatedPtrField< ::UserEconomyBean >&
      usereconomybean() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserEconomyBean >*
      mutable_usereconomybean();

  // @@protoc_insertion_point(class_scope:GetUserEconomyDown)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::UserEconomyBean > usereconomybean_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100400_5fEconomyMessage_2eproto();
  friend void protobuf_AssignDesc_1100400_5fEconomyMessage_2eproto();
  friend void protobuf_ShutdownFile_1100400_5fEconomyMessage_2eproto();

  void InitAsDefaultInstance();
  static GetUserEconomyDown* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeMoneyUp : public ::google::protobuf::Message {
 public:
  ExchangeMoneyUp();
  virtual ~ExchangeMoneyUp();

  ExchangeMoneyUp(const ExchangeMoneyUp& from);

  inline ExchangeMoneyUp& operator=(const ExchangeMoneyUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeMoneyUp& default_instance();

  void Swap(ExchangeMoneyUp* other);

  // implements Message ----------------------------------------------

  ExchangeMoneyUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeMoneyUp& from);
  void MergeFrom(const ExchangeMoneyUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 exchangeCount = 1;
  inline bool has_exchangecount() const;
  inline void clear_exchangecount();
  static const int kExchangeCountFieldNumber = 1;
  inline ::google::protobuf::uint32 exchangecount() const;
  inline void set_exchangecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ExchangeMoneyUp)
 private:
  inline void set_has_exchangecount();
  inline void clear_has_exchangecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 exchangecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100400_5fEconomyMessage_2eproto();
  friend void protobuf_AssignDesc_1100400_5fEconomyMessage_2eproto();
  friend void protobuf_ShutdownFile_1100400_5fEconomyMessage_2eproto();

  void InitAsDefaultInstance();
  static ExchangeMoneyUp* default_instance_;
};
// ===================================================================


// ===================================================================

// UserEconomyBean

// required uint32 moneyType = 1;
inline bool UserEconomyBean::has_moneytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserEconomyBean::set_has_moneytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserEconomyBean::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserEconomyBean::clear_moneytype() {
  moneytype_ = 0u;
  clear_has_moneytype();
}
inline ::google::protobuf::uint32 UserEconomyBean::moneytype() const {
  return moneytype_;
}
inline void UserEconomyBean::set_moneytype(::google::protobuf::uint32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// required uint32 moneyCount = 2;
inline bool UserEconomyBean::has_moneycount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserEconomyBean::set_has_moneycount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserEconomyBean::clear_has_moneycount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserEconomyBean::clear_moneycount() {
  moneycount_ = 0u;
  clear_has_moneycount();
}
inline ::google::protobuf::uint32 UserEconomyBean::moneycount() const {
  return moneycount_;
}
inline void UserEconomyBean::set_moneycount(::google::protobuf::uint32 value) {
  set_has_moneycount();
  moneycount_ = value;
}

// -------------------------------------------------------------------

// GetUserEconomyUp

// -------------------------------------------------------------------

// GetUserEconomyDown

// repeated .UserEconomyBean userEconomyBean = 1;
inline int GetUserEconomyDown::usereconomybean_size() const {
  return usereconomybean_.size();
}
inline void GetUserEconomyDown::clear_usereconomybean() {
  usereconomybean_.Clear();
}
inline const ::UserEconomyBean& GetUserEconomyDown::usereconomybean(int index) const {
  return usereconomybean_.Get(index);
}
inline ::UserEconomyBean* GetUserEconomyDown::mutable_usereconomybean(int index) {
  return usereconomybean_.Mutable(index);
}
inline ::UserEconomyBean* GetUserEconomyDown::add_usereconomybean() {
  return usereconomybean_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserEconomyBean >&
GetUserEconomyDown::usereconomybean() const {
  return usereconomybean_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserEconomyBean >*
GetUserEconomyDown::mutable_usereconomybean() {
  return &usereconomybean_;
}

// -------------------------------------------------------------------

// ExchangeMoneyUp

// required uint32 exchangeCount = 1;
inline bool ExchangeMoneyUp::has_exchangecount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeMoneyUp::set_has_exchangecount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeMoneyUp::clear_has_exchangecount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeMoneyUp::clear_exchangecount() {
  exchangecount_ = 0u;
  clear_has_exchangecount();
}
inline ::google::protobuf::uint32 ExchangeMoneyUp::exchangecount() const {
  return exchangecount_;
}
inline void ExchangeMoneyUp::set_exchangecount(::google::protobuf::uint32 value) {
  set_has_exchangecount();
  exchangecount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EconomyCommondIdEnum>() {
  return ::EconomyCommondIdEnum_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_1100400_5fEconomyMessage_2eproto__INCLUDED
