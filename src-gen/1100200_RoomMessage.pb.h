// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: 1100200_RoomMessage.proto

#ifndef PROTOBUF_1100200_5fRoomMessage_2eproto__INCLUDED
#define PROTOBUF_1100200_5fRoomMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

class RoomUserInfoBean;
class RoomBaseInfoBean;
class RoomDetailInfoBean;
class BattleInfoBean;
class GetRoomsUp;
class GetRoomsDown;
class CreateRoomUp;
class CreateRoomDown;
class JoinRoomUp;
class JoinRoomDown;
class UserStateChangeDown;
class ReadyUp;
class CancelReadyUp;
class ExitRoomUp;
class MatchupRoomUp;
class CancelMatchupRoomUp;
class MatchupOutTimeDown;
class MatchupSuccessDown;
class GetRoomInfoUp;
class GetRoomInfoDown;
class QuickJoinRoomUp;
class QuickJoinRoomDown;
class KickOutUp;
class FormationInfoBean;
class FightHeroUp;
class MatchupOutTimeUp;
class GetUserRoomUp;
class GetUserRoomDown;

enum RoomCommondIdEnum {
  _GetRoomsUp = 1100201,
  _GetRoomsDown = 1100202,
  _CreateRoomUp = 1100203,
  _CreateRoomDown = 1100204,
  _JoinRoomUp = 1100205,
  _JoinRoomDown = 1100206,
  _UserStateChangeDown = 1100208,
  _ReadyUp = 1100209,
  _CancelReadyUp = 1100211,
  _ExitRoomUp = 1100213,
  _MatchupRoomUp = 1100215,
  _CancelMatchupRoomUp = 11002167,
  _MatchupOutTimeDown = 1100218,
  _MatchupSuccessDown = 1100220,
  _GetRoomInfoUp = 1100221,
  _GetRoomInfoDown = 1100222,
  _QuickJoinRoomUp = 1100223,
  _QuickJoinRoomDown = 1100224,
  _KickOutUp = 1100225,
  _FightHeroUp = 1100227,
  _MatchupOutTimeUp = 1100229,
  _GetUserRoomUp = 1100231,
  _GetUserRoomDown = 1100232
};
bool RoomCommondIdEnum_IsValid(int value);
const RoomCommondIdEnum RoomCommondIdEnum_MIN = _GetRoomsUp;
const RoomCommondIdEnum RoomCommondIdEnum_MAX = _CancelMatchupRoomUp;
const int RoomCommondIdEnum_ARRAYSIZE = RoomCommondIdEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomCommondIdEnum_descriptor();
inline const ::std::string& RoomCommondIdEnum_Name(RoomCommondIdEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomCommondIdEnum_descriptor(), value);
}
inline bool RoomCommondIdEnum_Parse(
    const ::std::string& name, RoomCommondIdEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomCommondIdEnum>(
    RoomCommondIdEnum_descriptor(), name, value);
}
// ===================================================================

class RoomUserInfoBean : public ::google::protobuf::Message {
 public:
  RoomUserInfoBean();
  virtual ~RoomUserInfoBean();

  RoomUserInfoBean(const RoomUserInfoBean& from);

  inline RoomUserInfoBean& operator=(const RoomUserInfoBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomUserInfoBean& default_instance();

  void Swap(RoomUserInfoBean* other);

  // implements Message ----------------------------------------------

  RoomUserInfoBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomUserInfoBean& from);
  void MergeFrom(const RoomUserInfoBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  inline void set_allocated_userid(::std::string* userid);

  // required uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // repeated uint32 heroId = 3;
  inline int heroid_size() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 3;
  inline ::google::protobuf::uint32 heroid(int index) const;
  inline void set_heroid(int index, ::google::protobuf::uint32 value);
  inline void add_heroid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroid();

  // @@protoc_insertion_point(class_scope:RoomUserInfoBean)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* userid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroid_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static RoomUserInfoBean* default_instance_;
};
// -------------------------------------------------------------------

class RoomBaseInfoBean : public ::google::protobuf::Message {
 public:
  RoomBaseInfoBean();
  virtual ~RoomBaseInfoBean();

  RoomBaseInfoBean(const RoomBaseInfoBean& from);

  inline RoomBaseInfoBean& operator=(const RoomBaseInfoBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomBaseInfoBean& default_instance();

  void Swap(RoomBaseInfoBean* other);

  // implements Message ----------------------------------------------

  RoomBaseInfoBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomBaseInfoBean& from);
  void MergeFrom(const RoomBaseInfoBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roomid() const;
  inline void set_roomid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RoomBaseInfoBean)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static RoomBaseInfoBean* default_instance_;
};
// -------------------------------------------------------------------

class RoomDetailInfoBean : public ::google::protobuf::Message {
 public:
  RoomDetailInfoBean();
  virtual ~RoomDetailInfoBean();

  RoomDetailInfoBean(const RoomDetailInfoBean& from);

  inline RoomDetailInfoBean& operator=(const RoomDetailInfoBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomDetailInfoBean& default_instance();

  void Swap(RoomDetailInfoBean* other);

  // implements Message ----------------------------------------------

  RoomDetailInfoBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomDetailInfoBean& from);
  void MergeFrom(const RoomDetailInfoBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roomid() const;
  inline void set_roomid(::google::protobuf::uint32 value);

  // required string masterId = 2;
  inline bool has_masterid() const;
  inline void clear_masterid();
  static const int kMasterIdFieldNumber = 2;
  inline const ::std::string& masterid() const;
  inline void set_masterid(const ::std::string& value);
  inline void set_masterid(const char* value);
  inline void set_masterid(const char* value, size_t size);
  inline ::std::string* mutable_masterid();
  inline ::std::string* release_masterid();
  inline void set_allocated_masterid(::std::string* masterid);

  // required uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // repeated .RoomUserInfoBean roomUserInfoBean = 4;
  inline int roomuserinfobean_size() const;
  inline void clear_roomuserinfobean();
  static const int kRoomUserInfoBeanFieldNumber = 4;
  inline const ::RoomUserInfoBean& roomuserinfobean(int index) const;
  inline ::RoomUserInfoBean* mutable_roomuserinfobean(int index);
  inline ::RoomUserInfoBean* add_roomuserinfobean();
  inline const ::google::protobuf::RepeatedPtrField< ::RoomUserInfoBean >&
      roomuserinfobean() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoomUserInfoBean >*
      mutable_roomuserinfobean();

  // optional .BattleInfoBean battleInfoBean = 5;
  inline bool has_battleinfobean() const;
  inline void clear_battleinfobean();
  static const int kBattleInfoBeanFieldNumber = 5;
  inline const ::BattleInfoBean& battleinfobean() const;
  inline ::BattleInfoBean* mutable_battleinfobean();
  inline ::BattleInfoBean* release_battleinfobean();
  inline void set_allocated_battleinfobean(::BattleInfoBean* battleinfobean);

  // @@protoc_insertion_point(class_scope:RoomDetailInfoBean)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_masterid();
  inline void clear_has_masterid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_battleinfobean();
  inline void clear_has_battleinfobean();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* masterid_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::RepeatedPtrField< ::RoomUserInfoBean > roomuserinfobean_;
  ::BattleInfoBean* battleinfobean_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static RoomDetailInfoBean* default_instance_;
};
// -------------------------------------------------------------------

class BattleInfoBean : public ::google::protobuf::Message {
 public:
  BattleInfoBean();
  virtual ~BattleInfoBean();

  BattleInfoBean(const BattleInfoBean& from);

  inline BattleInfoBean& operator=(const BattleInfoBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleInfoBean& default_instance();

  void Swap(BattleInfoBean* other);

  // implements Message ----------------------------------------------

  BattleInfoBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleInfoBean& from);
  void MergeFrom(const BattleInfoBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // required uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // required string battleId = 3;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIdFieldNumber = 3;
  inline const ::std::string& battleid() const;
  inline void set_battleid(const ::std::string& value);
  inline void set_battleid(const char* value);
  inline void set_battleid(const char* value, size_t size);
  inline ::std::string* mutable_battleid();
  inline ::std::string* release_battleid();
  inline void set_allocated_battleid(::std::string* battleid);

  // required uint32 attackRoomid = 4;
  inline bool has_attackroomid() const;
  inline void clear_attackroomid();
  static const int kAttackRoomidFieldNumber = 4;
  inline ::google::protobuf::uint32 attackroomid() const;
  inline void set_attackroomid(::google::protobuf::uint32 value);

  // required uint32 defineRoomid = 5;
  inline bool has_defineroomid() const;
  inline void clear_defineroomid();
  static const int kDefineRoomidFieldNumber = 5;
  inline ::google::protobuf::uint32 defineroomid() const;
  inline void set_defineroomid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BattleInfoBean)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_attackroomid();
  inline void clear_has_attackroomid();
  inline void set_has_defineroomid();
  inline void clear_has_defineroomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ip_;
  ::std::string* battleid_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 attackroomid_;
  ::google::protobuf::uint32 defineroomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static BattleInfoBean* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomsUp : public ::google::protobuf::Message {
 public:
  GetRoomsUp();
  virtual ~GetRoomsUp();

  GetRoomsUp(const GetRoomsUp& from);

  inline GetRoomsUp& operator=(const GetRoomsUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomsUp& default_instance();

  void Swap(GetRoomsUp* other);

  // implements Message ----------------------------------------------

  GetRoomsUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomsUp& from);
  void MergeFrom(const GetRoomsUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GetRoomsUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static GetRoomsUp* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomsDown : public ::google::protobuf::Message {
 public:
  GetRoomsDown();
  virtual ~GetRoomsDown();

  GetRoomsDown(const GetRoomsDown& from);

  inline GetRoomsDown& operator=(const GetRoomsDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomsDown& default_instance();

  void Swap(GetRoomsDown* other);

  // implements Message ----------------------------------------------

  GetRoomsDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomsDown& from);
  void MergeFrom(const GetRoomsDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RoomBaseInfoBean roomBaseInfoBean = 1;
  inline int roombaseinfobean_size() const;
  inline void clear_roombaseinfobean();
  static const int kRoomBaseInfoBeanFieldNumber = 1;
  inline const ::RoomBaseInfoBean& roombaseinfobean(int index) const;
  inline ::RoomBaseInfoBean* mutable_roombaseinfobean(int index);
  inline ::RoomBaseInfoBean* add_roombaseinfobean();
  inline const ::google::protobuf::RepeatedPtrField< ::RoomBaseInfoBean >&
      roombaseinfobean() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoomBaseInfoBean >*
      mutable_roombaseinfobean();

  // @@protoc_insertion_point(class_scope:GetRoomsDown)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RoomBaseInfoBean > roombaseinfobean_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static GetRoomsDown* default_instance_;
};
// -------------------------------------------------------------------

class CreateRoomUp : public ::google::protobuf::Message {
 public:
  CreateRoomUp();
  virtual ~CreateRoomUp();

  CreateRoomUp(const CreateRoomUp& from);

  inline CreateRoomUp& operator=(const CreateRoomUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomUp& default_instance();

  void Swap(CreateRoomUp* other);

  // implements Message ----------------------------------------------

  CreateRoomUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRoomUp& from);
  void MergeFrom(const CreateRoomUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 battleKeyId = 1;
  inline bool has_battlekeyid() const;
  inline void clear_battlekeyid();
  static const int kBattleKeyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 battlekeyid() const;
  inline void set_battlekeyid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CreateRoomUp)
 private:
  inline void set_has_battlekeyid();
  inline void clear_has_battlekeyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 battlekeyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static CreateRoomUp* default_instance_;
};
// -------------------------------------------------------------------

class CreateRoomDown : public ::google::protobuf::Message {
 public:
  CreateRoomDown();
  virtual ~CreateRoomDown();

  CreateRoomDown(const CreateRoomDown& from);

  inline CreateRoomDown& operator=(const CreateRoomDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomDown& default_instance();

  void Swap(CreateRoomDown* other);

  // implements Message ----------------------------------------------

  CreateRoomDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRoomDown& from);
  void MergeFrom(const CreateRoomDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roomid() const;
  inline void set_roomid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CreateRoomDown)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static CreateRoomDown* default_instance_;
};
// -------------------------------------------------------------------

class JoinRoomUp : public ::google::protobuf::Message {
 public:
  JoinRoomUp();
  virtual ~JoinRoomUp();

  JoinRoomUp(const JoinRoomUp& from);

  inline JoinRoomUp& operator=(const JoinRoomUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomUp& default_instance();

  void Swap(JoinRoomUp* other);

  // implements Message ----------------------------------------------

  JoinRoomUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinRoomUp& from);
  void MergeFrom(const JoinRoomUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 roomId = 1;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roomid() const;
  inline void set_roomid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:JoinRoomUp)
 private:
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static JoinRoomUp* default_instance_;
};
// -------------------------------------------------------------------

class JoinRoomDown : public ::google::protobuf::Message {
 public:
  JoinRoomDown();
  virtual ~JoinRoomDown();

  JoinRoomDown(const JoinRoomDown& from);

  inline JoinRoomDown& operator=(const JoinRoomDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomDown& default_instance();

  void Swap(JoinRoomDown* other);

  // implements Message ----------------------------------------------

  JoinRoomDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinRoomDown& from);
  void MergeFrom(const JoinRoomDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isSuccess = 1;
  inline bool has_issuccess() const;
  inline void clear_issuccess();
  static const int kIsSuccessFieldNumber = 1;
  inline bool issuccess() const;
  inline void set_issuccess(bool value);

  // optional .RoomDetailInfoBean roomDetailInfoBean = 2;
  inline bool has_roomdetailinfobean() const;
  inline void clear_roomdetailinfobean();
  static const int kRoomDetailInfoBeanFieldNumber = 2;
  inline const ::RoomDetailInfoBean& roomdetailinfobean() const;
  inline ::RoomDetailInfoBean* mutable_roomdetailinfobean();
  inline ::RoomDetailInfoBean* release_roomdetailinfobean();
  inline void set_allocated_roomdetailinfobean(::RoomDetailInfoBean* roomdetailinfobean);

  // @@protoc_insertion_point(class_scope:JoinRoomDown)
 private:
  inline void set_has_issuccess();
  inline void clear_has_issuccess();
  inline void set_has_roomdetailinfobean();
  inline void clear_has_roomdetailinfobean();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoomDetailInfoBean* roomdetailinfobean_;
  bool issuccess_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static JoinRoomDown* default_instance_;
};
// -------------------------------------------------------------------

class UserStateChangeDown : public ::google::protobuf::Message {
 public:
  UserStateChangeDown();
  virtual ~UserStateChangeDown();

  UserStateChangeDown(const UserStateChangeDown& from);

  inline UserStateChangeDown& operator=(const UserStateChangeDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserStateChangeDown& default_instance();

  void Swap(UserStateChangeDown* other);

  // implements Message ----------------------------------------------

  UserStateChangeDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserStateChangeDown& from);
  void MergeFrom(const UserStateChangeDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  inline void set_allocated_userid(::std::string* userid);

  // required uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserStateChangeDown)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* userid_;
  ::google::protobuf::uint32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static UserStateChangeDown* default_instance_;
};
// -------------------------------------------------------------------

class ReadyUp : public ::google::protobuf::Message {
 public:
  ReadyUp();
  virtual ~ReadyUp();

  ReadyUp(const ReadyUp& from);

  inline ReadyUp& operator=(const ReadyUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadyUp& default_instance();

  void Swap(ReadyUp* other);

  // implements Message ----------------------------------------------

  ReadyUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadyUp& from);
  void MergeFrom(const ReadyUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ReadyUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static ReadyUp* default_instance_;
};
// -------------------------------------------------------------------

class CancelReadyUp : public ::google::protobuf::Message {
 public:
  CancelReadyUp();
  virtual ~CancelReadyUp();

  CancelReadyUp(const CancelReadyUp& from);

  inline CancelReadyUp& operator=(const CancelReadyUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelReadyUp& default_instance();

  void Swap(CancelReadyUp* other);

  // implements Message ----------------------------------------------

  CancelReadyUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelReadyUp& from);
  void MergeFrom(const CancelReadyUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CancelReadyUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static CancelReadyUp* default_instance_;
};
// -------------------------------------------------------------------

class ExitRoomUp : public ::google::protobuf::Message {
 public:
  ExitRoomUp();
  virtual ~ExitRoomUp();

  ExitRoomUp(const ExitRoomUp& from);

  inline ExitRoomUp& operator=(const ExitRoomUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitRoomUp& default_instance();

  void Swap(ExitRoomUp* other);

  // implements Message ----------------------------------------------

  ExitRoomUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitRoomUp& from);
  void MergeFrom(const ExitRoomUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ExitRoomUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static ExitRoomUp* default_instance_;
};
// -------------------------------------------------------------------

class MatchupRoomUp : public ::google::protobuf::Message {
 public:
  MatchupRoomUp();
  virtual ~MatchupRoomUp();

  MatchupRoomUp(const MatchupRoomUp& from);

  inline MatchupRoomUp& operator=(const MatchupRoomUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchupRoomUp& default_instance();

  void Swap(MatchupRoomUp* other);

  // implements Message ----------------------------------------------

  MatchupRoomUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchupRoomUp& from);
  void MergeFrom(const MatchupRoomUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MatchupRoomUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static MatchupRoomUp* default_instance_;
};
// -------------------------------------------------------------------

class CancelMatchupRoomUp : public ::google::protobuf::Message {
 public:
  CancelMatchupRoomUp();
  virtual ~CancelMatchupRoomUp();

  CancelMatchupRoomUp(const CancelMatchupRoomUp& from);

  inline CancelMatchupRoomUp& operator=(const CancelMatchupRoomUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelMatchupRoomUp& default_instance();

  void Swap(CancelMatchupRoomUp* other);

  // implements Message ----------------------------------------------

  CancelMatchupRoomUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelMatchupRoomUp& from);
  void MergeFrom(const CancelMatchupRoomUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CancelMatchupRoomUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static CancelMatchupRoomUp* default_instance_;
};
// -------------------------------------------------------------------

class MatchupOutTimeDown : public ::google::protobuf::Message {
 public:
  MatchupOutTimeDown();
  virtual ~MatchupOutTimeDown();

  MatchupOutTimeDown(const MatchupOutTimeDown& from);

  inline MatchupOutTimeDown& operator=(const MatchupOutTimeDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchupOutTimeDown& default_instance();

  void Swap(MatchupOutTimeDown* other);

  // implements Message ----------------------------------------------

  MatchupOutTimeDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchupOutTimeDown& from);
  void MergeFrom(const MatchupOutTimeDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MatchupOutTimeDown)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static MatchupOutTimeDown* default_instance_;
};
// -------------------------------------------------------------------

class MatchupSuccessDown : public ::google::protobuf::Message {
 public:
  MatchupSuccessDown();
  virtual ~MatchupSuccessDown();

  MatchupSuccessDown(const MatchupSuccessDown& from);

  inline MatchupSuccessDown& operator=(const MatchupSuccessDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchupSuccessDown& default_instance();

  void Swap(MatchupSuccessDown* other);

  // implements Message ----------------------------------------------

  MatchupSuccessDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchupSuccessDown& from);
  void MergeFrom(const MatchupSuccessDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .BattleInfoBean battleInfoBean = 1;
  inline bool has_battleinfobean() const;
  inline void clear_battleinfobean();
  static const int kBattleInfoBeanFieldNumber = 1;
  inline const ::BattleInfoBean& battleinfobean() const;
  inline ::BattleInfoBean* mutable_battleinfobean();
  inline ::BattleInfoBean* release_battleinfobean();
  inline void set_allocated_battleinfobean(::BattleInfoBean* battleinfobean);

  // @@protoc_insertion_point(class_scope:MatchupSuccessDown)
 private:
  inline void set_has_battleinfobean();
  inline void clear_has_battleinfobean();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BattleInfoBean* battleinfobean_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static MatchupSuccessDown* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomInfoUp : public ::google::protobuf::Message {
 public:
  GetRoomInfoUp();
  virtual ~GetRoomInfoUp();

  GetRoomInfoUp(const GetRoomInfoUp& from);

  inline GetRoomInfoUp& operator=(const GetRoomInfoUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomInfoUp& default_instance();

  void Swap(GetRoomInfoUp* other);

  // implements Message ----------------------------------------------

  GetRoomInfoUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomInfoUp& from);
  void MergeFrom(const GetRoomInfoUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rid = 1;
  inline bool has_rid() const;
  inline void clear_rid();
  static const int kRidFieldNumber = 1;
  inline ::google::protobuf::uint32 rid() const;
  inline void set_rid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GetRoomInfoUp)
 private:
  inline void set_has_rid();
  inline void clear_has_rid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 rid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static GetRoomInfoUp* default_instance_;
};
// -------------------------------------------------------------------

class GetRoomInfoDown : public ::google::protobuf::Message {
 public:
  GetRoomInfoDown();
  virtual ~GetRoomInfoDown();

  GetRoomInfoDown(const GetRoomInfoDown& from);

  inline GetRoomInfoDown& operator=(const GetRoomInfoDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomInfoDown& default_instance();

  void Swap(GetRoomInfoDown* other);

  // implements Message ----------------------------------------------

  GetRoomInfoDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRoomInfoDown& from);
  void MergeFrom(const GetRoomInfoDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .RoomDetailInfoBean roomDetailInfoBean = 1;
  inline bool has_roomdetailinfobean() const;
  inline void clear_roomdetailinfobean();
  static const int kRoomDetailInfoBeanFieldNumber = 1;
  inline const ::RoomDetailInfoBean& roomdetailinfobean() const;
  inline ::RoomDetailInfoBean* mutable_roomdetailinfobean();
  inline ::RoomDetailInfoBean* release_roomdetailinfobean();
  inline void set_allocated_roomdetailinfobean(::RoomDetailInfoBean* roomdetailinfobean);

  // @@protoc_insertion_point(class_scope:GetRoomInfoDown)
 private:
  inline void set_has_roomdetailinfobean();
  inline void clear_has_roomdetailinfobean();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoomDetailInfoBean* roomdetailinfobean_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static GetRoomInfoDown* default_instance_;
};
// -------------------------------------------------------------------

class QuickJoinRoomUp : public ::google::protobuf::Message {
 public:
  QuickJoinRoomUp();
  virtual ~QuickJoinRoomUp();

  QuickJoinRoomUp(const QuickJoinRoomUp& from);

  inline QuickJoinRoomUp& operator=(const QuickJoinRoomUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuickJoinRoomUp& default_instance();

  void Swap(QuickJoinRoomUp* other);

  // implements Message ----------------------------------------------

  QuickJoinRoomUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuickJoinRoomUp& from);
  void MergeFrom(const QuickJoinRoomUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:QuickJoinRoomUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static QuickJoinRoomUp* default_instance_;
};
// -------------------------------------------------------------------

class QuickJoinRoomDown : public ::google::protobuf::Message {
 public:
  QuickJoinRoomDown();
  virtual ~QuickJoinRoomDown();

  QuickJoinRoomDown(const QuickJoinRoomDown& from);

  inline QuickJoinRoomDown& operator=(const QuickJoinRoomDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuickJoinRoomDown& default_instance();

  void Swap(QuickJoinRoomDown* other);

  // implements Message ----------------------------------------------

  QuickJoinRoomDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuickJoinRoomDown& from);
  void MergeFrom(const QuickJoinRoomDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .RoomDetailInfoBean roomDetailInfoBean = 1;
  inline bool has_roomdetailinfobean() const;
  inline void clear_roomdetailinfobean();
  static const int kRoomDetailInfoBeanFieldNumber = 1;
  inline const ::RoomDetailInfoBean& roomdetailinfobean() const;
  inline ::RoomDetailInfoBean* mutable_roomdetailinfobean();
  inline ::RoomDetailInfoBean* release_roomdetailinfobean();
  inline void set_allocated_roomdetailinfobean(::RoomDetailInfoBean* roomdetailinfobean);

  // @@protoc_insertion_point(class_scope:QuickJoinRoomDown)
 private:
  inline void set_has_roomdetailinfobean();
  inline void clear_has_roomdetailinfobean();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoomDetailInfoBean* roomdetailinfobean_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static QuickJoinRoomDown* default_instance_;
};
// -------------------------------------------------------------------

class KickOutUp : public ::google::protobuf::Message {
 public:
  KickOutUp();
  virtual ~KickOutUp();

  KickOutUp(const KickOutUp& from);

  inline KickOutUp& operator=(const KickOutUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KickOutUp& default_instance();

  void Swap(KickOutUp* other);

  // implements Message ----------------------------------------------

  KickOutUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KickOutUp& from);
  void MergeFrom(const KickOutUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string kickOutUserId = 1;
  inline bool has_kickoutuserid() const;
  inline void clear_kickoutuserid();
  static const int kKickOutUserIdFieldNumber = 1;
  inline const ::std::string& kickoutuserid() const;
  inline void set_kickoutuserid(const ::std::string& value);
  inline void set_kickoutuserid(const char* value);
  inline void set_kickoutuserid(const char* value, size_t size);
  inline ::std::string* mutable_kickoutuserid();
  inline ::std::string* release_kickoutuserid();
  inline void set_allocated_kickoutuserid(::std::string* kickoutuserid);

  // @@protoc_insertion_point(class_scope:KickOutUp)
 private:
  inline void set_has_kickoutuserid();
  inline void clear_has_kickoutuserid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* kickoutuserid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static KickOutUp* default_instance_;
};
// -------------------------------------------------------------------

class FormationInfoBean : public ::google::protobuf::Message {
 public:
  FormationInfoBean();
  virtual ~FormationInfoBean();

  FormationInfoBean(const FormationInfoBean& from);

  inline FormationInfoBean& operator=(const FormationInfoBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FormationInfoBean& default_instance();

  void Swap(FormationInfoBean* other);

  // implements Message ----------------------------------------------

  FormationInfoBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FormationInfoBean& from);
  void MergeFrom(const FormationInfoBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 heroId = 1;
  inline bool has_heroid() const;
  inline void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 heroid() const;
  inline void set_heroid(::google::protobuf::uint32 value);

  // required uint32 retinueId = 2;
  inline bool has_retinueid() const;
  inline void clear_retinueid();
  static const int kRetinueIdFieldNumber = 2;
  inline ::google::protobuf::uint32 retinueid() const;
  inline void set_retinueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FormationInfoBean)
 private:
  inline void set_has_heroid();
  inline void clear_has_heroid();
  inline void set_has_retinueid();
  inline void clear_has_retinueid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 retinueid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static FormationInfoBean* default_instance_;
};
// -------------------------------------------------------------------

class FightHeroUp : public ::google::protobuf::Message {
 public:
  FightHeroUp();
  virtual ~FightHeroUp();

  FightHeroUp(const FightHeroUp& from);

  inline FightHeroUp& operator=(const FightHeroUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightHeroUp& default_instance();

  void Swap(FightHeroUp* other);

  // implements Message ----------------------------------------------

  FightHeroUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightHeroUp& from);
  void MergeFrom(const FightHeroUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FormationInfoBean formationInfoBean = 1;
  inline int formationinfobean_size() const;
  inline void clear_formationinfobean();
  static const int kFormationInfoBeanFieldNumber = 1;
  inline const ::FormationInfoBean& formationinfobean(int index) const;
  inline ::FormationInfoBean* mutable_formationinfobean(int index);
  inline ::FormationInfoBean* add_formationinfobean();
  inline const ::google::protobuf::RepeatedPtrField< ::FormationInfoBean >&
      formationinfobean() const;
  inline ::google::protobuf::RepeatedPtrField< ::FormationInfoBean >*
      mutable_formationinfobean();

  // @@protoc_insertion_point(class_scope:FightHeroUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::FormationInfoBean > formationinfobean_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static FightHeroUp* default_instance_;
};
// -------------------------------------------------------------------

class MatchupOutTimeUp : public ::google::protobuf::Message {
 public:
  MatchupOutTimeUp();
  virtual ~MatchupOutTimeUp();

  MatchupOutTimeUp(const MatchupOutTimeUp& from);

  inline MatchupOutTimeUp& operator=(const MatchupOutTimeUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchupOutTimeUp& default_instance();

  void Swap(MatchupOutTimeUp* other);

  // implements Message ----------------------------------------------

  MatchupOutTimeUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchupOutTimeUp& from);
  void MergeFrom(const MatchupOutTimeUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MatchupOutTimeUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static MatchupOutTimeUp* default_instance_;
};
// -------------------------------------------------------------------

class GetUserRoomUp : public ::google::protobuf::Message {
 public:
  GetUserRoomUp();
  virtual ~GetUserRoomUp();

  GetUserRoomUp(const GetUserRoomUp& from);

  inline GetUserRoomUp& operator=(const GetUserRoomUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserRoomUp& default_instance();

  void Swap(GetUserRoomUp* other);

  // implements Message ----------------------------------------------

  GetUserRoomUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserRoomUp& from);
  void MergeFrom(const GetUserRoomUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GetUserRoomUp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static GetUserRoomUp* default_instance_;
};
// -------------------------------------------------------------------

class GetUserRoomDown : public ::google::protobuf::Message {
 public:
  GetUserRoomDown();
  virtual ~GetUserRoomDown();

  GetUserRoomDown(const GetUserRoomDown& from);

  inline GetUserRoomDown& operator=(const GetUserRoomDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserRoomDown& default_instance();

  void Swap(GetUserRoomDown* other);

  // implements Message ----------------------------------------------

  GetUserRoomDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserRoomDown& from);
  void MergeFrom(const GetUserRoomDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isRoom = 1;
  inline bool has_isroom() const;
  inline void clear_isroom();
  static const int kIsRoomFieldNumber = 1;
  inline bool isroom() const;
  inline void set_isroom(bool value);

  // optional .RoomDetailInfoBean roomDetailInfoBean = 2;
  inline bool has_roomdetailinfobean() const;
  inline void clear_roomdetailinfobean();
  static const int kRoomDetailInfoBeanFieldNumber = 2;
  inline const ::RoomDetailInfoBean& roomdetailinfobean() const;
  inline ::RoomDetailInfoBean* mutable_roomdetailinfobean();
  inline ::RoomDetailInfoBean* release_roomdetailinfobean();
  inline void set_allocated_roomdetailinfobean(::RoomDetailInfoBean* roomdetailinfobean);

  // @@protoc_insertion_point(class_scope:GetUserRoomDown)
 private:
  inline void set_has_isroom();
  inline void clear_has_isroom();
  inline void set_has_roomdetailinfobean();
  inline void clear_has_roomdetailinfobean();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoomDetailInfoBean* roomdetailinfobean_;
  bool isroom_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_AssignDesc_1100200_5fRoomMessage_2eproto();
  friend void protobuf_ShutdownFile_1100200_5fRoomMessage_2eproto();

  void InitAsDefaultInstance();
  static GetUserRoomDown* default_instance_;
};
// ===================================================================


// ===================================================================

// RoomUserInfoBean

// required string userId = 1;
inline bool RoomUserInfoBean::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomUserInfoBean::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomUserInfoBean::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomUserInfoBean::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& RoomUserInfoBean::userid() const {
  return *userid_;
}
inline void RoomUserInfoBean::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void RoomUserInfoBean::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void RoomUserInfoBean::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoomUserInfoBean::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* RoomUserInfoBean::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoomUserInfoBean::set_allocated_userid(::std::string* userid) {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (userid) {
    set_has_userid();
    userid_ = userid;
  } else {
    clear_has_userid();
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 state = 2;
inline bool RoomUserInfoBean::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomUserInfoBean::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomUserInfoBean::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomUserInfoBean::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 RoomUserInfoBean::state() const {
  return state_;
}
inline void RoomUserInfoBean::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// repeated uint32 heroId = 3;
inline int RoomUserInfoBean::heroid_size() const {
  return heroid_.size();
}
inline void RoomUserInfoBean::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint32 RoomUserInfoBean::heroid(int index) const {
  return heroid_.Get(index);
}
inline void RoomUserInfoBean::set_heroid(int index, ::google::protobuf::uint32 value) {
  heroid_.Set(index, value);
}
inline void RoomUserInfoBean::add_heroid(::google::protobuf::uint32 value) {
  heroid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoomUserInfoBean::heroid() const {
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoomUserInfoBean::mutable_heroid() {
  return &heroid_;
}

// -------------------------------------------------------------------

// RoomBaseInfoBean

// required uint32 roomId = 1;
inline bool RoomBaseInfoBean::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomBaseInfoBean::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomBaseInfoBean::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomBaseInfoBean::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 RoomBaseInfoBean::roomid() const {
  return roomid_;
}
inline void RoomBaseInfoBean::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// RoomDetailInfoBean

// required uint32 roomId = 1;
inline bool RoomDetailInfoBean::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomDetailInfoBean::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomDetailInfoBean::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomDetailInfoBean::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 RoomDetailInfoBean::roomid() const {
  return roomid_;
}
inline void RoomDetailInfoBean::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
}

// required string masterId = 2;
inline bool RoomDetailInfoBean::has_masterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomDetailInfoBean::set_has_masterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomDetailInfoBean::clear_has_masterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomDetailInfoBean::clear_masterid() {
  if (masterid_ != &::google::protobuf::internal::kEmptyString) {
    masterid_->clear();
  }
  clear_has_masterid();
}
inline const ::std::string& RoomDetailInfoBean::masterid() const {
  return *masterid_;
}
inline void RoomDetailInfoBean::set_masterid(const ::std::string& value) {
  set_has_masterid();
  if (masterid_ == &::google::protobuf::internal::kEmptyString) {
    masterid_ = new ::std::string;
  }
  masterid_->assign(value);
}
inline void RoomDetailInfoBean::set_masterid(const char* value) {
  set_has_masterid();
  if (masterid_ == &::google::protobuf::internal::kEmptyString) {
    masterid_ = new ::std::string;
  }
  masterid_->assign(value);
}
inline void RoomDetailInfoBean::set_masterid(const char* value, size_t size) {
  set_has_masterid();
  if (masterid_ == &::google::protobuf::internal::kEmptyString) {
    masterid_ = new ::std::string;
  }
  masterid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoomDetailInfoBean::mutable_masterid() {
  set_has_masterid();
  if (masterid_ == &::google::protobuf::internal::kEmptyString) {
    masterid_ = new ::std::string;
  }
  return masterid_;
}
inline ::std::string* RoomDetailInfoBean::release_masterid() {
  clear_has_masterid();
  if (masterid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = masterid_;
    masterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoomDetailInfoBean::set_allocated_masterid(::std::string* masterid) {
  if (masterid_ != &::google::protobuf::internal::kEmptyString) {
    delete masterid_;
  }
  if (masterid) {
    set_has_masterid();
    masterid_ = masterid;
  } else {
    clear_has_masterid();
    masterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 state = 3;
inline bool RoomDetailInfoBean::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomDetailInfoBean::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomDetailInfoBean::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomDetailInfoBean::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 RoomDetailInfoBean::state() const {
  return state_;
}
inline void RoomDetailInfoBean::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// repeated .RoomUserInfoBean roomUserInfoBean = 4;
inline int RoomDetailInfoBean::roomuserinfobean_size() const {
  return roomuserinfobean_.size();
}
inline void RoomDetailInfoBean::clear_roomuserinfobean() {
  roomuserinfobean_.Clear();
}
inline const ::RoomUserInfoBean& RoomDetailInfoBean::roomuserinfobean(int index) const {
  return roomuserinfobean_.Get(index);
}
inline ::RoomUserInfoBean* RoomDetailInfoBean::mutable_roomuserinfobean(int index) {
  return roomuserinfobean_.Mutable(index);
}
inline ::RoomUserInfoBean* RoomDetailInfoBean::add_roomuserinfobean() {
  return roomuserinfobean_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoomUserInfoBean >&
RoomDetailInfoBean::roomuserinfobean() const {
  return roomuserinfobean_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoomUserInfoBean >*
RoomDetailInfoBean::mutable_roomuserinfobean() {
  return &roomuserinfobean_;
}

// optional .BattleInfoBean battleInfoBean = 5;
inline bool RoomDetailInfoBean::has_battleinfobean() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomDetailInfoBean::set_has_battleinfobean() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomDetailInfoBean::clear_has_battleinfobean() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomDetailInfoBean::clear_battleinfobean() {
  if (battleinfobean_ != NULL) battleinfobean_->::BattleInfoBean::Clear();
  clear_has_battleinfobean();
}
inline const ::BattleInfoBean& RoomDetailInfoBean::battleinfobean() const {
  return battleinfobean_ != NULL ? *battleinfobean_ : *default_instance_->battleinfobean_;
}
inline ::BattleInfoBean* RoomDetailInfoBean::mutable_battleinfobean() {
  set_has_battleinfobean();
  if (battleinfobean_ == NULL) battleinfobean_ = new ::BattleInfoBean;
  return battleinfobean_;
}
inline ::BattleInfoBean* RoomDetailInfoBean::release_battleinfobean() {
  clear_has_battleinfobean();
  ::BattleInfoBean* temp = battleinfobean_;
  battleinfobean_ = NULL;
  return temp;
}
inline void RoomDetailInfoBean::set_allocated_battleinfobean(::BattleInfoBean* battleinfobean) {
  delete battleinfobean_;
  battleinfobean_ = battleinfobean;
  if (battleinfobean) {
    set_has_battleinfobean();
  } else {
    clear_has_battleinfobean();
  }
}

// -------------------------------------------------------------------

// BattleInfoBean

// required string ip = 1;
inline bool BattleInfoBean::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleInfoBean::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleInfoBean::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleInfoBean::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& BattleInfoBean::ip() const {
  return *ip_;
}
inline void BattleInfoBean::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void BattleInfoBean::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void BattleInfoBean::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleInfoBean::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* BattleInfoBean::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleInfoBean::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 port = 2;
inline bool BattleInfoBean::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleInfoBean::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleInfoBean::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleInfoBean::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 BattleInfoBean::port() const {
  return port_;
}
inline void BattleInfoBean::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// required string battleId = 3;
inline bool BattleInfoBean::has_battleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleInfoBean::set_has_battleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleInfoBean::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleInfoBean::clear_battleid() {
  if (battleid_ != &::google::protobuf::internal::kEmptyString) {
    battleid_->clear();
  }
  clear_has_battleid();
}
inline const ::std::string& BattleInfoBean::battleid() const {
  return *battleid_;
}
inline void BattleInfoBean::set_battleid(const ::std::string& value) {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  battleid_->assign(value);
}
inline void BattleInfoBean::set_battleid(const char* value) {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  battleid_->assign(value);
}
inline void BattleInfoBean::set_battleid(const char* value, size_t size) {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  battleid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleInfoBean::mutable_battleid() {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  return battleid_;
}
inline ::std::string* BattleInfoBean::release_battleid() {
  clear_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = battleid_;
    battleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleInfoBean::set_allocated_battleid(::std::string* battleid) {
  if (battleid_ != &::google::protobuf::internal::kEmptyString) {
    delete battleid_;
  }
  if (battleid) {
    set_has_battleid();
    battleid_ = battleid;
  } else {
    clear_has_battleid();
    battleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 attackRoomid = 4;
inline bool BattleInfoBean::has_attackroomid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleInfoBean::set_has_attackroomid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleInfoBean::clear_has_attackroomid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleInfoBean::clear_attackroomid() {
  attackroomid_ = 0u;
  clear_has_attackroomid();
}
inline ::google::protobuf::uint32 BattleInfoBean::attackroomid() const {
  return attackroomid_;
}
inline void BattleInfoBean::set_attackroomid(::google::protobuf::uint32 value) {
  set_has_attackroomid();
  attackroomid_ = value;
}

// required uint32 defineRoomid = 5;
inline bool BattleInfoBean::has_defineroomid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleInfoBean::set_has_defineroomid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleInfoBean::clear_has_defineroomid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleInfoBean::clear_defineroomid() {
  defineroomid_ = 0u;
  clear_has_defineroomid();
}
inline ::google::protobuf::uint32 BattleInfoBean::defineroomid() const {
  return defineroomid_;
}
inline void BattleInfoBean::set_defineroomid(::google::protobuf::uint32 value) {
  set_has_defineroomid();
  defineroomid_ = value;
}

// -------------------------------------------------------------------

// GetRoomsUp

// -------------------------------------------------------------------

// GetRoomsDown

// repeated .RoomBaseInfoBean roomBaseInfoBean = 1;
inline int GetRoomsDown::roombaseinfobean_size() const {
  return roombaseinfobean_.size();
}
inline void GetRoomsDown::clear_roombaseinfobean() {
  roombaseinfobean_.Clear();
}
inline const ::RoomBaseInfoBean& GetRoomsDown::roombaseinfobean(int index) const {
  return roombaseinfobean_.Get(index);
}
inline ::RoomBaseInfoBean* GetRoomsDown::mutable_roombaseinfobean(int index) {
  return roombaseinfobean_.Mutable(index);
}
inline ::RoomBaseInfoBean* GetRoomsDown::add_roombaseinfobean() {
  return roombaseinfobean_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoomBaseInfoBean >&
GetRoomsDown::roombaseinfobean() const {
  return roombaseinfobean_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoomBaseInfoBean >*
GetRoomsDown::mutable_roombaseinfobean() {
  return &roombaseinfobean_;
}

// -------------------------------------------------------------------

// CreateRoomUp

// required uint32 battleKeyId = 1;
inline bool CreateRoomUp::has_battlekeyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomUp::set_has_battlekeyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomUp::clear_has_battlekeyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomUp::clear_battlekeyid() {
  battlekeyid_ = 0u;
  clear_has_battlekeyid();
}
inline ::google::protobuf::uint32 CreateRoomUp::battlekeyid() const {
  return battlekeyid_;
}
inline void CreateRoomUp::set_battlekeyid(::google::protobuf::uint32 value) {
  set_has_battlekeyid();
  battlekeyid_ = value;
}

// -------------------------------------------------------------------

// CreateRoomDown

// required uint32 roomId = 1;
inline bool CreateRoomDown::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomDown::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomDown::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomDown::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 CreateRoomDown::roomid() const {
  return roomid_;
}
inline void CreateRoomDown::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// JoinRoomUp

// required uint32 roomId = 1;
inline bool JoinRoomUp::has_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomUp::set_has_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomUp::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomUp::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 JoinRoomUp::roomid() const {
  return roomid_;
}
inline void JoinRoomUp::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
}

// -------------------------------------------------------------------

// JoinRoomDown

// required bool isSuccess = 1;
inline bool JoinRoomDown::has_issuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomDown::set_has_issuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomDown::clear_has_issuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomDown::clear_issuccess() {
  issuccess_ = false;
  clear_has_issuccess();
}
inline bool JoinRoomDown::issuccess() const {
  return issuccess_;
}
inline void JoinRoomDown::set_issuccess(bool value) {
  set_has_issuccess();
  issuccess_ = value;
}

// optional .RoomDetailInfoBean roomDetailInfoBean = 2;
inline bool JoinRoomDown::has_roomdetailinfobean() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinRoomDown::set_has_roomdetailinfobean() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinRoomDown::clear_has_roomdetailinfobean() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinRoomDown::clear_roomdetailinfobean() {
  if (roomdetailinfobean_ != NULL) roomdetailinfobean_->::RoomDetailInfoBean::Clear();
  clear_has_roomdetailinfobean();
}
inline const ::RoomDetailInfoBean& JoinRoomDown::roomdetailinfobean() const {
  return roomdetailinfobean_ != NULL ? *roomdetailinfobean_ : *default_instance_->roomdetailinfobean_;
}
inline ::RoomDetailInfoBean* JoinRoomDown::mutable_roomdetailinfobean() {
  set_has_roomdetailinfobean();
  if (roomdetailinfobean_ == NULL) roomdetailinfobean_ = new ::RoomDetailInfoBean;
  return roomdetailinfobean_;
}
inline ::RoomDetailInfoBean* JoinRoomDown::release_roomdetailinfobean() {
  clear_has_roomdetailinfobean();
  ::RoomDetailInfoBean* temp = roomdetailinfobean_;
  roomdetailinfobean_ = NULL;
  return temp;
}
inline void JoinRoomDown::set_allocated_roomdetailinfobean(::RoomDetailInfoBean* roomdetailinfobean) {
  delete roomdetailinfobean_;
  roomdetailinfobean_ = roomdetailinfobean;
  if (roomdetailinfobean) {
    set_has_roomdetailinfobean();
  } else {
    clear_has_roomdetailinfobean();
  }
}

// -------------------------------------------------------------------

// UserStateChangeDown

// required string userId = 1;
inline bool UserStateChangeDown::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStateChangeDown::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStateChangeDown::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStateChangeDown::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& UserStateChangeDown::userid() const {
  return *userid_;
}
inline void UserStateChangeDown::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void UserStateChangeDown::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void UserStateChangeDown::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserStateChangeDown::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* UserStateChangeDown::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserStateChangeDown::set_allocated_userid(::std::string* userid) {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (userid) {
    set_has_userid();
    userid_ = userid;
  } else {
    clear_has_userid();
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 state = 2;
inline bool UserStateChangeDown::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserStateChangeDown::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserStateChangeDown::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserStateChangeDown::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 UserStateChangeDown::state() const {
  return state_;
}
inline void UserStateChangeDown::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// ReadyUp

// -------------------------------------------------------------------

// CancelReadyUp

// -------------------------------------------------------------------

// ExitRoomUp

// -------------------------------------------------------------------

// MatchupRoomUp

// -------------------------------------------------------------------

// CancelMatchupRoomUp

// -------------------------------------------------------------------

// MatchupOutTimeDown

// -------------------------------------------------------------------

// MatchupSuccessDown

// required .BattleInfoBean battleInfoBean = 1;
inline bool MatchupSuccessDown::has_battleinfobean() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatchupSuccessDown::set_has_battleinfobean() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatchupSuccessDown::clear_has_battleinfobean() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatchupSuccessDown::clear_battleinfobean() {
  if (battleinfobean_ != NULL) battleinfobean_->::BattleInfoBean::Clear();
  clear_has_battleinfobean();
}
inline const ::BattleInfoBean& MatchupSuccessDown::battleinfobean() const {
  return battleinfobean_ != NULL ? *battleinfobean_ : *default_instance_->battleinfobean_;
}
inline ::BattleInfoBean* MatchupSuccessDown::mutable_battleinfobean() {
  set_has_battleinfobean();
  if (battleinfobean_ == NULL) battleinfobean_ = new ::BattleInfoBean;
  return battleinfobean_;
}
inline ::BattleInfoBean* MatchupSuccessDown::release_battleinfobean() {
  clear_has_battleinfobean();
  ::BattleInfoBean* temp = battleinfobean_;
  battleinfobean_ = NULL;
  return temp;
}
inline void MatchupSuccessDown::set_allocated_battleinfobean(::BattleInfoBean* battleinfobean) {
  delete battleinfobean_;
  battleinfobean_ = battleinfobean;
  if (battleinfobean) {
    set_has_battleinfobean();
  } else {
    clear_has_battleinfobean();
  }
}

// -------------------------------------------------------------------

// GetRoomInfoUp

// required uint32 rid = 1;
inline bool GetRoomInfoUp::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomInfoUp::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomInfoUp::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomInfoUp::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 GetRoomInfoUp::rid() const {
  return rid_;
}
inline void GetRoomInfoUp::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
}

// -------------------------------------------------------------------

// GetRoomInfoDown

// required .RoomDetailInfoBean roomDetailInfoBean = 1;
inline bool GetRoomInfoDown::has_roomdetailinfobean() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomInfoDown::set_has_roomdetailinfobean() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomInfoDown::clear_has_roomdetailinfobean() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomInfoDown::clear_roomdetailinfobean() {
  if (roomdetailinfobean_ != NULL) roomdetailinfobean_->::RoomDetailInfoBean::Clear();
  clear_has_roomdetailinfobean();
}
inline const ::RoomDetailInfoBean& GetRoomInfoDown::roomdetailinfobean() const {
  return roomdetailinfobean_ != NULL ? *roomdetailinfobean_ : *default_instance_->roomdetailinfobean_;
}
inline ::RoomDetailInfoBean* GetRoomInfoDown::mutable_roomdetailinfobean() {
  set_has_roomdetailinfobean();
  if (roomdetailinfobean_ == NULL) roomdetailinfobean_ = new ::RoomDetailInfoBean;
  return roomdetailinfobean_;
}
inline ::RoomDetailInfoBean* GetRoomInfoDown::release_roomdetailinfobean() {
  clear_has_roomdetailinfobean();
  ::RoomDetailInfoBean* temp = roomdetailinfobean_;
  roomdetailinfobean_ = NULL;
  return temp;
}
inline void GetRoomInfoDown::set_allocated_roomdetailinfobean(::RoomDetailInfoBean* roomdetailinfobean) {
  delete roomdetailinfobean_;
  roomdetailinfobean_ = roomdetailinfobean;
  if (roomdetailinfobean) {
    set_has_roomdetailinfobean();
  } else {
    clear_has_roomdetailinfobean();
  }
}

// -------------------------------------------------------------------

// QuickJoinRoomUp

// -------------------------------------------------------------------

// QuickJoinRoomDown

// required .RoomDetailInfoBean roomDetailInfoBean = 1;
inline bool QuickJoinRoomDown::has_roomdetailinfobean() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuickJoinRoomDown::set_has_roomdetailinfobean() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuickJoinRoomDown::clear_has_roomdetailinfobean() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuickJoinRoomDown::clear_roomdetailinfobean() {
  if (roomdetailinfobean_ != NULL) roomdetailinfobean_->::RoomDetailInfoBean::Clear();
  clear_has_roomdetailinfobean();
}
inline const ::RoomDetailInfoBean& QuickJoinRoomDown::roomdetailinfobean() const {
  return roomdetailinfobean_ != NULL ? *roomdetailinfobean_ : *default_instance_->roomdetailinfobean_;
}
inline ::RoomDetailInfoBean* QuickJoinRoomDown::mutable_roomdetailinfobean() {
  set_has_roomdetailinfobean();
  if (roomdetailinfobean_ == NULL) roomdetailinfobean_ = new ::RoomDetailInfoBean;
  return roomdetailinfobean_;
}
inline ::RoomDetailInfoBean* QuickJoinRoomDown::release_roomdetailinfobean() {
  clear_has_roomdetailinfobean();
  ::RoomDetailInfoBean* temp = roomdetailinfobean_;
  roomdetailinfobean_ = NULL;
  return temp;
}
inline void QuickJoinRoomDown::set_allocated_roomdetailinfobean(::RoomDetailInfoBean* roomdetailinfobean) {
  delete roomdetailinfobean_;
  roomdetailinfobean_ = roomdetailinfobean;
  if (roomdetailinfobean) {
    set_has_roomdetailinfobean();
  } else {
    clear_has_roomdetailinfobean();
  }
}

// -------------------------------------------------------------------

// KickOutUp

// required string kickOutUserId = 1;
inline bool KickOutUp::has_kickoutuserid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KickOutUp::set_has_kickoutuserid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KickOutUp::clear_has_kickoutuserid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KickOutUp::clear_kickoutuserid() {
  if (kickoutuserid_ != &::google::protobuf::internal::kEmptyString) {
    kickoutuserid_->clear();
  }
  clear_has_kickoutuserid();
}
inline const ::std::string& KickOutUp::kickoutuserid() const {
  return *kickoutuserid_;
}
inline void KickOutUp::set_kickoutuserid(const ::std::string& value) {
  set_has_kickoutuserid();
  if (kickoutuserid_ == &::google::protobuf::internal::kEmptyString) {
    kickoutuserid_ = new ::std::string;
  }
  kickoutuserid_->assign(value);
}
inline void KickOutUp::set_kickoutuserid(const char* value) {
  set_has_kickoutuserid();
  if (kickoutuserid_ == &::google::protobuf::internal::kEmptyString) {
    kickoutuserid_ = new ::std::string;
  }
  kickoutuserid_->assign(value);
}
inline void KickOutUp::set_kickoutuserid(const char* value, size_t size) {
  set_has_kickoutuserid();
  if (kickoutuserid_ == &::google::protobuf::internal::kEmptyString) {
    kickoutuserid_ = new ::std::string;
  }
  kickoutuserid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* KickOutUp::mutable_kickoutuserid() {
  set_has_kickoutuserid();
  if (kickoutuserid_ == &::google::protobuf::internal::kEmptyString) {
    kickoutuserid_ = new ::std::string;
  }
  return kickoutuserid_;
}
inline ::std::string* KickOutUp::release_kickoutuserid() {
  clear_has_kickoutuserid();
  if (kickoutuserid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = kickoutuserid_;
    kickoutuserid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void KickOutUp::set_allocated_kickoutuserid(::std::string* kickoutuserid) {
  if (kickoutuserid_ != &::google::protobuf::internal::kEmptyString) {
    delete kickoutuserid_;
  }
  if (kickoutuserid) {
    set_has_kickoutuserid();
    kickoutuserid_ = kickoutuserid;
  } else {
    clear_has_kickoutuserid();
    kickoutuserid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// FormationInfoBean

// required uint32 heroId = 1;
inline bool FormationInfoBean::has_heroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FormationInfoBean::set_has_heroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FormationInfoBean::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FormationInfoBean::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 FormationInfoBean::heroid() const {
  return heroid_;
}
inline void FormationInfoBean::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
}

// required uint32 retinueId = 2;
inline bool FormationInfoBean::has_retinueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FormationInfoBean::set_has_retinueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FormationInfoBean::clear_has_retinueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FormationInfoBean::clear_retinueid() {
  retinueid_ = 0u;
  clear_has_retinueid();
}
inline ::google::protobuf::uint32 FormationInfoBean::retinueid() const {
  return retinueid_;
}
inline void FormationInfoBean::set_retinueid(::google::protobuf::uint32 value) {
  set_has_retinueid();
  retinueid_ = value;
}

// -------------------------------------------------------------------

// FightHeroUp

// repeated .FormationInfoBean formationInfoBean = 1;
inline int FightHeroUp::formationinfobean_size() const {
  return formationinfobean_.size();
}
inline void FightHeroUp::clear_formationinfobean() {
  formationinfobean_.Clear();
}
inline const ::FormationInfoBean& FightHeroUp::formationinfobean(int index) const {
  return formationinfobean_.Get(index);
}
inline ::FormationInfoBean* FightHeroUp::mutable_formationinfobean(int index) {
  return formationinfobean_.Mutable(index);
}
inline ::FormationInfoBean* FightHeroUp::add_formationinfobean() {
  return formationinfobean_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FormationInfoBean >&
FightHeroUp::formationinfobean() const {
  return formationinfobean_;
}
inline ::google::protobuf::RepeatedPtrField< ::FormationInfoBean >*
FightHeroUp::mutable_formationinfobean() {
  return &formationinfobean_;
}

// -------------------------------------------------------------------

// MatchupOutTimeUp

// -------------------------------------------------------------------

// GetUserRoomUp

// -------------------------------------------------------------------

// GetUserRoomDown

// required bool isRoom = 1;
inline bool GetUserRoomDown::has_isroom() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserRoomDown::set_has_isroom() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserRoomDown::clear_has_isroom() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserRoomDown::clear_isroom() {
  isroom_ = false;
  clear_has_isroom();
}
inline bool GetUserRoomDown::isroom() const {
  return isroom_;
}
inline void GetUserRoomDown::set_isroom(bool value) {
  set_has_isroom();
  isroom_ = value;
}

// optional .RoomDetailInfoBean roomDetailInfoBean = 2;
inline bool GetUserRoomDown::has_roomdetailinfobean() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserRoomDown::set_has_roomdetailinfobean() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserRoomDown::clear_has_roomdetailinfobean() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserRoomDown::clear_roomdetailinfobean() {
  if (roomdetailinfobean_ != NULL) roomdetailinfobean_->::RoomDetailInfoBean::Clear();
  clear_has_roomdetailinfobean();
}
inline const ::RoomDetailInfoBean& GetUserRoomDown::roomdetailinfobean() const {
  return roomdetailinfobean_ != NULL ? *roomdetailinfobean_ : *default_instance_->roomdetailinfobean_;
}
inline ::RoomDetailInfoBean* GetUserRoomDown::mutable_roomdetailinfobean() {
  set_has_roomdetailinfobean();
  if (roomdetailinfobean_ == NULL) roomdetailinfobean_ = new ::RoomDetailInfoBean;
  return roomdetailinfobean_;
}
inline ::RoomDetailInfoBean* GetUserRoomDown::release_roomdetailinfobean() {
  clear_has_roomdetailinfobean();
  ::RoomDetailInfoBean* temp = roomdetailinfobean_;
  roomdetailinfobean_ = NULL;
  return temp;
}
inline void GetUserRoomDown::set_allocated_roomdetailinfobean(::RoomDetailInfoBean* roomdetailinfobean) {
  delete roomdetailinfobean_;
  roomdetailinfobean_ = roomdetailinfobean;
  if (roomdetailinfobean) {
    set_has_roomdetailinfobean();
  } else {
    clear_has_roomdetailinfobean();
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoomCommondIdEnum>() {
  return ::RoomCommondIdEnum_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_1100200_5fRoomMessage_2eproto__INCLUDED
