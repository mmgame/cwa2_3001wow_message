// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: 2100100_BattleMessage.proto

#ifndef PROTOBUF_2100100_5fBattleMessage_2eproto__INCLUDED
#define PROTOBUF_2100100_5fBattleMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

class BuffContextBean;
class ActionStateContextBean;
class BattleBean;
class UserEntityBean;
class PlayerBean;
class HeroEntityBean;
class HeroBean;
class MagicCDBean;
class PetBean;
class BulletBean;
class TrapBean;
class CoordinateBean;
class ActionTargetBean;
class MagicEffectBean;
class PerformerEffectBean;
class MagicTrapBean;
class MagicPetBean;
class MagicResaultBean;
class TrapTriggerBean;
class AttachBattleUp;
class AttachBattleDown;
class SyncBattleUp;
class SyncBattleDown;
class BattleStepDown;
class MagicActionUp;
class MagicActionDown;
class MoveActionUp;
class MoveActionDown;
class RemoveDown;
class IdleActionUp;
class IdleActionDown;
class NetDelayCheckUp;
class NetDelayCheckDown;
class DeadDown;
class TrapTriggerDown;
class BattleOverDown;

enum BattleCommondIdEnum {
  _AttachBattleUp = 2100101,
  _AttachBattleDown = 2100102,
  _SyncBattleUp = 2100103,
  _SyncBattleDown = 2100104,
  _BattleStepDown = 2100106,
  _MagicActionUp = 2100107,
  _MagicActionDown = 2100108,
  _MoveActionUp = 2100109,
  _MoveActionDown = 2100110,
  _RemoveDown = 2100112,
  _IdleActionUp = 2100113,
  _IdleActionDown = 2100114,
  _NetDelayCheckUp = 2100115,
  _NetDelayCheckDown = 2100116,
  _DeadDown = 2100118,
  _TrapTriggerDown = 2100120,
  _BattleOverDown = 2100122
};
bool BattleCommondIdEnum_IsValid(int value);
const BattleCommondIdEnum BattleCommondIdEnum_MIN = _AttachBattleUp;
const BattleCommondIdEnum BattleCommondIdEnum_MAX = _BattleOverDown;
const int BattleCommondIdEnum_ARRAYSIZE = BattleCommondIdEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* BattleCommondIdEnum_descriptor();
inline const ::std::string& BattleCommondIdEnum_Name(BattleCommondIdEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    BattleCommondIdEnum_descriptor(), value);
}
inline bool BattleCommondIdEnum_Parse(
    const ::std::string& name, BattleCommondIdEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BattleCommondIdEnum>(
    BattleCommondIdEnum_descriptor(), name, value);
}
// ===================================================================

class BuffContextBean : public ::google::protobuf::Message {
 public:
  BuffContextBean();
  virtual ~BuffContextBean();

  BuffContextBean(const BuffContextBean& from);

  inline BuffContextBean& operator=(const BuffContextBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffContextBean& default_instance();

  void Swap(BuffContextBean* other);

  // implements Message ----------------------------------------------

  BuffContextBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffContextBean& from);
  void MergeFrom(const BuffContextBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required uint32 buffKeyId = 2;
  inline bool has_buffkeyid() const;
  inline void clear_buffkeyid();
  static const int kBuffKeyIdFieldNumber = 2;
  inline ::google::protobuf::uint32 buffkeyid() const;
  inline void set_buffkeyid(::google::protobuf::uint32 value);

  // required uint32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BuffContextBean)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_buffkeyid();
  inline void clear_has_buffkeyid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 performerid_;
  ::google::protobuf::uint32 buffkeyid_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static BuffContextBean* default_instance_;
};
// -------------------------------------------------------------------

class ActionStateContextBean : public ::google::protobuf::Message {
 public:
  ActionStateContextBean();
  virtual ~ActionStateContextBean();

  ActionStateContextBean(const ActionStateContextBean& from);

  inline ActionStateContextBean& operator=(const ActionStateContextBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionStateContextBean& default_instance();

  void Swap(ActionStateContextBean* other);

  // implements Message ----------------------------------------------

  ActionStateContextBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionStateContextBean& from);
  void MergeFrom(const ActionStateContextBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 stateSubType = 1;
  inline bool has_statesubtype() const;
  inline void clear_statesubtype();
  static const int kStateSubTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 statesubtype() const;
  inline void set_statesubtype(::google::protobuf::uint32 value);

  // required uint32 startTime = 2;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ActionStateContextBean)
 private:
  inline void set_has_statesubtype();
  inline void clear_has_statesubtype();
  inline void set_has_starttime();
  inline void clear_has_starttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 statesubtype_;
  ::google::protobuf::uint32 starttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static ActionStateContextBean* default_instance_;
};
// -------------------------------------------------------------------

class BattleBean : public ::google::protobuf::Message {
 public:
  BattleBean();
  virtual ~BattleBean();

  BattleBean(const BattleBean& from);

  inline BattleBean& operator=(const BattleBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleBean& default_instance();

  void Swap(BattleBean* other);

  // implements Message ----------------------------------------------

  BattleBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleBean& from);
  void MergeFrom(const BattleBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 battleKeyId = 1;
  inline bool has_battlekeyid() const;
  inline void clear_battlekeyid();
  static const int kBattleKeyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 battlekeyid() const;
  inline void set_battlekeyid(::google::protobuf::uint32 value);

  // required uint32 currentTime = 2;
  inline bool has_currenttime() const;
  inline void clear_currenttime();
  static const int kCurrentTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 currenttime() const;
  inline void set_currenttime(::google::protobuf::uint32 value);

  // required uint32 currentState = 3;
  inline bool has_currentstate() const;
  inline void clear_currentstate();
  static const int kCurrentStateFieldNumber = 3;
  inline ::google::protobuf::uint32 currentstate() const;
  inline void set_currentstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BattleBean)
 private:
  inline void set_has_battlekeyid();
  inline void clear_has_battlekeyid();
  inline void set_has_currenttime();
  inline void clear_has_currenttime();
  inline void set_has_currentstate();
  inline void clear_has_currentstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 battlekeyid_;
  ::google::protobuf::uint32 currenttime_;
  ::google::protobuf::uint32 currentstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static BattleBean* default_instance_;
};
// -------------------------------------------------------------------

class UserEntityBean : public ::google::protobuf::Message {
 public:
  UserEntityBean();
  virtual ~UserEntityBean();

  UserEntityBean(const UserEntityBean& from);

  inline UserEntityBean& operator=(const UserEntityBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserEntityBean& default_instance();

  void Swap(UserEntityBean* other);

  // implements Message ----------------------------------------------

  UserEntityBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserEntityBean& from);
  void MergeFrom(const UserEntityBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserEntityBean)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static UserEntityBean* default_instance_;
};
// -------------------------------------------------------------------

class PlayerBean : public ::google::protobuf::Message {
 public:
  PlayerBean();
  virtual ~PlayerBean();

  PlayerBean(const PlayerBean& from);

  inline PlayerBean& operator=(const PlayerBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerBean& default_instance();

  void Swap(PlayerBean* other);

  // implements Message ----------------------------------------------

  PlayerBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerBean& from);
  void MergeFrom(const PlayerBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .UserEntityBean userEntityBean = 1;
  inline bool has_userentitybean() const;
  inline void clear_userentitybean();
  static const int kUserEntityBeanFieldNumber = 1;
  inline const ::UserEntityBean& userentitybean() const;
  inline ::UserEntityBean* mutable_userentitybean();
  inline ::UserEntityBean* release_userentitybean();
  inline void set_allocated_userentitybean(::UserEntityBean* userentitybean);

  // required uint32 troopType = 2;
  inline bool has_trooptype() const;
  inline void clear_trooptype();
  static const int kTroopTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 trooptype() const;
  inline void set_trooptype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PlayerBean)
 private:
  inline void set_has_userentitybean();
  inline void clear_has_userentitybean();
  inline void set_has_trooptype();
  inline void clear_has_trooptype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::UserEntityBean* userentitybean_;
  ::google::protobuf::uint32 trooptype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerBean* default_instance_;
};
// -------------------------------------------------------------------

class HeroEntityBean : public ::google::protobuf::Message {
 public:
  HeroEntityBean();
  virtual ~HeroEntityBean();

  HeroEntityBean(const HeroEntityBean& from);

  inline HeroEntityBean& operator=(const HeroEntityBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroEntityBean& default_instance();

  void Swap(HeroEntityBean* other);

  // implements Message ----------------------------------------------

  HeroEntityBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroEntityBean& from);
  void MergeFrom(const HeroEntityBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint64 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 quality = 4;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 4;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // required uint32 star = 5;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 5;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HeroEntityBean)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static HeroEntityBean* default_instance_;
};
// -------------------------------------------------------------------

class HeroBean : public ::google::protobuf::Message {
 public:
  HeroBean();
  virtual ~HeroBean();

  HeroBean(const HeroBean& from);

  inline HeroBean& operator=(const HeroBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroBean& default_instance();

  void Swap(HeroBean* other);

  // implements Message ----------------------------------------------

  HeroBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroBean& from);
  void MergeFrom(const HeroBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required uint64 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // required .CoordinateBean position = 3;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline const ::CoordinateBean& position() const;
  inline ::CoordinateBean* mutable_position();
  inline ::CoordinateBean* release_position();
  inline void set_allocated_position(::CoordinateBean* position);

  // required .HeroEntityBean heroEntityBean = 4;
  inline bool has_heroentitybean() const;
  inline void clear_heroentitybean();
  static const int kHeroEntityBeanFieldNumber = 4;
  inline const ::HeroEntityBean& heroentitybean() const;
  inline ::HeroEntityBean* mutable_heroentitybean();
  inline ::HeroEntityBean* release_heroentitybean();
  inline void set_allocated_heroentitybean(::HeroEntityBean* heroentitybean);

  // repeated uint32 currentAttrs = 5;
  inline int currentattrs_size() const;
  inline void clear_currentattrs();
  static const int kCurrentAttrsFieldNumber = 5;
  inline ::google::protobuf::uint32 currentattrs(int index) const;
  inline void set_currentattrs(int index, ::google::protobuf::uint32 value);
  inline void add_currentattrs(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      currentattrs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_currentattrs();

  // repeated .BuffContextBean buffContextBeans = 6;
  inline int buffcontextbeans_size() const;
  inline void clear_buffcontextbeans();
  static const int kBuffContextBeansFieldNumber = 6;
  inline const ::BuffContextBean& buffcontextbeans(int index) const;
  inline ::BuffContextBean* mutable_buffcontextbeans(int index);
  inline ::BuffContextBean* add_buffcontextbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::BuffContextBean >&
      buffcontextbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuffContextBean >*
      mutable_buffcontextbeans();

  // repeated .ActionStateContextBean actionStateContextBeans = 7;
  inline int actionstatecontextbeans_size() const;
  inline void clear_actionstatecontextbeans();
  static const int kActionStateContextBeansFieldNumber = 7;
  inline const ::ActionStateContextBean& actionstatecontextbeans(int index) const;
  inline ::ActionStateContextBean* mutable_actionstatecontextbeans(int index);
  inline ::ActionStateContextBean* add_actionstatecontextbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >&
      actionstatecontextbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >*
      mutable_actionstatecontextbeans();

  // repeated .MagicCDBean magicCDBeans = 8;
  inline int magiccdbeans_size() const;
  inline void clear_magiccdbeans();
  static const int kMagicCDBeansFieldNumber = 8;
  inline const ::MagicCDBean& magiccdbeans(int index) const;
  inline ::MagicCDBean* mutable_magiccdbeans(int index);
  inline ::MagicCDBean* add_magiccdbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::MagicCDBean >&
      magiccdbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::MagicCDBean >*
      mutable_magiccdbeans();

  // optional uint32 retinueSkillId = 9;
  inline bool has_retinueskillid() const;
  inline void clear_retinueskillid();
  static const int kRetinueSkillIdFieldNumber = 9;
  inline ::google::protobuf::uint32 retinueskillid() const;
  inline void set_retinueskillid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HeroBean)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_heroentitybean();
  inline void clear_has_heroentitybean();
  inline void set_has_retinueskillid();
  inline void clear_has_retinueskillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::CoordinateBean* position_;
  ::HeroEntityBean* heroentitybean_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > currentattrs_;
  ::google::protobuf::uint32 performerid_;
  ::google::protobuf::uint32 retinueskillid_;
  ::google::protobuf::RepeatedPtrField< ::BuffContextBean > buffcontextbeans_;
  ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean > actionstatecontextbeans_;
  ::google::protobuf::RepeatedPtrField< ::MagicCDBean > magiccdbeans_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static HeroBean* default_instance_;
};
// -------------------------------------------------------------------

class MagicCDBean : public ::google::protobuf::Message {
 public:
  MagicCDBean();
  virtual ~MagicCDBean();

  MagicCDBean(const MagicCDBean& from);

  inline MagicCDBean& operator=(const MagicCDBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicCDBean& default_instance();

  void Swap(MagicCDBean* other);

  // implements Message ----------------------------------------------

  MagicCDBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicCDBean& from);
  void MergeFrom(const MagicCDBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // required int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MagicCDBean)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static MagicCDBean* default_instance_;
};
// -------------------------------------------------------------------

class PetBean : public ::google::protobuf::Message {
 public:
  PetBean();
  virtual ~PetBean();

  PetBean(const PetBean& from);

  inline PetBean& operator=(const PetBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetBean& default_instance();

  void Swap(PetBean* other);

  // implements Message ----------------------------------------------

  PetBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetBean& from);
  void MergeFrom(const PetBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 performerId = 3;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 3;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required uint32 sourceId = 4;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 4;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // required uint64 uid = 5;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 5;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // required .CoordinateBean position = 6;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 6;
  inline const ::CoordinateBean& position() const;
  inline ::CoordinateBean* mutable_position();
  inline ::CoordinateBean* release_position();
  inline void set_allocated_position(::CoordinateBean* position);

  // repeated uint32 currentAttrs = 7;
  inline int currentattrs_size() const;
  inline void clear_currentattrs();
  static const int kCurrentAttrsFieldNumber = 7;
  inline ::google::protobuf::uint32 currentattrs(int index) const;
  inline void set_currentattrs(int index, ::google::protobuf::uint32 value);
  inline void add_currentattrs(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      currentattrs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_currentattrs();

  // repeated .BuffContextBean buffContextBeans = 8;
  inline int buffcontextbeans_size() const;
  inline void clear_buffcontextbeans();
  static const int kBuffContextBeansFieldNumber = 8;
  inline const ::BuffContextBean& buffcontextbeans(int index) const;
  inline ::BuffContextBean* mutable_buffcontextbeans(int index);
  inline ::BuffContextBean* add_buffcontextbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::BuffContextBean >&
      buffcontextbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::BuffContextBean >*
      mutable_buffcontextbeans();

  // repeated .ActionStateContextBean actionStateContextBeans = 9;
  inline int actionstatecontextbeans_size() const;
  inline void clear_actionstatecontextbeans();
  static const int kActionStateContextBeansFieldNumber = 9;
  inline const ::ActionStateContextBean& actionstatecontextbeans(int index) const;
  inline ::ActionStateContextBean* mutable_actionstatecontextbeans(int index);
  inline ::ActionStateContextBean* add_actionstatecontextbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >&
      actionstatecontextbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >*
      mutable_actionstatecontextbeans();

  // repeated .MagicCDBean magicCDBeans = 10;
  inline int magiccdbeans_size() const;
  inline void clear_magiccdbeans();
  static const int kMagicCDBeansFieldNumber = 10;
  inline const ::MagicCDBean& magiccdbeans(int index) const;
  inline ::MagicCDBean* mutable_magiccdbeans(int index);
  inline ::MagicCDBean* add_magiccdbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::MagicCDBean >&
      magiccdbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::MagicCDBean >*
      mutable_magiccdbeans();

  // @@protoc_insertion_point(class_scope:PetBean)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 performerid_;
  ::google::protobuf::uint32 sourceid_;
  ::google::protobuf::uint64 uid_;
  ::CoordinateBean* position_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > currentattrs_;
  ::google::protobuf::RepeatedPtrField< ::BuffContextBean > buffcontextbeans_;
  ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean > actionstatecontextbeans_;
  ::google::protobuf::RepeatedPtrField< ::MagicCDBean > magiccdbeans_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static PetBean* default_instance_;
};
// -------------------------------------------------------------------

class BulletBean : public ::google::protobuf::Message {
 public:
  BulletBean();
  virtual ~BulletBean();

  BulletBean(const BulletBean& from);

  inline BulletBean& operator=(const BulletBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BulletBean& default_instance();

  void Swap(BulletBean* other);

  // implements Message ----------------------------------------------

  BulletBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BulletBean& from);
  void MergeFrom(const BulletBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 effectId = 1;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectIdFieldNumber = 1;
  inline ::google::protobuf::uint32 effectid() const;
  inline void set_effectid(::google::protobuf::uint32 value);

  // optional uint32 performerId = 2;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required uint32 sourceId = 3;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 3;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // required uint64 uid = 4;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 4;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // required .CoordinateBean position = 5;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 5;
  inline const ::CoordinateBean& position() const;
  inline ::CoordinateBean* mutable_position();
  inline ::CoordinateBean* release_position();
  inline void set_allocated_position(::CoordinateBean* position);

  // repeated .ActionStateContextBean actionStateContextBeans = 6;
  inline int actionstatecontextbeans_size() const;
  inline void clear_actionstatecontextbeans();
  static const int kActionStateContextBeansFieldNumber = 6;
  inline const ::ActionStateContextBean& actionstatecontextbeans(int index) const;
  inline ::ActionStateContextBean* mutable_actionstatecontextbeans(int index);
  inline ::ActionStateContextBean* add_actionstatecontextbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >&
      actionstatecontextbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >*
      mutable_actionstatecontextbeans();

  // @@protoc_insertion_point(class_scope:BulletBean)
 private:
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 effectid_;
  ::google::protobuf::uint32 performerid_;
  ::google::protobuf::uint64 uid_;
  ::CoordinateBean* position_;
  ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean > actionstatecontextbeans_;
  ::google::protobuf::uint32 sourceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static BulletBean* default_instance_;
};
// -------------------------------------------------------------------

class TrapBean : public ::google::protobuf::Message {
 public:
  TrapBean();
  virtual ~TrapBean();

  TrapBean(const TrapBean& from);

  inline TrapBean& operator=(const TrapBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrapBean& default_instance();

  void Swap(TrapBean* other);

  // implements Message ----------------------------------------------

  TrapBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrapBean& from);
  void MergeFrom(const TrapBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 effectId = 2;
  inline bool has_effectid() const;
  inline void clear_effectid();
  static const int kEffectIdFieldNumber = 2;
  inline ::google::protobuf::uint32 effectid() const;
  inline void set_effectid(::google::protobuf::uint32 value);

  // required uint32 startTime = 3;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint32 performerId = 4;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 4;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required uint32 sourceId = 5;
  inline bool has_sourceid() const;
  inline void clear_sourceid();
  static const int kSourceIdFieldNumber = 5;
  inline ::google::protobuf::uint32 sourceid() const;
  inline void set_sourceid(::google::protobuf::uint32 value);

  // required string uid = 6;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 6;
  inline const ::std::string& uid() const;
  inline void set_uid(const ::std::string& value);
  inline void set_uid(const char* value);
  inline void set_uid(const char* value, size_t size);
  inline ::std::string* mutable_uid();
  inline ::std::string* release_uid();
  inline void set_allocated_uid(::std::string* uid);

  // required .CoordinateBean position = 7;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 7;
  inline const ::CoordinateBean& position() const;
  inline ::CoordinateBean* mutable_position();
  inline ::CoordinateBean* release_position();
  inline void set_allocated_position(::CoordinateBean* position);

  // @@protoc_insertion_point(class_scope:TrapBean)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_effectid();
  inline void clear_has_effectid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_sourceid();
  inline void clear_has_sourceid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 effectid_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 performerid_;
  ::std::string* uid_;
  ::CoordinateBean* position_;
  ::google::protobuf::uint32 sourceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static TrapBean* default_instance_;
};
// -------------------------------------------------------------------

class CoordinateBean : public ::google::protobuf::Message {
 public:
  CoordinateBean();
  virtual ~CoordinateBean();

  CoordinateBean(const CoordinateBean& from);

  inline CoordinateBean& operator=(const CoordinateBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoordinateBean& default_instance();

  void Swap(CoordinateBean* other);

  // implements Message ----------------------------------------------

  CoordinateBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoordinateBean& from);
  void MergeFrom(const CoordinateBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 c = 1 [packed = true];
  inline int c_size() const;
  inline void clear_c();
  static const int kCFieldNumber = 1;
  inline ::google::protobuf::uint32 c(int index) const;
  inline void set_c(int index, ::google::protobuf::uint32 value);
  inline void add_c(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      c() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_c();

  // @@protoc_insertion_point(class_scope:CoordinateBean)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > c_;
  mutable int _c_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static CoordinateBean* default_instance_;
};
// -------------------------------------------------------------------

class ActionTargetBean : public ::google::protobuf::Message {
 public:
  ActionTargetBean();
  virtual ~ActionTargetBean();

  ActionTargetBean(const ActionTargetBean& from);

  inline ActionTargetBean& operator=(const ActionTargetBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionTargetBean& default_instance();

  void Swap(ActionTargetBean* other);

  // implements Message ----------------------------------------------

  ActionTargetBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionTargetBean& from);
  void MergeFrom(const ActionTargetBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 targetType = 1;
  inline bool has_targettype() const;
  inline void clear_targettype();
  static const int kTargetTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 targettype() const;
  inline void set_targettype(::google::protobuf::uint32 value);

  // optional uint32 targetId = 2;
  inline bool has_targetid() const;
  inline void clear_targetid();
  static const int kTargetIdFieldNumber = 2;
  inline ::google::protobuf::uint32 targetid() const;
  inline void set_targetid(::google::protobuf::uint32 value);

  // optional .CoordinateBean areaTarget = 3;
  inline bool has_areatarget() const;
  inline void clear_areatarget();
  static const int kAreaTargetFieldNumber = 3;
  inline const ::CoordinateBean& areatarget() const;
  inline ::CoordinateBean* mutable_areatarget();
  inline ::CoordinateBean* release_areatarget();
  inline void set_allocated_areatarget(::CoordinateBean* areatarget);

  // @@protoc_insertion_point(class_scope:ActionTargetBean)
 private:
  inline void set_has_targettype();
  inline void clear_has_targettype();
  inline void set_has_targetid();
  inline void clear_has_targetid();
  inline void set_has_areatarget();
  inline void clear_has_areatarget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 targettype_;
  ::google::protobuf::uint32 targetid_;
  ::CoordinateBean* areatarget_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static ActionTargetBean* default_instance_;
};
// -------------------------------------------------------------------

class MagicEffectBean : public ::google::protobuf::Message {
 public:
  MagicEffectBean();
  virtual ~MagicEffectBean();

  MagicEffectBean(const MagicEffectBean& from);

  inline MagicEffectBean& operator=(const MagicEffectBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicEffectBean& default_instance();

  void Swap(MagicEffectBean* other);

  // implements Message ----------------------------------------------

  MagicEffectBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicEffectBean& from);
  void MergeFrom(const MagicEffectBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 eid = 1;
  inline bool has_eid() const;
  inline void clear_eid();
  static const int kEidFieldNumber = 1;
  inline ::google::protobuf::uint32 eid() const;
  inline void set_eid(::google::protobuf::uint32 value);

  // repeated .PerformerEffectBean performerEffectBeans = 2;
  inline int performereffectbeans_size() const;
  inline void clear_performereffectbeans();
  static const int kPerformerEffectBeansFieldNumber = 2;
  inline const ::PerformerEffectBean& performereffectbeans(int index) const;
  inline ::PerformerEffectBean* mutable_performereffectbeans(int index);
  inline ::PerformerEffectBean* add_performereffectbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::PerformerEffectBean >&
      performereffectbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::PerformerEffectBean >*
      mutable_performereffectbeans();

  // repeated .MagicTrapBean trapBean = 3;
  inline int trapbean_size() const;
  inline void clear_trapbean();
  static const int kTrapBeanFieldNumber = 3;
  inline const ::MagicTrapBean& trapbean(int index) const;
  inline ::MagicTrapBean* mutable_trapbean(int index);
  inline ::MagicTrapBean* add_trapbean();
  inline const ::google::protobuf::RepeatedPtrField< ::MagicTrapBean >&
      trapbean() const;
  inline ::google::protobuf::RepeatedPtrField< ::MagicTrapBean >*
      mutable_trapbean();

  // repeated .MagicPetBean petBean = 4;
  inline int petbean_size() const;
  inline void clear_petbean();
  static const int kPetBeanFieldNumber = 4;
  inline const ::MagicPetBean& petbean(int index) const;
  inline ::MagicPetBean* mutable_petbean(int index);
  inline ::MagicPetBean* add_petbean();
  inline const ::google::protobuf::RepeatedPtrField< ::MagicPetBean >&
      petbean() const;
  inline ::google::protobuf::RepeatedPtrField< ::MagicPetBean >*
      mutable_petbean();

  // @@protoc_insertion_point(class_scope:MagicEffectBean)
 private:
  inline void set_has_eid();
  inline void clear_has_eid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PerformerEffectBean > performereffectbeans_;
  ::google::protobuf::RepeatedPtrField< ::MagicTrapBean > trapbean_;
  ::google::protobuf::RepeatedPtrField< ::MagicPetBean > petbean_;
  ::google::protobuf::uint32 eid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static MagicEffectBean* default_instance_;
};
// -------------------------------------------------------------------

class PerformerEffectBean : public ::google::protobuf::Message {
 public:
  PerformerEffectBean();
  virtual ~PerformerEffectBean();

  PerformerEffectBean(const PerformerEffectBean& from);

  inline PerformerEffectBean& operator=(const PerformerEffectBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PerformerEffectBean& default_instance();

  void Swap(PerformerEffectBean* other);

  // implements Message ----------------------------------------------

  PerformerEffectBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PerformerEffectBean& from);
  void MergeFrom(const PerformerEffectBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::uint32 pid() const;
  inline void set_pid(::google::protobuf::uint32 value);

  // repeated uint32 values = 2;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 2;
  inline ::google::protobuf::uint32 values(int index) const;
  inline void set_values(int index, ::google::protobuf::uint32 value);
  inline void add_values(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      values() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_values();

  // repeated uint32 effects = 3;
  inline int effects_size() const;
  inline void clear_effects();
  static const int kEffectsFieldNumber = 3;
  inline ::google::protobuf::uint32 effects(int index) const;
  inline void set_effects(int index, ::google::protobuf::uint32 value);
  inline void add_effects(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      effects() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_effects();

  // repeated uint32 createBuffs = 4;
  inline int createbuffs_size() const;
  inline void clear_createbuffs();
  static const int kCreateBuffsFieldNumber = 4;
  inline ::google::protobuf::uint32 createbuffs(int index) const;
  inline void set_createbuffs(int index, ::google::protobuf::uint32 value);
  inline void add_createbuffs(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      createbuffs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_createbuffs();

  // repeated uint32 deleteBuffs = 5;
  inline int deletebuffs_size() const;
  inline void clear_deletebuffs();
  static const int kDeleteBuffsFieldNumber = 5;
  inline ::google::protobuf::uint32 deletebuffs(int index) const;
  inline void set_deletebuffs(int index, ::google::protobuf::uint32 value);
  inline void add_deletebuffs(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      deletebuffs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_deletebuffs();

  // @@protoc_insertion_point(class_scope:PerformerEffectBean)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > values_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > effects_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > createbuffs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > deletebuffs_;
  ::google::protobuf::uint32 pid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static PerformerEffectBean* default_instance_;
};
// -------------------------------------------------------------------

class MagicTrapBean : public ::google::protobuf::Message {
 public:
  MagicTrapBean();
  virtual ~MagicTrapBean();

  MagicTrapBean(const MagicTrapBean& from);

  inline MagicTrapBean& operator=(const MagicTrapBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicTrapBean& default_instance();

  void Swap(MagicTrapBean* other);

  // implements Message ----------------------------------------------

  MagicTrapBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicTrapBean& from);
  void MergeFrom(const MagicTrapBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tid = 1;
  inline bool has_tid() const;
  inline void clear_tid();
  static const int kTidFieldNumber = 1;
  inline ::google::protobuf::uint32 tid() const;
  inline void set_tid(::google::protobuf::uint32 value);

  // required .CoordinateBean position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline const ::CoordinateBean& position() const;
  inline ::CoordinateBean* mutable_position();
  inline ::CoordinateBean* release_position();
  inline void set_allocated_position(::CoordinateBean* position);

  // required uint32 eid = 3;
  inline bool has_eid() const;
  inline void clear_eid();
  static const int kEidFieldNumber = 3;
  inline ::google::protobuf::uint32 eid() const;
  inline void set_eid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MagicTrapBean)
 private:
  inline void set_has_tid();
  inline void clear_has_tid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_eid();
  inline void clear_has_eid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CoordinateBean* position_;
  ::google::protobuf::uint32 tid_;
  ::google::protobuf::uint32 eid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static MagicTrapBean* default_instance_;
};
// -------------------------------------------------------------------

class MagicPetBean : public ::google::protobuf::Message {
 public:
  MagicPetBean();
  virtual ~MagicPetBean();

  MagicPetBean(const MagicPetBean& from);

  inline MagicPetBean& operator=(const MagicPetBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicPetBean& default_instance();

  void Swap(MagicPetBean* other);

  // implements Message ----------------------------------------------

  MagicPetBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicPetBean& from);
  void MergeFrom(const MagicPetBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::uint32 pid() const;
  inline void set_pid(::google::protobuf::uint32 value);

  // required .CoordinateBean position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline const ::CoordinateBean& position() const;
  inline ::CoordinateBean* mutable_position();
  inline ::CoordinateBean* release_position();
  inline void set_allocated_position(::CoordinateBean* position);

  // required uint32 keyId = 3;
  inline bool has_keyid() const;
  inline void clear_keyid();
  static const int kKeyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 keyid() const;
  inline void set_keyid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MagicPetBean)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_keyid();
  inline void clear_has_keyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CoordinateBean* position_;
  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 keyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static MagicPetBean* default_instance_;
};
// -------------------------------------------------------------------

class MagicResaultBean : public ::google::protobuf::Message {
 public:
  MagicResaultBean();
  virtual ~MagicResaultBean();

  MagicResaultBean(const MagicResaultBean& from);

  inline MagicResaultBean& operator=(const MagicResaultBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicResaultBean& default_instance();

  void Swap(MagicResaultBean* other);

  // implements Message ----------------------------------------------

  MagicResaultBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicResaultBean& from);
  void MergeFrom(const MagicResaultBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MagicEffectBean effectBeans = 1;
  inline int effectbeans_size() const;
  inline void clear_effectbeans();
  static const int kEffectBeansFieldNumber = 1;
  inline const ::MagicEffectBean& effectbeans(int index) const;
  inline ::MagicEffectBean* mutable_effectbeans(int index);
  inline ::MagicEffectBean* add_effectbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::MagicEffectBean >&
      effectbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::MagicEffectBean >*
      mutable_effectbeans();

  // @@protoc_insertion_point(class_scope:MagicResaultBean)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::MagicEffectBean > effectbeans_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static MagicResaultBean* default_instance_;
};
// -------------------------------------------------------------------

class TrapTriggerBean : public ::google::protobuf::Message {
 public:
  TrapTriggerBean();
  virtual ~TrapTriggerBean();

  TrapTriggerBean(const TrapTriggerBean& from);

  inline TrapTriggerBean& operator=(const TrapTriggerBean& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrapTriggerBean& default_instance();

  void Swap(TrapTriggerBean* other);

  // implements Message ----------------------------------------------

  TrapTriggerBean* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrapTriggerBean& from);
  void MergeFrom(const TrapTriggerBean& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::uint32 pid() const;
  inline void set_pid(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // repeated uint32 buffKeyId = 3;
  inline int buffkeyid_size() const;
  inline void clear_buffkeyid();
  static const int kBuffKeyIdFieldNumber = 3;
  inline ::google::protobuf::uint32 buffkeyid(int index) const;
  inline void set_buffkeyid(int index, ::google::protobuf::uint32 value);
  inline void add_buffkeyid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buffkeyid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buffkeyid();

  // @@protoc_insertion_point(class_scope:TrapTriggerBean)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pid_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buffkeyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static TrapTriggerBean* default_instance_;
};
// -------------------------------------------------------------------

class AttachBattleUp : public ::google::protobuf::Message {
 public:
  AttachBattleUp();
  virtual ~AttachBattleUp();

  AttachBattleUp(const AttachBattleUp& from);

  inline AttachBattleUp& operator=(const AttachBattleUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttachBattleUp& default_instance();

  void Swap(AttachBattleUp* other);

  // implements Message ----------------------------------------------

  AttachBattleUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttachBattleUp& from);
  void MergeFrom(const AttachBattleUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string battleId = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  inline const ::std::string& battleid() const;
  inline void set_battleid(const ::std::string& value);
  inline void set_battleid(const char* value);
  inline void set_battleid(const char* value, size_t size);
  inline ::std::string* mutable_battleid();
  inline ::std::string* release_battleid();
  inline void set_allocated_battleid(::std::string* battleid);

  // required string userId = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 2;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  inline void set_allocated_userid(::std::string* userid);

  // @@protoc_insertion_point(class_scope:AttachBattleUp)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* battleid_;
  ::std::string* userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static AttachBattleUp* default_instance_;
};
// -------------------------------------------------------------------

class AttachBattleDown : public ::google::protobuf::Message {
 public:
  AttachBattleDown();
  virtual ~AttachBattleDown();

  AttachBattleDown(const AttachBattleDown& from);

  inline AttachBattleDown& operator=(const AttachBattleDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttachBattleDown& default_instance();

  void Swap(AttachBattleDown* other);

  // implements Message ----------------------------------------------

  AttachBattleDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttachBattleDown& from);
  void MergeFrom(const AttachBattleDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional .SyncBattleDown syncBattleDown = 2;
  inline bool has_syncbattledown() const;
  inline void clear_syncbattledown();
  static const int kSyncBattleDownFieldNumber = 2;
  inline const ::SyncBattleDown& syncbattledown() const;
  inline ::SyncBattleDown* mutable_syncbattledown();
  inline ::SyncBattleDown* release_syncbattledown();
  inline void set_allocated_syncbattledown(::SyncBattleDown* syncbattledown);

  // optional uint32 countdown = 3;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 3;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AttachBattleDown)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_syncbattledown();
  inline void clear_has_syncbattledown();
  inline void set_has_countdown();
  inline void clear_has_countdown();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SyncBattleDown* syncbattledown_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 countdown_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static AttachBattleDown* default_instance_;
};
// -------------------------------------------------------------------

class SyncBattleUp : public ::google::protobuf::Message {
 public:
  SyncBattleUp();
  virtual ~SyncBattleUp();

  SyncBattleUp(const SyncBattleUp& from);

  inline SyncBattleUp& operator=(const SyncBattleUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncBattleUp& default_instance();

  void Swap(SyncBattleUp* other);

  // implements Message ----------------------------------------------

  SyncBattleUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncBattleUp& from);
  void MergeFrom(const SyncBattleUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string battleId = 1;
  inline bool has_battleid() const;
  inline void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  inline const ::std::string& battleid() const;
  inline void set_battleid(const ::std::string& value);
  inline void set_battleid(const char* value);
  inline void set_battleid(const char* value, size_t size);
  inline ::std::string* mutable_battleid();
  inline ::std::string* release_battleid();
  inline void set_allocated_battleid(::std::string* battleid);

  // required string userId = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 2;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  inline void set_allocated_userid(::std::string* userid);

  // @@protoc_insertion_point(class_scope:SyncBattleUp)
 private:
  inline void set_has_battleid();
  inline void clear_has_battleid();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* battleid_;
  ::std::string* userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static SyncBattleUp* default_instance_;
};
// -------------------------------------------------------------------

class SyncBattleDown : public ::google::protobuf::Message {
 public:
  SyncBattleDown();
  virtual ~SyncBattleDown();

  SyncBattleDown(const SyncBattleDown& from);

  inline SyncBattleDown& operator=(const SyncBattleDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncBattleDown& default_instance();

  void Swap(SyncBattleDown* other);

  // implements Message ----------------------------------------------

  SyncBattleDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncBattleDown& from);
  void MergeFrom(const SyncBattleDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .BattleBean battleBean = 1;
  inline bool has_battlebean() const;
  inline void clear_battlebean();
  static const int kBattleBeanFieldNumber = 1;
  inline const ::BattleBean& battlebean() const;
  inline ::BattleBean* mutable_battlebean();
  inline ::BattleBean* release_battlebean();
  inline void set_allocated_battlebean(::BattleBean* battlebean);

  // repeated .HeroBean heroBeans = 2;
  inline int herobeans_size() const;
  inline void clear_herobeans();
  static const int kHeroBeansFieldNumber = 2;
  inline const ::HeroBean& herobeans(int index) const;
  inline ::HeroBean* mutable_herobeans(int index);
  inline ::HeroBean* add_herobeans();
  inline const ::google::protobuf::RepeatedPtrField< ::HeroBean >&
      herobeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::HeroBean >*
      mutable_herobeans();

  // repeated .PetBean petBeans = 3;
  inline int petbeans_size() const;
  inline void clear_petbeans();
  static const int kPetBeansFieldNumber = 3;
  inline const ::PetBean& petbeans(int index) const;
  inline ::PetBean* mutable_petbeans(int index);
  inline ::PetBean* add_petbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::PetBean >&
      petbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::PetBean >*
      mutable_petbeans();

  // repeated .BulletBean bulletBeans = 4;
  inline int bulletbeans_size() const;
  inline void clear_bulletbeans();
  static const int kBulletBeansFieldNumber = 4;
  inline const ::BulletBean& bulletbeans(int index) const;
  inline ::BulletBean* mutable_bulletbeans(int index);
  inline ::BulletBean* add_bulletbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::BulletBean >&
      bulletbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::BulletBean >*
      mutable_bulletbeans();

  // repeated .TrapBean trapBeans = 5;
  inline int trapbeans_size() const;
  inline void clear_trapbeans();
  static const int kTrapBeansFieldNumber = 5;
  inline const ::TrapBean& trapbeans(int index) const;
  inline ::TrapBean* mutable_trapbeans(int index);
  inline ::TrapBean* add_trapbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::TrapBean >&
      trapbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::TrapBean >*
      mutable_trapbeans();

  // repeated .PlayerBean playerBeans = 6;
  inline int playerbeans_size() const;
  inline void clear_playerbeans();
  static const int kPlayerBeansFieldNumber = 6;
  inline const ::PlayerBean& playerbeans(int index) const;
  inline ::PlayerBean* mutable_playerbeans(int index);
  inline ::PlayerBean* add_playerbeans();
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerBean >&
      playerbeans() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerBean >*
      mutable_playerbeans();

  // @@protoc_insertion_point(class_scope:SyncBattleDown)
 private:
  inline void set_has_battlebean();
  inline void clear_has_battlebean();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BattleBean* battlebean_;
  ::google::protobuf::RepeatedPtrField< ::HeroBean > herobeans_;
  ::google::protobuf::RepeatedPtrField< ::PetBean > petbeans_;
  ::google::protobuf::RepeatedPtrField< ::BulletBean > bulletbeans_;
  ::google::protobuf::RepeatedPtrField< ::TrapBean > trapbeans_;
  ::google::protobuf::RepeatedPtrField< ::PlayerBean > playerbeans_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static SyncBattleDown* default_instance_;
};
// -------------------------------------------------------------------

class BattleStepDown : public ::google::protobuf::Message {
 public:
  BattleStepDown();
  virtual ~BattleStepDown();

  BattleStepDown(const BattleStepDown& from);

  inline BattleStepDown& operator=(const BattleStepDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleStepDown& default_instance();

  void Swap(BattleStepDown* other);

  // implements Message ----------------------------------------------

  BattleStepDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleStepDown& from);
  void MergeFrom(const BattleStepDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 step = 1;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 1;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BattleStepDown)
 private:
  inline void set_has_step();
  inline void clear_has_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 step_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static BattleStepDown* default_instance_;
};
// -------------------------------------------------------------------

class MagicActionUp : public ::google::protobuf::Message {
 public:
  MagicActionUp();
  virtual ~MagicActionUp();

  MagicActionUp(const MagicActionUp& from);

  inline MagicActionUp& operator=(const MagicActionUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicActionUp& default_instance();

  void Swap(MagicActionUp* other);

  // implements Message ----------------------------------------------

  MagicActionUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicActionUp& from);
  void MergeFrom(const MagicActionUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required uint32 skillId = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // required .ActionTargetBean actionTarget = 3;
  inline bool has_actiontarget() const;
  inline void clear_actiontarget();
  static const int kActionTargetFieldNumber = 3;
  inline const ::ActionTargetBean& actiontarget() const;
  inline ::ActionTargetBean* mutable_actiontarget();
  inline ::ActionTargetBean* release_actiontarget();
  inline void set_allocated_actiontarget(::ActionTargetBean* actiontarget);

  // @@protoc_insertion_point(class_scope:MagicActionUp)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_actiontarget();
  inline void clear_has_actiontarget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 performerid_;
  ::google::protobuf::uint32 skillid_;
  ::ActionTargetBean* actiontarget_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static MagicActionUp* default_instance_;
};
// -------------------------------------------------------------------

class MagicActionDown : public ::google::protobuf::Message {
 public:
  MagicActionDown();
  virtual ~MagicActionDown();

  MagicActionDown(const MagicActionDown& from);

  inline MagicActionDown& operator=(const MagicActionDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MagicActionDown& default_instance();

  void Swap(MagicActionDown* other);

  // implements Message ----------------------------------------------

  MagicActionDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MagicActionDown& from);
  void MergeFrom(const MagicActionDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required uint32 skillId = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional .ActionTargetBean actionTarget = 3;
  inline bool has_actiontarget() const;
  inline void clear_actiontarget();
  static const int kActionTargetFieldNumber = 3;
  inline const ::ActionTargetBean& actiontarget() const;
  inline ::ActionTargetBean* mutable_actiontarget();
  inline ::ActionTargetBean* release_actiontarget();
  inline void set_allocated_actiontarget(::ActionTargetBean* actiontarget);

  // optional uint32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional .MagicResaultBean magicResaultBean = 5;
  inline bool has_magicresaultbean() const;
  inline void clear_magicresaultbean();
  static const int kMagicResaultBeanFieldNumber = 5;
  inline const ::MagicResaultBean& magicresaultbean() const;
  inline ::MagicResaultBean* mutable_magicresaultbean();
  inline ::MagicResaultBean* release_magicresaultbean();
  inline void set_allocated_magicresaultbean(::MagicResaultBean* magicresaultbean);

  // required uint32 source = 6;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 6;
  inline ::google::protobuf::uint32 source() const;
  inline void set_source(::google::protobuf::uint32 value);

  // optional uint32 mstate = 7;
  inline bool has_mstate() const;
  inline void clear_mstate();
  static const int kMstateFieldNumber = 7;
  inline ::google::protobuf::uint32 mstate() const;
  inline void set_mstate(::google::protobuf::uint32 value);

  // optional uint32 errorType = 8;
  inline bool has_errortype() const;
  inline void clear_errortype();
  static const int kErrorTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 errortype() const;
  inline void set_errortype(::google::protobuf::uint32 value);

  // optional uint32 errorValue = 9;
  inline bool has_errorvalue() const;
  inline void clear_errorvalue();
  static const int kErrorValueFieldNumber = 9;
  inline ::google::protobuf::uint32 errorvalue() const;
  inline void set_errorvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MagicActionDown)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_actiontarget();
  inline void clear_has_actiontarget();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_magicresaultbean();
  inline void clear_has_magicresaultbean();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_mstate();
  inline void clear_has_mstate();
  inline void set_has_errortype();
  inline void clear_has_errortype();
  inline void set_has_errorvalue();
  inline void clear_has_errorvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 performerid_;
  ::google::protobuf::uint32 skillid_;
  ::ActionTargetBean* actiontarget_;
  ::MagicResaultBean* magicresaultbean_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 mstate_;
  ::google::protobuf::uint32 errortype_;
  ::google::protobuf::uint32 errorvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static MagicActionDown* default_instance_;
};
// -------------------------------------------------------------------

class MoveActionUp : public ::google::protobuf::Message {
 public:
  MoveActionUp();
  virtual ~MoveActionUp();

  MoveActionUp(const MoveActionUp& from);

  inline MoveActionUp& operator=(const MoveActionUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveActionUp& default_instance();

  void Swap(MoveActionUp* other);

  // implements Message ----------------------------------------------

  MoveActionUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveActionUp& from);
  void MergeFrom(const MoveActionUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required .ActionTargetBean actionTarget = 2;
  inline bool has_actiontarget() const;
  inline void clear_actiontarget();
  static const int kActionTargetFieldNumber = 2;
  inline const ::ActionTargetBean& actiontarget() const;
  inline ::ActionTargetBean* mutable_actiontarget();
  inline ::ActionTargetBean* release_actiontarget();
  inline void set_allocated_actiontarget(::ActionTargetBean* actiontarget);

  // optional bool isAdjust = 3;
  inline bool has_isadjust() const;
  inline void clear_isadjust();
  static const int kIsAdjustFieldNumber = 3;
  inline bool isadjust() const;
  inline void set_isadjust(bool value);

  // @@protoc_insertion_point(class_scope:MoveActionUp)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_actiontarget();
  inline void clear_has_actiontarget();
  inline void set_has_isadjust();
  inline void clear_has_isadjust();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ActionTargetBean* actiontarget_;
  ::google::protobuf::uint32 performerid_;
  bool isadjust_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static MoveActionUp* default_instance_;
};
// -------------------------------------------------------------------

class MoveActionDown : public ::google::protobuf::Message {
 public:
  MoveActionDown();
  virtual ~MoveActionDown();

  MoveActionDown(const MoveActionDown& from);

  inline MoveActionDown& operator=(const MoveActionDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveActionDown& default_instance();

  void Swap(MoveActionDown* other);

  // implements Message ----------------------------------------------

  MoveActionDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveActionDown& from);
  void MergeFrom(const MoveActionDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required .ActionTargetBean actionTarget = 2;
  inline bool has_actiontarget() const;
  inline void clear_actiontarget();
  static const int kActionTargetFieldNumber = 2;
  inline const ::ActionTargetBean& actiontarget() const;
  inline ::ActionTargetBean* mutable_actiontarget();
  inline ::ActionTargetBean* release_actiontarget();
  inline void set_allocated_actiontarget(::ActionTargetBean* actiontarget);

  // required uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // required uint32 delayTime = 4;
  inline bool has_delaytime() const;
  inline void clear_delaytime();
  static const int kDelayTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 delaytime() const;
  inline void set_delaytime(::google::protobuf::uint32 value);

  // required uint32 source = 6;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 6;
  inline ::google::protobuf::uint32 source() const;
  inline void set_source(::google::protobuf::uint32 value);

  // optional uint32 mstate = 7;
  inline bool has_mstate() const;
  inline void clear_mstate();
  static const int kMstateFieldNumber = 7;
  inline ::google::protobuf::uint32 mstate() const;
  inline void set_mstate(::google::protobuf::uint32 value);

  // optional uint32 type = 8;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional bool isAdjust = 9;
  inline bool has_isadjust() const;
  inline void clear_isadjust();
  static const int kIsAdjustFieldNumber = 9;
  inline bool isadjust() const;
  inline void set_isadjust(bool value);

  // @@protoc_insertion_point(class_scope:MoveActionDown)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_actiontarget();
  inline void clear_has_actiontarget();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_delaytime();
  inline void clear_has_delaytime();
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_mstate();
  inline void clear_has_mstate();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isadjust();
  inline void clear_has_isadjust();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ActionTargetBean* actiontarget_;
  ::google::protobuf::uint32 performerid_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 delaytime_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 mstate_;
  ::google::protobuf::uint32 type_;
  bool isadjust_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static MoveActionDown* default_instance_;
};
// -------------------------------------------------------------------

class RemoveDown : public ::google::protobuf::Message {
 public:
  RemoveDown();
  virtual ~RemoveDown();

  RemoveDown(const RemoveDown& from);

  inline RemoveDown& operator=(const RemoveDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveDown& default_instance();

  void Swap(RemoveDown* other);

  // implements Message ----------------------------------------------

  RemoveDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveDown& from);
  void MergeFrom(const RemoveDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional .MagicResaultBean magicResaultBean = 3;
  inline bool has_magicresaultbean() const;
  inline void clear_magicresaultbean();
  static const int kMagicResaultBeanFieldNumber = 3;
  inline const ::MagicResaultBean& magicresaultbean() const;
  inline ::MagicResaultBean* mutable_magicresaultbean();
  inline ::MagicResaultBean* release_magicresaultbean();
  inline void set_allocated_magicresaultbean(::MagicResaultBean* magicresaultbean);

  // @@protoc_insertion_point(class_scope:RemoveDown)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_magicresaultbean();
  inline void clear_has_magicresaultbean();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::MagicResaultBean* magicresaultbean_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static RemoveDown* default_instance_;
};
// -------------------------------------------------------------------

class IdleActionUp : public ::google::protobuf::Message {
 public:
  IdleActionUp();
  virtual ~IdleActionUp();

  IdleActionUp(const IdleActionUp& from);

  inline IdleActionUp& operator=(const IdleActionUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IdleActionUp& default_instance();

  void Swap(IdleActionUp* other);

  // implements Message ----------------------------------------------

  IdleActionUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IdleActionUp& from);
  void MergeFrom(const IdleActionUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IdleActionUp)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 performerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static IdleActionUp* default_instance_;
};
// -------------------------------------------------------------------

class IdleActionDown : public ::google::protobuf::Message {
 public:
  IdleActionDown();
  virtual ~IdleActionDown();

  IdleActionDown(const IdleActionDown& from);

  inline IdleActionDown& operator=(const IdleActionDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IdleActionDown& default_instance();

  void Swap(IdleActionDown* other);

  // implements Message ----------------------------------------------

  IdleActionDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IdleActionDown& from);
  void MergeFrom(const IdleActionDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required .CoordinateBean position = 2;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 2;
  inline const ::CoordinateBean& position() const;
  inline ::CoordinateBean* mutable_position();
  inline ::CoordinateBean* release_position();
  inline void set_allocated_position(::CoordinateBean* position);

  // @@protoc_insertion_point(class_scope:IdleActionDown)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CoordinateBean* position_;
  ::google::protobuf::uint32 performerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static IdleActionDown* default_instance_;
};
// -------------------------------------------------------------------

class NetDelayCheckUp : public ::google::protobuf::Message {
 public:
  NetDelayCheckUp();
  virtual ~NetDelayCheckUp();

  NetDelayCheckUp(const NetDelayCheckUp& from);

  inline NetDelayCheckUp& operator=(const NetDelayCheckUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetDelayCheckUp& default_instance();

  void Swap(NetDelayCheckUp* other);

  // implements Message ----------------------------------------------

  NetDelayCheckUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetDelayCheckUp& from);
  void MergeFrom(const NetDelayCheckUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 step = 1;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 1;
  inline ::google::protobuf::uint32 step() const;
  inline void set_step(::google::protobuf::uint32 value);

  // required uint64 cTime = 2;
  inline bool has_ctime() const;
  inline void clear_ctime();
  static const int kCTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 ctime() const;
  inline void set_ctime(::google::protobuf::uint64 value);

  // optional uint32 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetDelayCheckUp)
 private:
  inline void set_has_step();
  inline void clear_has_step();
  inline void set_has_ctime();
  inline void clear_has_ctime();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 ctime_;
  ::google::protobuf::uint32 step_;
  ::google::protobuf::uint32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static NetDelayCheckUp* default_instance_;
};
// -------------------------------------------------------------------

class NetDelayCheckDown : public ::google::protobuf::Message {
 public:
  NetDelayCheckDown();
  virtual ~NetDelayCheckDown();

  NetDelayCheckDown(const NetDelayCheckDown& from);

  inline NetDelayCheckDown& operator=(const NetDelayCheckDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetDelayCheckDown& default_instance();

  void Swap(NetDelayCheckDown* other);

  // implements Message ----------------------------------------------

  NetDelayCheckDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetDelayCheckDown& from);
  void MergeFrom(const NetDelayCheckDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // required uint64 cTime = 2;
  inline bool has_ctime() const;
  inline void clear_ctime();
  static const int kCTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 ctime() const;
  inline void set_ctime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetDelayCheckDown)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_ctime();
  inline void clear_has_ctime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 ctime_;
  ::google::protobuf::uint32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static NetDelayCheckDown* default_instance_;
};
// -------------------------------------------------------------------

class DeadDown : public ::google::protobuf::Message {
 public:
  DeadDown();
  virtual ~DeadDown();

  DeadDown(const DeadDown& from);

  inline DeadDown& operator=(const DeadDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeadDown& default_instance();

  void Swap(DeadDown* other);

  // implements Message ----------------------------------------------

  DeadDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeadDown& from);
  void MergeFrom(const DeadDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DeadDown)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 performerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static DeadDown* default_instance_;
};
// -------------------------------------------------------------------

class TrapTriggerDown : public ::google::protobuf::Message {
 public:
  TrapTriggerDown();
  virtual ~TrapTriggerDown();

  TrapTriggerDown(const TrapTriggerDown& from);

  inline TrapTriggerDown& operator=(const TrapTriggerDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrapTriggerDown& default_instance();

  void Swap(TrapTriggerDown* other);

  // implements Message ----------------------------------------------

  TrapTriggerDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrapTriggerDown& from);
  void MergeFrom(const TrapTriggerDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 performerId = 1;
  inline bool has_performerid() const;
  inline void clear_performerid();
  static const int kPerformerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 performerid() const;
  inline void set_performerid(::google::protobuf::uint32 value);

  // required uint32 keyId = 2;
  inline bool has_keyid() const;
  inline void clear_keyid();
  static const int kKeyIdFieldNumber = 2;
  inline ::google::protobuf::uint32 keyid() const;
  inline void set_keyid(::google::protobuf::uint32 value);

  // repeated .TrapTriggerBean trapTriggerBean = 3;
  inline int traptriggerbean_size() const;
  inline void clear_traptriggerbean();
  static const int kTrapTriggerBeanFieldNumber = 3;
  inline const ::TrapTriggerBean& traptriggerbean(int index) const;
  inline ::TrapTriggerBean* mutable_traptriggerbean(int index);
  inline ::TrapTriggerBean* add_traptriggerbean();
  inline const ::google::protobuf::RepeatedPtrField< ::TrapTriggerBean >&
      traptriggerbean() const;
  inline ::google::protobuf::RepeatedPtrField< ::TrapTriggerBean >*
      mutable_traptriggerbean();

  // @@protoc_insertion_point(class_scope:TrapTriggerDown)
 private:
  inline void set_has_performerid();
  inline void clear_has_performerid();
  inline void set_has_keyid();
  inline void clear_has_keyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 performerid_;
  ::google::protobuf::uint32 keyid_;
  ::google::protobuf::RepeatedPtrField< ::TrapTriggerBean > traptriggerbean_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static TrapTriggerDown* default_instance_;
};
// -------------------------------------------------------------------

class BattleOverDown : public ::google::protobuf::Message {
 public:
  BattleOverDown();
  virtual ~BattleOverDown();

  BattleOverDown(const BattleOverDown& from);

  inline BattleOverDown& operator=(const BattleOverDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleOverDown& default_instance();

  void Swap(BattleOverDown* other);

  // implements Message ----------------------------------------------

  BattleOverDown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleOverDown& from);
  void MergeFrom(const BattleOverDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 failureTroopType = 1;
  inline bool has_failuretrooptype() const;
  inline void clear_failuretrooptype();
  static const int kFailureTroopTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 failuretrooptype() const;
  inline void set_failuretrooptype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BattleOverDown)
 private:
  inline void set_has_failuretrooptype();
  inline void clear_has_failuretrooptype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 failuretrooptype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_AssignDesc_2100100_5fBattleMessage_2eproto();
  friend void protobuf_ShutdownFile_2100100_5fBattleMessage_2eproto();

  void InitAsDefaultInstance();
  static BattleOverDown* default_instance_;
};
// ===================================================================


// ===================================================================

// BuffContextBean

// required uint32 performerId = 1;
inline bool BuffContextBean::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffContextBean::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffContextBean::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffContextBean::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 BuffContextBean::performerid() const {
  return performerid_;
}
inline void BuffContextBean::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required uint32 buffKeyId = 2;
inline bool BuffContextBean::has_buffkeyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffContextBean::set_has_buffkeyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffContextBean::clear_has_buffkeyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffContextBean::clear_buffkeyid() {
  buffkeyid_ = 0u;
  clear_has_buffkeyid();
}
inline ::google::protobuf::uint32 BuffContextBean::buffkeyid() const {
  return buffkeyid_;
}
inline void BuffContextBean::set_buffkeyid(::google::protobuf::uint32 value) {
  set_has_buffkeyid();
  buffkeyid_ = value;
}

// required uint32 time = 3;
inline bool BuffContextBean::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffContextBean::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffContextBean::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffContextBean::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 BuffContextBean::time() const {
  return time_;
}
inline void BuffContextBean::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ActionStateContextBean

// required uint32 stateSubType = 1;
inline bool ActionStateContextBean::has_statesubtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionStateContextBean::set_has_statesubtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionStateContextBean::clear_has_statesubtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionStateContextBean::clear_statesubtype() {
  statesubtype_ = 0u;
  clear_has_statesubtype();
}
inline ::google::protobuf::uint32 ActionStateContextBean::statesubtype() const {
  return statesubtype_;
}
inline void ActionStateContextBean::set_statesubtype(::google::protobuf::uint32 value) {
  set_has_statesubtype();
  statesubtype_ = value;
}

// required uint32 startTime = 2;
inline bool ActionStateContextBean::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionStateContextBean::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionStateContextBean::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionStateContextBean::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 ActionStateContextBean::starttime() const {
  return starttime_;
}
inline void ActionStateContextBean::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// -------------------------------------------------------------------

// BattleBean

// required uint32 battleKeyId = 1;
inline bool BattleBean::has_battlekeyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleBean::set_has_battlekeyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleBean::clear_has_battlekeyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleBean::clear_battlekeyid() {
  battlekeyid_ = 0u;
  clear_has_battlekeyid();
}
inline ::google::protobuf::uint32 BattleBean::battlekeyid() const {
  return battlekeyid_;
}
inline void BattleBean::set_battlekeyid(::google::protobuf::uint32 value) {
  set_has_battlekeyid();
  battlekeyid_ = value;
}

// required uint32 currentTime = 2;
inline bool BattleBean::has_currenttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleBean::set_has_currenttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleBean::clear_has_currenttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleBean::clear_currenttime() {
  currenttime_ = 0u;
  clear_has_currenttime();
}
inline ::google::protobuf::uint32 BattleBean::currenttime() const {
  return currenttime_;
}
inline void BattleBean::set_currenttime(::google::protobuf::uint32 value) {
  set_has_currenttime();
  currenttime_ = value;
}

// required uint32 currentState = 3;
inline bool BattleBean::has_currentstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleBean::set_has_currentstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleBean::clear_has_currentstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleBean::clear_currentstate() {
  currentstate_ = 0u;
  clear_has_currentstate();
}
inline ::google::protobuf::uint32 BattleBean::currentstate() const {
  return currentstate_;
}
inline void BattleBean::set_currentstate(::google::protobuf::uint32 value) {
  set_has_currentstate();
  currentstate_ = value;
}

// -------------------------------------------------------------------

// UserEntityBean

// required uint64 uid = 1;
inline bool UserEntityBean::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserEntityBean::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserEntityBean::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserEntityBean::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 UserEntityBean::uid() const {
  return uid_;
}
inline void UserEntityBean::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 level = 2;
inline bool UserEntityBean::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserEntityBean::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserEntityBean::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserEntityBean::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 UserEntityBean::level() const {
  return level_;
}
inline void UserEntityBean::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PlayerBean

// required .UserEntityBean userEntityBean = 1;
inline bool PlayerBean::has_userentitybean() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerBean::set_has_userentitybean() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerBean::clear_has_userentitybean() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerBean::clear_userentitybean() {
  if (userentitybean_ != NULL) userentitybean_->::UserEntityBean::Clear();
  clear_has_userentitybean();
}
inline const ::UserEntityBean& PlayerBean::userentitybean() const {
  return userentitybean_ != NULL ? *userentitybean_ : *default_instance_->userentitybean_;
}
inline ::UserEntityBean* PlayerBean::mutable_userentitybean() {
  set_has_userentitybean();
  if (userentitybean_ == NULL) userentitybean_ = new ::UserEntityBean;
  return userentitybean_;
}
inline ::UserEntityBean* PlayerBean::release_userentitybean() {
  clear_has_userentitybean();
  ::UserEntityBean* temp = userentitybean_;
  userentitybean_ = NULL;
  return temp;
}
inline void PlayerBean::set_allocated_userentitybean(::UserEntityBean* userentitybean) {
  delete userentitybean_;
  userentitybean_ = userentitybean;
  if (userentitybean) {
    set_has_userentitybean();
  } else {
    clear_has_userentitybean();
  }
}

// required uint32 troopType = 2;
inline bool PlayerBean::has_trooptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerBean::set_has_trooptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerBean::clear_has_trooptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerBean::clear_trooptype() {
  trooptype_ = 0u;
  clear_has_trooptype();
}
inline ::google::protobuf::uint32 PlayerBean::trooptype() const {
  return trooptype_;
}
inline void PlayerBean::set_trooptype(::google::protobuf::uint32 value) {
  set_has_trooptype();
  trooptype_ = value;
}

// -------------------------------------------------------------------

// HeroEntityBean

// required uint32 id = 1;
inline bool HeroEntityBean::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroEntityBean::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroEntityBean::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroEntityBean::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HeroEntityBean::id() const {
  return id_;
}
inline void HeroEntityBean::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint64 uid = 2;
inline bool HeroEntityBean::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroEntityBean::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroEntityBean::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroEntityBean::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 HeroEntityBean::uid() const {
  return uid_;
}
inline void HeroEntityBean::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 level = 3;
inline bool HeroEntityBean::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroEntityBean::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroEntityBean::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroEntityBean::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 HeroEntityBean::level() const {
  return level_;
}
inline void HeroEntityBean::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 quality = 4;
inline bool HeroEntityBean::has_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroEntityBean::set_has_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroEntityBean::clear_has_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroEntityBean::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 HeroEntityBean::quality() const {
  return quality_;
}
inline void HeroEntityBean::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// required uint32 star = 5;
inline bool HeroEntityBean::has_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroEntityBean::set_has_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroEntityBean::clear_has_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroEntityBean::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 HeroEntityBean::star() const {
  return star_;
}
inline void HeroEntityBean::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// HeroBean

// optional uint32 performerId = 1;
inline bool HeroBean::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroBean::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroBean::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroBean::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 HeroBean::performerid() const {
  return performerid_;
}
inline void HeroBean::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required uint64 uid = 2;
inline bool HeroBean::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroBean::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroBean::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroBean::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 HeroBean::uid() const {
  return uid_;
}
inline void HeroBean::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// required .CoordinateBean position = 3;
inline bool HeroBean::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroBean::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroBean::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroBean::clear_position() {
  if (position_ != NULL) position_->::CoordinateBean::Clear();
  clear_has_position();
}
inline const ::CoordinateBean& HeroBean::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::CoordinateBean* HeroBean::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::CoordinateBean;
  return position_;
}
inline ::CoordinateBean* HeroBean::release_position() {
  clear_has_position();
  ::CoordinateBean* temp = position_;
  position_ = NULL;
  return temp;
}
inline void HeroBean::set_allocated_position(::CoordinateBean* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// required .HeroEntityBean heroEntityBean = 4;
inline bool HeroBean::has_heroentitybean() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroBean::set_has_heroentitybean() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroBean::clear_has_heroentitybean() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroBean::clear_heroentitybean() {
  if (heroentitybean_ != NULL) heroentitybean_->::HeroEntityBean::Clear();
  clear_has_heroentitybean();
}
inline const ::HeroEntityBean& HeroBean::heroentitybean() const {
  return heroentitybean_ != NULL ? *heroentitybean_ : *default_instance_->heroentitybean_;
}
inline ::HeroEntityBean* HeroBean::mutable_heroentitybean() {
  set_has_heroentitybean();
  if (heroentitybean_ == NULL) heroentitybean_ = new ::HeroEntityBean;
  return heroentitybean_;
}
inline ::HeroEntityBean* HeroBean::release_heroentitybean() {
  clear_has_heroentitybean();
  ::HeroEntityBean* temp = heroentitybean_;
  heroentitybean_ = NULL;
  return temp;
}
inline void HeroBean::set_allocated_heroentitybean(::HeroEntityBean* heroentitybean) {
  delete heroentitybean_;
  heroentitybean_ = heroentitybean;
  if (heroentitybean) {
    set_has_heroentitybean();
  } else {
    clear_has_heroentitybean();
  }
}

// repeated uint32 currentAttrs = 5;
inline int HeroBean::currentattrs_size() const {
  return currentattrs_.size();
}
inline void HeroBean::clear_currentattrs() {
  currentattrs_.Clear();
}
inline ::google::protobuf::uint32 HeroBean::currentattrs(int index) const {
  return currentattrs_.Get(index);
}
inline void HeroBean::set_currentattrs(int index, ::google::protobuf::uint32 value) {
  currentattrs_.Set(index, value);
}
inline void HeroBean::add_currentattrs(::google::protobuf::uint32 value) {
  currentattrs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HeroBean::currentattrs() const {
  return currentattrs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HeroBean::mutable_currentattrs() {
  return &currentattrs_;
}

// repeated .BuffContextBean buffContextBeans = 6;
inline int HeroBean::buffcontextbeans_size() const {
  return buffcontextbeans_.size();
}
inline void HeroBean::clear_buffcontextbeans() {
  buffcontextbeans_.Clear();
}
inline const ::BuffContextBean& HeroBean::buffcontextbeans(int index) const {
  return buffcontextbeans_.Get(index);
}
inline ::BuffContextBean* HeroBean::mutable_buffcontextbeans(int index) {
  return buffcontextbeans_.Mutable(index);
}
inline ::BuffContextBean* HeroBean::add_buffcontextbeans() {
  return buffcontextbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuffContextBean >&
HeroBean::buffcontextbeans() const {
  return buffcontextbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuffContextBean >*
HeroBean::mutable_buffcontextbeans() {
  return &buffcontextbeans_;
}

// repeated .ActionStateContextBean actionStateContextBeans = 7;
inline int HeroBean::actionstatecontextbeans_size() const {
  return actionstatecontextbeans_.size();
}
inline void HeroBean::clear_actionstatecontextbeans() {
  actionstatecontextbeans_.Clear();
}
inline const ::ActionStateContextBean& HeroBean::actionstatecontextbeans(int index) const {
  return actionstatecontextbeans_.Get(index);
}
inline ::ActionStateContextBean* HeroBean::mutable_actionstatecontextbeans(int index) {
  return actionstatecontextbeans_.Mutable(index);
}
inline ::ActionStateContextBean* HeroBean::add_actionstatecontextbeans() {
  return actionstatecontextbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >&
HeroBean::actionstatecontextbeans() const {
  return actionstatecontextbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >*
HeroBean::mutable_actionstatecontextbeans() {
  return &actionstatecontextbeans_;
}

// repeated .MagicCDBean magicCDBeans = 8;
inline int HeroBean::magiccdbeans_size() const {
  return magiccdbeans_.size();
}
inline void HeroBean::clear_magiccdbeans() {
  magiccdbeans_.Clear();
}
inline const ::MagicCDBean& HeroBean::magiccdbeans(int index) const {
  return magiccdbeans_.Get(index);
}
inline ::MagicCDBean* HeroBean::mutable_magiccdbeans(int index) {
  return magiccdbeans_.Mutable(index);
}
inline ::MagicCDBean* HeroBean::add_magiccdbeans() {
  return magiccdbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MagicCDBean >&
HeroBean::magiccdbeans() const {
  return magiccdbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::MagicCDBean >*
HeroBean::mutable_magiccdbeans() {
  return &magiccdbeans_;
}

// optional uint32 retinueSkillId = 9;
inline bool HeroBean::has_retinueskillid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HeroBean::set_has_retinueskillid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HeroBean::clear_has_retinueskillid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HeroBean::clear_retinueskillid() {
  retinueskillid_ = 0u;
  clear_has_retinueskillid();
}
inline ::google::protobuf::uint32 HeroBean::retinueskillid() const {
  return retinueskillid_;
}
inline void HeroBean::set_retinueskillid(::google::protobuf::uint32 value) {
  set_has_retinueskillid();
  retinueskillid_ = value;
}

// -------------------------------------------------------------------

// MagicCDBean

// required uint32 skillId = 1;
inline bool MagicCDBean::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicCDBean::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicCDBean::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicCDBean::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 MagicCDBean::skillid() const {
  return skillid_;
}
inline void MagicCDBean::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required int32 time = 2;
inline bool MagicCDBean::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MagicCDBean::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MagicCDBean::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MagicCDBean::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 MagicCDBean::time() const {
  return time_;
}
inline void MagicCDBean::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PetBean

// required uint32 id = 1;
inline bool PetBean::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetBean::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetBean::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetBean::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PetBean::id() const {
  return id_;
}
inline void PetBean::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool PetBean::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetBean::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetBean::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetBean::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PetBean::level() const {
  return level_;
}
inline void PetBean::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 performerId = 3;
inline bool PetBean::has_performerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetBean::set_has_performerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetBean::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetBean::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 PetBean::performerid() const {
  return performerid_;
}
inline void PetBean::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required uint32 sourceId = 4;
inline bool PetBean::has_sourceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetBean::set_has_sourceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetBean::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetBean::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 PetBean::sourceid() const {
  return sourceid_;
}
inline void PetBean::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
}

// required uint64 uid = 5;
inline bool PetBean::has_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetBean::set_has_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetBean::clear_has_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetBean::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 PetBean::uid() const {
  return uid_;
}
inline void PetBean::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// required .CoordinateBean position = 6;
inline bool PetBean::has_position() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PetBean::set_has_position() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PetBean::clear_has_position() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PetBean::clear_position() {
  if (position_ != NULL) position_->::CoordinateBean::Clear();
  clear_has_position();
}
inline const ::CoordinateBean& PetBean::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::CoordinateBean* PetBean::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::CoordinateBean;
  return position_;
}
inline ::CoordinateBean* PetBean::release_position() {
  clear_has_position();
  ::CoordinateBean* temp = position_;
  position_ = NULL;
  return temp;
}
inline void PetBean::set_allocated_position(::CoordinateBean* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// repeated uint32 currentAttrs = 7;
inline int PetBean::currentattrs_size() const {
  return currentattrs_.size();
}
inline void PetBean::clear_currentattrs() {
  currentattrs_.Clear();
}
inline ::google::protobuf::uint32 PetBean::currentattrs(int index) const {
  return currentattrs_.Get(index);
}
inline void PetBean::set_currentattrs(int index, ::google::protobuf::uint32 value) {
  currentattrs_.Set(index, value);
}
inline void PetBean::add_currentattrs(::google::protobuf::uint32 value) {
  currentattrs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PetBean::currentattrs() const {
  return currentattrs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PetBean::mutable_currentattrs() {
  return &currentattrs_;
}

// repeated .BuffContextBean buffContextBeans = 8;
inline int PetBean::buffcontextbeans_size() const {
  return buffcontextbeans_.size();
}
inline void PetBean::clear_buffcontextbeans() {
  buffcontextbeans_.Clear();
}
inline const ::BuffContextBean& PetBean::buffcontextbeans(int index) const {
  return buffcontextbeans_.Get(index);
}
inline ::BuffContextBean* PetBean::mutable_buffcontextbeans(int index) {
  return buffcontextbeans_.Mutable(index);
}
inline ::BuffContextBean* PetBean::add_buffcontextbeans() {
  return buffcontextbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BuffContextBean >&
PetBean::buffcontextbeans() const {
  return buffcontextbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::BuffContextBean >*
PetBean::mutable_buffcontextbeans() {
  return &buffcontextbeans_;
}

// repeated .ActionStateContextBean actionStateContextBeans = 9;
inline int PetBean::actionstatecontextbeans_size() const {
  return actionstatecontextbeans_.size();
}
inline void PetBean::clear_actionstatecontextbeans() {
  actionstatecontextbeans_.Clear();
}
inline const ::ActionStateContextBean& PetBean::actionstatecontextbeans(int index) const {
  return actionstatecontextbeans_.Get(index);
}
inline ::ActionStateContextBean* PetBean::mutable_actionstatecontextbeans(int index) {
  return actionstatecontextbeans_.Mutable(index);
}
inline ::ActionStateContextBean* PetBean::add_actionstatecontextbeans() {
  return actionstatecontextbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >&
PetBean::actionstatecontextbeans() const {
  return actionstatecontextbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >*
PetBean::mutable_actionstatecontextbeans() {
  return &actionstatecontextbeans_;
}

// repeated .MagicCDBean magicCDBeans = 10;
inline int PetBean::magiccdbeans_size() const {
  return magiccdbeans_.size();
}
inline void PetBean::clear_magiccdbeans() {
  magiccdbeans_.Clear();
}
inline const ::MagicCDBean& PetBean::magiccdbeans(int index) const {
  return magiccdbeans_.Get(index);
}
inline ::MagicCDBean* PetBean::mutable_magiccdbeans(int index) {
  return magiccdbeans_.Mutable(index);
}
inline ::MagicCDBean* PetBean::add_magiccdbeans() {
  return magiccdbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MagicCDBean >&
PetBean::magiccdbeans() const {
  return magiccdbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::MagicCDBean >*
PetBean::mutable_magiccdbeans() {
  return &magiccdbeans_;
}

// -------------------------------------------------------------------

// BulletBean

// required uint32 effectId = 1;
inline bool BulletBean::has_effectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BulletBean::set_has_effectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BulletBean::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BulletBean::clear_effectid() {
  effectid_ = 0u;
  clear_has_effectid();
}
inline ::google::protobuf::uint32 BulletBean::effectid() const {
  return effectid_;
}
inline void BulletBean::set_effectid(::google::protobuf::uint32 value) {
  set_has_effectid();
  effectid_ = value;
}

// optional uint32 performerId = 2;
inline bool BulletBean::has_performerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BulletBean::set_has_performerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BulletBean::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BulletBean::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 BulletBean::performerid() const {
  return performerid_;
}
inline void BulletBean::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required uint32 sourceId = 3;
inline bool BulletBean::has_sourceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BulletBean::set_has_sourceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BulletBean::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BulletBean::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 BulletBean::sourceid() const {
  return sourceid_;
}
inline void BulletBean::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
}

// required uint64 uid = 4;
inline bool BulletBean::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BulletBean::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BulletBean::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BulletBean::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 BulletBean::uid() const {
  return uid_;
}
inline void BulletBean::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// required .CoordinateBean position = 5;
inline bool BulletBean::has_position() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BulletBean::set_has_position() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BulletBean::clear_has_position() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BulletBean::clear_position() {
  if (position_ != NULL) position_->::CoordinateBean::Clear();
  clear_has_position();
}
inline const ::CoordinateBean& BulletBean::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::CoordinateBean* BulletBean::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::CoordinateBean;
  return position_;
}
inline ::CoordinateBean* BulletBean::release_position() {
  clear_has_position();
  ::CoordinateBean* temp = position_;
  position_ = NULL;
  return temp;
}
inline void BulletBean::set_allocated_position(::CoordinateBean* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// repeated .ActionStateContextBean actionStateContextBeans = 6;
inline int BulletBean::actionstatecontextbeans_size() const {
  return actionstatecontextbeans_.size();
}
inline void BulletBean::clear_actionstatecontextbeans() {
  actionstatecontextbeans_.Clear();
}
inline const ::ActionStateContextBean& BulletBean::actionstatecontextbeans(int index) const {
  return actionstatecontextbeans_.Get(index);
}
inline ::ActionStateContextBean* BulletBean::mutable_actionstatecontextbeans(int index) {
  return actionstatecontextbeans_.Mutable(index);
}
inline ::ActionStateContextBean* BulletBean::add_actionstatecontextbeans() {
  return actionstatecontextbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >&
BulletBean::actionstatecontextbeans() const {
  return actionstatecontextbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActionStateContextBean >*
BulletBean::mutable_actionstatecontextbeans() {
  return &actionstatecontextbeans_;
}

// -------------------------------------------------------------------

// TrapBean

// required uint32 id = 1;
inline bool TrapBean::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrapBean::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrapBean::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrapBean::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TrapBean::id() const {
  return id_;
}
inline void TrapBean::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 effectId = 2;
inline bool TrapBean::has_effectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrapBean::set_has_effectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrapBean::clear_has_effectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrapBean::clear_effectid() {
  effectid_ = 0u;
  clear_has_effectid();
}
inline ::google::protobuf::uint32 TrapBean::effectid() const {
  return effectid_;
}
inline void TrapBean::set_effectid(::google::protobuf::uint32 value) {
  set_has_effectid();
  effectid_ = value;
}

// required uint32 startTime = 3;
inline bool TrapBean::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrapBean::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrapBean::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrapBean::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 TrapBean::starttime() const {
  return starttime_;
}
inline void TrapBean::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// optional uint32 performerId = 4;
inline bool TrapBean::has_performerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrapBean::set_has_performerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrapBean::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrapBean::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 TrapBean::performerid() const {
  return performerid_;
}
inline void TrapBean::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required uint32 sourceId = 5;
inline bool TrapBean::has_sourceid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TrapBean::set_has_sourceid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TrapBean::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TrapBean::clear_sourceid() {
  sourceid_ = 0u;
  clear_has_sourceid();
}
inline ::google::protobuf::uint32 TrapBean::sourceid() const {
  return sourceid_;
}
inline void TrapBean::set_sourceid(::google::protobuf::uint32 value) {
  set_has_sourceid();
  sourceid_ = value;
}

// required string uid = 6;
inline bool TrapBean::has_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TrapBean::set_has_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TrapBean::clear_has_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TrapBean::clear_uid() {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    uid_->clear();
  }
  clear_has_uid();
}
inline const ::std::string& TrapBean::uid() const {
  return *uid_;
}
inline void TrapBean::set_uid(const ::std::string& value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
}
inline void TrapBean::set_uid(const char* value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
}
inline void TrapBean::set_uid(const char* value, size_t size) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    uid_ = new ::std::string;
  }
  uid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TrapBean::mutable_uid() {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    uid_ = new ::std::string;
  }
  return uid_;
}
inline ::std::string* TrapBean::release_uid() {
  clear_has_uid();
  if (uid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uid_;
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TrapBean::set_allocated_uid(::std::string* uid) {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    delete uid_;
  }
  if (uid) {
    set_has_uid();
    uid_ = uid;
  } else {
    clear_has_uid();
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .CoordinateBean position = 7;
inline bool TrapBean::has_position() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TrapBean::set_has_position() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TrapBean::clear_has_position() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TrapBean::clear_position() {
  if (position_ != NULL) position_->::CoordinateBean::Clear();
  clear_has_position();
}
inline const ::CoordinateBean& TrapBean::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::CoordinateBean* TrapBean::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::CoordinateBean;
  return position_;
}
inline ::CoordinateBean* TrapBean::release_position() {
  clear_has_position();
  ::CoordinateBean* temp = position_;
  position_ = NULL;
  return temp;
}
inline void TrapBean::set_allocated_position(::CoordinateBean* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// -------------------------------------------------------------------

// CoordinateBean

// repeated uint32 c = 1 [packed = true];
inline int CoordinateBean::c_size() const {
  return c_.size();
}
inline void CoordinateBean::clear_c() {
  c_.Clear();
}
inline ::google::protobuf::uint32 CoordinateBean::c(int index) const {
  return c_.Get(index);
}
inline void CoordinateBean::set_c(int index, ::google::protobuf::uint32 value) {
  c_.Set(index, value);
}
inline void CoordinateBean::add_c(::google::protobuf::uint32 value) {
  c_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CoordinateBean::c() const {
  return c_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CoordinateBean::mutable_c() {
  return &c_;
}

// -------------------------------------------------------------------

// ActionTargetBean

// required uint32 targetType = 1;
inline bool ActionTargetBean::has_targettype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionTargetBean::set_has_targettype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionTargetBean::clear_has_targettype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionTargetBean::clear_targettype() {
  targettype_ = 0u;
  clear_has_targettype();
}
inline ::google::protobuf::uint32 ActionTargetBean::targettype() const {
  return targettype_;
}
inline void ActionTargetBean::set_targettype(::google::protobuf::uint32 value) {
  set_has_targettype();
  targettype_ = value;
}

// optional uint32 targetId = 2;
inline bool ActionTargetBean::has_targetid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionTargetBean::set_has_targetid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionTargetBean::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionTargetBean::clear_targetid() {
  targetid_ = 0u;
  clear_has_targetid();
}
inline ::google::protobuf::uint32 ActionTargetBean::targetid() const {
  return targetid_;
}
inline void ActionTargetBean::set_targetid(::google::protobuf::uint32 value) {
  set_has_targetid();
  targetid_ = value;
}

// optional .CoordinateBean areaTarget = 3;
inline bool ActionTargetBean::has_areatarget() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionTargetBean::set_has_areatarget() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionTargetBean::clear_has_areatarget() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionTargetBean::clear_areatarget() {
  if (areatarget_ != NULL) areatarget_->::CoordinateBean::Clear();
  clear_has_areatarget();
}
inline const ::CoordinateBean& ActionTargetBean::areatarget() const {
  return areatarget_ != NULL ? *areatarget_ : *default_instance_->areatarget_;
}
inline ::CoordinateBean* ActionTargetBean::mutable_areatarget() {
  set_has_areatarget();
  if (areatarget_ == NULL) areatarget_ = new ::CoordinateBean;
  return areatarget_;
}
inline ::CoordinateBean* ActionTargetBean::release_areatarget() {
  clear_has_areatarget();
  ::CoordinateBean* temp = areatarget_;
  areatarget_ = NULL;
  return temp;
}
inline void ActionTargetBean::set_allocated_areatarget(::CoordinateBean* areatarget) {
  delete areatarget_;
  areatarget_ = areatarget;
  if (areatarget) {
    set_has_areatarget();
  } else {
    clear_has_areatarget();
  }
}

// -------------------------------------------------------------------

// MagicEffectBean

// required uint32 eid = 1;
inline bool MagicEffectBean::has_eid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicEffectBean::set_has_eid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicEffectBean::clear_has_eid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicEffectBean::clear_eid() {
  eid_ = 0u;
  clear_has_eid();
}
inline ::google::protobuf::uint32 MagicEffectBean::eid() const {
  return eid_;
}
inline void MagicEffectBean::set_eid(::google::protobuf::uint32 value) {
  set_has_eid();
  eid_ = value;
}

// repeated .PerformerEffectBean performerEffectBeans = 2;
inline int MagicEffectBean::performereffectbeans_size() const {
  return performereffectbeans_.size();
}
inline void MagicEffectBean::clear_performereffectbeans() {
  performereffectbeans_.Clear();
}
inline const ::PerformerEffectBean& MagicEffectBean::performereffectbeans(int index) const {
  return performereffectbeans_.Get(index);
}
inline ::PerformerEffectBean* MagicEffectBean::mutable_performereffectbeans(int index) {
  return performereffectbeans_.Mutable(index);
}
inline ::PerformerEffectBean* MagicEffectBean::add_performereffectbeans() {
  return performereffectbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PerformerEffectBean >&
MagicEffectBean::performereffectbeans() const {
  return performereffectbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::PerformerEffectBean >*
MagicEffectBean::mutable_performereffectbeans() {
  return &performereffectbeans_;
}

// repeated .MagicTrapBean trapBean = 3;
inline int MagicEffectBean::trapbean_size() const {
  return trapbean_.size();
}
inline void MagicEffectBean::clear_trapbean() {
  trapbean_.Clear();
}
inline const ::MagicTrapBean& MagicEffectBean::trapbean(int index) const {
  return trapbean_.Get(index);
}
inline ::MagicTrapBean* MagicEffectBean::mutable_trapbean(int index) {
  return trapbean_.Mutable(index);
}
inline ::MagicTrapBean* MagicEffectBean::add_trapbean() {
  return trapbean_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MagicTrapBean >&
MagicEffectBean::trapbean() const {
  return trapbean_;
}
inline ::google::protobuf::RepeatedPtrField< ::MagicTrapBean >*
MagicEffectBean::mutable_trapbean() {
  return &trapbean_;
}

// repeated .MagicPetBean petBean = 4;
inline int MagicEffectBean::petbean_size() const {
  return petbean_.size();
}
inline void MagicEffectBean::clear_petbean() {
  petbean_.Clear();
}
inline const ::MagicPetBean& MagicEffectBean::petbean(int index) const {
  return petbean_.Get(index);
}
inline ::MagicPetBean* MagicEffectBean::mutable_petbean(int index) {
  return petbean_.Mutable(index);
}
inline ::MagicPetBean* MagicEffectBean::add_petbean() {
  return petbean_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MagicPetBean >&
MagicEffectBean::petbean() const {
  return petbean_;
}
inline ::google::protobuf::RepeatedPtrField< ::MagicPetBean >*
MagicEffectBean::mutable_petbean() {
  return &petbean_;
}

// -------------------------------------------------------------------

// PerformerEffectBean

// required uint32 pid = 1;
inline bool PerformerEffectBean::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PerformerEffectBean::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PerformerEffectBean::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PerformerEffectBean::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 PerformerEffectBean::pid() const {
  return pid_;
}
inline void PerformerEffectBean::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
}

// repeated uint32 values = 2;
inline int PerformerEffectBean::values_size() const {
  return values_.size();
}
inline void PerformerEffectBean::clear_values() {
  values_.Clear();
}
inline ::google::protobuf::uint32 PerformerEffectBean::values(int index) const {
  return values_.Get(index);
}
inline void PerformerEffectBean::set_values(int index, ::google::protobuf::uint32 value) {
  values_.Set(index, value);
}
inline void PerformerEffectBean::add_values(::google::protobuf::uint32 value) {
  values_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PerformerEffectBean::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PerformerEffectBean::mutable_values() {
  return &values_;
}

// repeated uint32 effects = 3;
inline int PerformerEffectBean::effects_size() const {
  return effects_.size();
}
inline void PerformerEffectBean::clear_effects() {
  effects_.Clear();
}
inline ::google::protobuf::uint32 PerformerEffectBean::effects(int index) const {
  return effects_.Get(index);
}
inline void PerformerEffectBean::set_effects(int index, ::google::protobuf::uint32 value) {
  effects_.Set(index, value);
}
inline void PerformerEffectBean::add_effects(::google::protobuf::uint32 value) {
  effects_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PerformerEffectBean::effects() const {
  return effects_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PerformerEffectBean::mutable_effects() {
  return &effects_;
}

// repeated uint32 createBuffs = 4;
inline int PerformerEffectBean::createbuffs_size() const {
  return createbuffs_.size();
}
inline void PerformerEffectBean::clear_createbuffs() {
  createbuffs_.Clear();
}
inline ::google::protobuf::uint32 PerformerEffectBean::createbuffs(int index) const {
  return createbuffs_.Get(index);
}
inline void PerformerEffectBean::set_createbuffs(int index, ::google::protobuf::uint32 value) {
  createbuffs_.Set(index, value);
}
inline void PerformerEffectBean::add_createbuffs(::google::protobuf::uint32 value) {
  createbuffs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PerformerEffectBean::createbuffs() const {
  return createbuffs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PerformerEffectBean::mutable_createbuffs() {
  return &createbuffs_;
}

// repeated uint32 deleteBuffs = 5;
inline int PerformerEffectBean::deletebuffs_size() const {
  return deletebuffs_.size();
}
inline void PerformerEffectBean::clear_deletebuffs() {
  deletebuffs_.Clear();
}
inline ::google::protobuf::uint32 PerformerEffectBean::deletebuffs(int index) const {
  return deletebuffs_.Get(index);
}
inline void PerformerEffectBean::set_deletebuffs(int index, ::google::protobuf::uint32 value) {
  deletebuffs_.Set(index, value);
}
inline void PerformerEffectBean::add_deletebuffs(::google::protobuf::uint32 value) {
  deletebuffs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PerformerEffectBean::deletebuffs() const {
  return deletebuffs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PerformerEffectBean::mutable_deletebuffs() {
  return &deletebuffs_;
}

// -------------------------------------------------------------------

// MagicTrapBean

// required uint32 tid = 1;
inline bool MagicTrapBean::has_tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicTrapBean::set_has_tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicTrapBean::clear_has_tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicTrapBean::clear_tid() {
  tid_ = 0u;
  clear_has_tid();
}
inline ::google::protobuf::uint32 MagicTrapBean::tid() const {
  return tid_;
}
inline void MagicTrapBean::set_tid(::google::protobuf::uint32 value) {
  set_has_tid();
  tid_ = value;
}

// required .CoordinateBean position = 2;
inline bool MagicTrapBean::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MagicTrapBean::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MagicTrapBean::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MagicTrapBean::clear_position() {
  if (position_ != NULL) position_->::CoordinateBean::Clear();
  clear_has_position();
}
inline const ::CoordinateBean& MagicTrapBean::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::CoordinateBean* MagicTrapBean::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::CoordinateBean;
  return position_;
}
inline ::CoordinateBean* MagicTrapBean::release_position() {
  clear_has_position();
  ::CoordinateBean* temp = position_;
  position_ = NULL;
  return temp;
}
inline void MagicTrapBean::set_allocated_position(::CoordinateBean* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// required uint32 eid = 3;
inline bool MagicTrapBean::has_eid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MagicTrapBean::set_has_eid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MagicTrapBean::clear_has_eid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MagicTrapBean::clear_eid() {
  eid_ = 0u;
  clear_has_eid();
}
inline ::google::protobuf::uint32 MagicTrapBean::eid() const {
  return eid_;
}
inline void MagicTrapBean::set_eid(::google::protobuf::uint32 value) {
  set_has_eid();
  eid_ = value;
}

// -------------------------------------------------------------------

// MagicPetBean

// required uint32 pid = 1;
inline bool MagicPetBean::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicPetBean::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicPetBean::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicPetBean::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 MagicPetBean::pid() const {
  return pid_;
}
inline void MagicPetBean::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
}

// required .CoordinateBean position = 2;
inline bool MagicPetBean::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MagicPetBean::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MagicPetBean::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MagicPetBean::clear_position() {
  if (position_ != NULL) position_->::CoordinateBean::Clear();
  clear_has_position();
}
inline const ::CoordinateBean& MagicPetBean::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::CoordinateBean* MagicPetBean::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::CoordinateBean;
  return position_;
}
inline ::CoordinateBean* MagicPetBean::release_position() {
  clear_has_position();
  ::CoordinateBean* temp = position_;
  position_ = NULL;
  return temp;
}
inline void MagicPetBean::set_allocated_position(::CoordinateBean* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// required uint32 keyId = 3;
inline bool MagicPetBean::has_keyid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MagicPetBean::set_has_keyid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MagicPetBean::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MagicPetBean::clear_keyid() {
  keyid_ = 0u;
  clear_has_keyid();
}
inline ::google::protobuf::uint32 MagicPetBean::keyid() const {
  return keyid_;
}
inline void MagicPetBean::set_keyid(::google::protobuf::uint32 value) {
  set_has_keyid();
  keyid_ = value;
}

// -------------------------------------------------------------------

// MagicResaultBean

// repeated .MagicEffectBean effectBeans = 1;
inline int MagicResaultBean::effectbeans_size() const {
  return effectbeans_.size();
}
inline void MagicResaultBean::clear_effectbeans() {
  effectbeans_.Clear();
}
inline const ::MagicEffectBean& MagicResaultBean::effectbeans(int index) const {
  return effectbeans_.Get(index);
}
inline ::MagicEffectBean* MagicResaultBean::mutable_effectbeans(int index) {
  return effectbeans_.Mutable(index);
}
inline ::MagicEffectBean* MagicResaultBean::add_effectbeans() {
  return effectbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MagicEffectBean >&
MagicResaultBean::effectbeans() const {
  return effectbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::MagicEffectBean >*
MagicResaultBean::mutable_effectbeans() {
  return &effectbeans_;
}

// -------------------------------------------------------------------

// TrapTriggerBean

// required uint32 pid = 1;
inline bool TrapTriggerBean::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrapTriggerBean::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrapTriggerBean::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrapTriggerBean::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 TrapTriggerBean::pid() const {
  return pid_;
}
inline void TrapTriggerBean::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
}

// optional uint32 value = 2;
inline bool TrapTriggerBean::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrapTriggerBean::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrapTriggerBean::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrapTriggerBean::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 TrapTriggerBean::value() const {
  return value_;
}
inline void TrapTriggerBean::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// repeated uint32 buffKeyId = 3;
inline int TrapTriggerBean::buffkeyid_size() const {
  return buffkeyid_.size();
}
inline void TrapTriggerBean::clear_buffkeyid() {
  buffkeyid_.Clear();
}
inline ::google::protobuf::uint32 TrapTriggerBean::buffkeyid(int index) const {
  return buffkeyid_.Get(index);
}
inline void TrapTriggerBean::set_buffkeyid(int index, ::google::protobuf::uint32 value) {
  buffkeyid_.Set(index, value);
}
inline void TrapTriggerBean::add_buffkeyid(::google::protobuf::uint32 value) {
  buffkeyid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TrapTriggerBean::buffkeyid() const {
  return buffkeyid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TrapTriggerBean::mutable_buffkeyid() {
  return &buffkeyid_;
}

// -------------------------------------------------------------------

// AttachBattleUp

// required string battleId = 1;
inline bool AttachBattleUp::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttachBattleUp::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttachBattleUp::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttachBattleUp::clear_battleid() {
  if (battleid_ != &::google::protobuf::internal::kEmptyString) {
    battleid_->clear();
  }
  clear_has_battleid();
}
inline const ::std::string& AttachBattleUp::battleid() const {
  return *battleid_;
}
inline void AttachBattleUp::set_battleid(const ::std::string& value) {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  battleid_->assign(value);
}
inline void AttachBattleUp::set_battleid(const char* value) {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  battleid_->assign(value);
}
inline void AttachBattleUp::set_battleid(const char* value, size_t size) {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  battleid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AttachBattleUp::mutable_battleid() {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  return battleid_;
}
inline ::std::string* AttachBattleUp::release_battleid() {
  clear_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = battleid_;
    battleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AttachBattleUp::set_allocated_battleid(::std::string* battleid) {
  if (battleid_ != &::google::protobuf::internal::kEmptyString) {
    delete battleid_;
  }
  if (battleid) {
    set_has_battleid();
    battleid_ = battleid;
  } else {
    clear_has_battleid();
    battleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string userId = 2;
inline bool AttachBattleUp::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttachBattleUp::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttachBattleUp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttachBattleUp::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& AttachBattleUp::userid() const {
  return *userid_;
}
inline void AttachBattleUp::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void AttachBattleUp::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void AttachBattleUp::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AttachBattleUp::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* AttachBattleUp::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AttachBattleUp::set_allocated_userid(::std::string* userid) {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (userid) {
    set_has_userid();
    userid_ = userid;
  } else {
    clear_has_userid();
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AttachBattleDown

// required uint32 state = 1;
inline bool AttachBattleDown::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttachBattleDown::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttachBattleDown::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttachBattleDown::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 AttachBattleDown::state() const {
  return state_;
}
inline void AttachBattleDown::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// optional .SyncBattleDown syncBattleDown = 2;
inline bool AttachBattleDown::has_syncbattledown() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttachBattleDown::set_has_syncbattledown() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttachBattleDown::clear_has_syncbattledown() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttachBattleDown::clear_syncbattledown() {
  if (syncbattledown_ != NULL) syncbattledown_->::SyncBattleDown::Clear();
  clear_has_syncbattledown();
}
inline const ::SyncBattleDown& AttachBattleDown::syncbattledown() const {
  return syncbattledown_ != NULL ? *syncbattledown_ : *default_instance_->syncbattledown_;
}
inline ::SyncBattleDown* AttachBattleDown::mutable_syncbattledown() {
  set_has_syncbattledown();
  if (syncbattledown_ == NULL) syncbattledown_ = new ::SyncBattleDown;
  return syncbattledown_;
}
inline ::SyncBattleDown* AttachBattleDown::release_syncbattledown() {
  clear_has_syncbattledown();
  ::SyncBattleDown* temp = syncbattledown_;
  syncbattledown_ = NULL;
  return temp;
}
inline void AttachBattleDown::set_allocated_syncbattledown(::SyncBattleDown* syncbattledown) {
  delete syncbattledown_;
  syncbattledown_ = syncbattledown;
  if (syncbattledown) {
    set_has_syncbattledown();
  } else {
    clear_has_syncbattledown();
  }
}

// optional uint32 countdown = 3;
inline bool AttachBattleDown::has_countdown() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttachBattleDown::set_has_countdown() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttachBattleDown::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttachBattleDown::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 AttachBattleDown::countdown() const {
  return countdown_;
}
inline void AttachBattleDown::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
}

// -------------------------------------------------------------------

// SyncBattleUp

// required string battleId = 1;
inline bool SyncBattleUp::has_battleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncBattleUp::set_has_battleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncBattleUp::clear_has_battleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncBattleUp::clear_battleid() {
  if (battleid_ != &::google::protobuf::internal::kEmptyString) {
    battleid_->clear();
  }
  clear_has_battleid();
}
inline const ::std::string& SyncBattleUp::battleid() const {
  return *battleid_;
}
inline void SyncBattleUp::set_battleid(const ::std::string& value) {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  battleid_->assign(value);
}
inline void SyncBattleUp::set_battleid(const char* value) {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  battleid_->assign(value);
}
inline void SyncBattleUp::set_battleid(const char* value, size_t size) {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  battleid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SyncBattleUp::mutable_battleid() {
  set_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    battleid_ = new ::std::string;
  }
  return battleid_;
}
inline ::std::string* SyncBattleUp::release_battleid() {
  clear_has_battleid();
  if (battleid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = battleid_;
    battleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SyncBattleUp::set_allocated_battleid(::std::string* battleid) {
  if (battleid_ != &::google::protobuf::internal::kEmptyString) {
    delete battleid_;
  }
  if (battleid) {
    set_has_battleid();
    battleid_ = battleid;
  } else {
    clear_has_battleid();
    battleid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string userId = 2;
inline bool SyncBattleUp::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncBattleUp::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncBattleUp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncBattleUp::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& SyncBattleUp::userid() const {
  return *userid_;
}
inline void SyncBattleUp::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void SyncBattleUp::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void SyncBattleUp::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SyncBattleUp::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* SyncBattleUp::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SyncBattleUp::set_allocated_userid(::std::string* userid) {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (userid) {
    set_has_userid();
    userid_ = userid;
  } else {
    clear_has_userid();
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SyncBattleDown

// optional .BattleBean battleBean = 1;
inline bool SyncBattleDown::has_battlebean() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncBattleDown::set_has_battlebean() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncBattleDown::clear_has_battlebean() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncBattleDown::clear_battlebean() {
  if (battlebean_ != NULL) battlebean_->::BattleBean::Clear();
  clear_has_battlebean();
}
inline const ::BattleBean& SyncBattleDown::battlebean() const {
  return battlebean_ != NULL ? *battlebean_ : *default_instance_->battlebean_;
}
inline ::BattleBean* SyncBattleDown::mutable_battlebean() {
  set_has_battlebean();
  if (battlebean_ == NULL) battlebean_ = new ::BattleBean;
  return battlebean_;
}
inline ::BattleBean* SyncBattleDown::release_battlebean() {
  clear_has_battlebean();
  ::BattleBean* temp = battlebean_;
  battlebean_ = NULL;
  return temp;
}
inline void SyncBattleDown::set_allocated_battlebean(::BattleBean* battlebean) {
  delete battlebean_;
  battlebean_ = battlebean;
  if (battlebean) {
    set_has_battlebean();
  } else {
    clear_has_battlebean();
  }
}

// repeated .HeroBean heroBeans = 2;
inline int SyncBattleDown::herobeans_size() const {
  return herobeans_.size();
}
inline void SyncBattleDown::clear_herobeans() {
  herobeans_.Clear();
}
inline const ::HeroBean& SyncBattleDown::herobeans(int index) const {
  return herobeans_.Get(index);
}
inline ::HeroBean* SyncBattleDown::mutable_herobeans(int index) {
  return herobeans_.Mutable(index);
}
inline ::HeroBean* SyncBattleDown::add_herobeans() {
  return herobeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HeroBean >&
SyncBattleDown::herobeans() const {
  return herobeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::HeroBean >*
SyncBattleDown::mutable_herobeans() {
  return &herobeans_;
}

// repeated .PetBean petBeans = 3;
inline int SyncBattleDown::petbeans_size() const {
  return petbeans_.size();
}
inline void SyncBattleDown::clear_petbeans() {
  petbeans_.Clear();
}
inline const ::PetBean& SyncBattleDown::petbeans(int index) const {
  return petbeans_.Get(index);
}
inline ::PetBean* SyncBattleDown::mutable_petbeans(int index) {
  return petbeans_.Mutable(index);
}
inline ::PetBean* SyncBattleDown::add_petbeans() {
  return petbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PetBean >&
SyncBattleDown::petbeans() const {
  return petbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::PetBean >*
SyncBattleDown::mutable_petbeans() {
  return &petbeans_;
}

// repeated .BulletBean bulletBeans = 4;
inline int SyncBattleDown::bulletbeans_size() const {
  return bulletbeans_.size();
}
inline void SyncBattleDown::clear_bulletbeans() {
  bulletbeans_.Clear();
}
inline const ::BulletBean& SyncBattleDown::bulletbeans(int index) const {
  return bulletbeans_.Get(index);
}
inline ::BulletBean* SyncBattleDown::mutable_bulletbeans(int index) {
  return bulletbeans_.Mutable(index);
}
inline ::BulletBean* SyncBattleDown::add_bulletbeans() {
  return bulletbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BulletBean >&
SyncBattleDown::bulletbeans() const {
  return bulletbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::BulletBean >*
SyncBattleDown::mutable_bulletbeans() {
  return &bulletbeans_;
}

// repeated .TrapBean trapBeans = 5;
inline int SyncBattleDown::trapbeans_size() const {
  return trapbeans_.size();
}
inline void SyncBattleDown::clear_trapbeans() {
  trapbeans_.Clear();
}
inline const ::TrapBean& SyncBattleDown::trapbeans(int index) const {
  return trapbeans_.Get(index);
}
inline ::TrapBean* SyncBattleDown::mutable_trapbeans(int index) {
  return trapbeans_.Mutable(index);
}
inline ::TrapBean* SyncBattleDown::add_trapbeans() {
  return trapbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TrapBean >&
SyncBattleDown::trapbeans() const {
  return trapbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::TrapBean >*
SyncBattleDown::mutable_trapbeans() {
  return &trapbeans_;
}

// repeated .PlayerBean playerBeans = 6;
inline int SyncBattleDown::playerbeans_size() const {
  return playerbeans_.size();
}
inline void SyncBattleDown::clear_playerbeans() {
  playerbeans_.Clear();
}
inline const ::PlayerBean& SyncBattleDown::playerbeans(int index) const {
  return playerbeans_.Get(index);
}
inline ::PlayerBean* SyncBattleDown::mutable_playerbeans(int index) {
  return playerbeans_.Mutable(index);
}
inline ::PlayerBean* SyncBattleDown::add_playerbeans() {
  return playerbeans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerBean >&
SyncBattleDown::playerbeans() const {
  return playerbeans_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerBean >*
SyncBattleDown::mutable_playerbeans() {
  return &playerbeans_;
}

// -------------------------------------------------------------------

// BattleStepDown

// required uint32 step = 1;
inline bool BattleStepDown::has_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleStepDown::set_has_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleStepDown::clear_has_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleStepDown::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 BattleStepDown::step() const {
  return step_;
}
inline void BattleStepDown::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
}

// -------------------------------------------------------------------

// MagicActionUp

// required uint32 performerId = 1;
inline bool MagicActionUp::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicActionUp::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicActionUp::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicActionUp::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 MagicActionUp::performerid() const {
  return performerid_;
}
inline void MagicActionUp::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required uint32 skillId = 2;
inline bool MagicActionUp::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MagicActionUp::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MagicActionUp::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MagicActionUp::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 MagicActionUp::skillid() const {
  return skillid_;
}
inline void MagicActionUp::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required .ActionTargetBean actionTarget = 3;
inline bool MagicActionUp::has_actiontarget() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MagicActionUp::set_has_actiontarget() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MagicActionUp::clear_has_actiontarget() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MagicActionUp::clear_actiontarget() {
  if (actiontarget_ != NULL) actiontarget_->::ActionTargetBean::Clear();
  clear_has_actiontarget();
}
inline const ::ActionTargetBean& MagicActionUp::actiontarget() const {
  return actiontarget_ != NULL ? *actiontarget_ : *default_instance_->actiontarget_;
}
inline ::ActionTargetBean* MagicActionUp::mutable_actiontarget() {
  set_has_actiontarget();
  if (actiontarget_ == NULL) actiontarget_ = new ::ActionTargetBean;
  return actiontarget_;
}
inline ::ActionTargetBean* MagicActionUp::release_actiontarget() {
  clear_has_actiontarget();
  ::ActionTargetBean* temp = actiontarget_;
  actiontarget_ = NULL;
  return temp;
}
inline void MagicActionUp::set_allocated_actiontarget(::ActionTargetBean* actiontarget) {
  delete actiontarget_;
  actiontarget_ = actiontarget;
  if (actiontarget) {
    set_has_actiontarget();
  } else {
    clear_has_actiontarget();
  }
}

// -------------------------------------------------------------------

// MagicActionDown

// required uint32 performerId = 1;
inline bool MagicActionDown::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MagicActionDown::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MagicActionDown::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MagicActionDown::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 MagicActionDown::performerid() const {
  return performerid_;
}
inline void MagicActionDown::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required uint32 skillId = 2;
inline bool MagicActionDown::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MagicActionDown::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MagicActionDown::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MagicActionDown::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 MagicActionDown::skillid() const {
  return skillid_;
}
inline void MagicActionDown::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional .ActionTargetBean actionTarget = 3;
inline bool MagicActionDown::has_actiontarget() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MagicActionDown::set_has_actiontarget() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MagicActionDown::clear_has_actiontarget() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MagicActionDown::clear_actiontarget() {
  if (actiontarget_ != NULL) actiontarget_->::ActionTargetBean::Clear();
  clear_has_actiontarget();
}
inline const ::ActionTargetBean& MagicActionDown::actiontarget() const {
  return actiontarget_ != NULL ? *actiontarget_ : *default_instance_->actiontarget_;
}
inline ::ActionTargetBean* MagicActionDown::mutable_actiontarget() {
  set_has_actiontarget();
  if (actiontarget_ == NULL) actiontarget_ = new ::ActionTargetBean;
  return actiontarget_;
}
inline ::ActionTargetBean* MagicActionDown::release_actiontarget() {
  clear_has_actiontarget();
  ::ActionTargetBean* temp = actiontarget_;
  actiontarget_ = NULL;
  return temp;
}
inline void MagicActionDown::set_allocated_actiontarget(::ActionTargetBean* actiontarget) {
  delete actiontarget_;
  actiontarget_ = actiontarget;
  if (actiontarget) {
    set_has_actiontarget();
  } else {
    clear_has_actiontarget();
  }
}

// optional uint32 state = 4;
inline bool MagicActionDown::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MagicActionDown::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MagicActionDown::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MagicActionDown::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 MagicActionDown::state() const {
  return state_;
}
inline void MagicActionDown::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// optional .MagicResaultBean magicResaultBean = 5;
inline bool MagicActionDown::has_magicresaultbean() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MagicActionDown::set_has_magicresaultbean() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MagicActionDown::clear_has_magicresaultbean() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MagicActionDown::clear_magicresaultbean() {
  if (magicresaultbean_ != NULL) magicresaultbean_->::MagicResaultBean::Clear();
  clear_has_magicresaultbean();
}
inline const ::MagicResaultBean& MagicActionDown::magicresaultbean() const {
  return magicresaultbean_ != NULL ? *magicresaultbean_ : *default_instance_->magicresaultbean_;
}
inline ::MagicResaultBean* MagicActionDown::mutable_magicresaultbean() {
  set_has_magicresaultbean();
  if (magicresaultbean_ == NULL) magicresaultbean_ = new ::MagicResaultBean;
  return magicresaultbean_;
}
inline ::MagicResaultBean* MagicActionDown::release_magicresaultbean() {
  clear_has_magicresaultbean();
  ::MagicResaultBean* temp = magicresaultbean_;
  magicresaultbean_ = NULL;
  return temp;
}
inline void MagicActionDown::set_allocated_magicresaultbean(::MagicResaultBean* magicresaultbean) {
  delete magicresaultbean_;
  magicresaultbean_ = magicresaultbean;
  if (magicresaultbean) {
    set_has_magicresaultbean();
  } else {
    clear_has_magicresaultbean();
  }
}

// required uint32 source = 6;
inline bool MagicActionDown::has_source() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MagicActionDown::set_has_source() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MagicActionDown::clear_has_source() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MagicActionDown::clear_source() {
  source_ = 0u;
  clear_has_source();
}
inline ::google::protobuf::uint32 MagicActionDown::source() const {
  return source_;
}
inline void MagicActionDown::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
}

// optional uint32 mstate = 7;
inline bool MagicActionDown::has_mstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MagicActionDown::set_has_mstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MagicActionDown::clear_has_mstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MagicActionDown::clear_mstate() {
  mstate_ = 0u;
  clear_has_mstate();
}
inline ::google::protobuf::uint32 MagicActionDown::mstate() const {
  return mstate_;
}
inline void MagicActionDown::set_mstate(::google::protobuf::uint32 value) {
  set_has_mstate();
  mstate_ = value;
}

// optional uint32 errorType = 8;
inline bool MagicActionDown::has_errortype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MagicActionDown::set_has_errortype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MagicActionDown::clear_has_errortype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MagicActionDown::clear_errortype() {
  errortype_ = 0u;
  clear_has_errortype();
}
inline ::google::protobuf::uint32 MagicActionDown::errortype() const {
  return errortype_;
}
inline void MagicActionDown::set_errortype(::google::protobuf::uint32 value) {
  set_has_errortype();
  errortype_ = value;
}

// optional uint32 errorValue = 9;
inline bool MagicActionDown::has_errorvalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MagicActionDown::set_has_errorvalue() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MagicActionDown::clear_has_errorvalue() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MagicActionDown::clear_errorvalue() {
  errorvalue_ = 0u;
  clear_has_errorvalue();
}
inline ::google::protobuf::uint32 MagicActionDown::errorvalue() const {
  return errorvalue_;
}
inline void MagicActionDown::set_errorvalue(::google::protobuf::uint32 value) {
  set_has_errorvalue();
  errorvalue_ = value;
}

// -------------------------------------------------------------------

// MoveActionUp

// required uint32 performerId = 1;
inline bool MoveActionUp::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveActionUp::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveActionUp::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveActionUp::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 MoveActionUp::performerid() const {
  return performerid_;
}
inline void MoveActionUp::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required .ActionTargetBean actionTarget = 2;
inline bool MoveActionUp::has_actiontarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveActionUp::set_has_actiontarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveActionUp::clear_has_actiontarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveActionUp::clear_actiontarget() {
  if (actiontarget_ != NULL) actiontarget_->::ActionTargetBean::Clear();
  clear_has_actiontarget();
}
inline const ::ActionTargetBean& MoveActionUp::actiontarget() const {
  return actiontarget_ != NULL ? *actiontarget_ : *default_instance_->actiontarget_;
}
inline ::ActionTargetBean* MoveActionUp::mutable_actiontarget() {
  set_has_actiontarget();
  if (actiontarget_ == NULL) actiontarget_ = new ::ActionTargetBean;
  return actiontarget_;
}
inline ::ActionTargetBean* MoveActionUp::release_actiontarget() {
  clear_has_actiontarget();
  ::ActionTargetBean* temp = actiontarget_;
  actiontarget_ = NULL;
  return temp;
}
inline void MoveActionUp::set_allocated_actiontarget(::ActionTargetBean* actiontarget) {
  delete actiontarget_;
  actiontarget_ = actiontarget;
  if (actiontarget) {
    set_has_actiontarget();
  } else {
    clear_has_actiontarget();
  }
}

// optional bool isAdjust = 3;
inline bool MoveActionUp::has_isadjust() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveActionUp::set_has_isadjust() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveActionUp::clear_has_isadjust() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveActionUp::clear_isadjust() {
  isadjust_ = false;
  clear_has_isadjust();
}
inline bool MoveActionUp::isadjust() const {
  return isadjust_;
}
inline void MoveActionUp::set_isadjust(bool value) {
  set_has_isadjust();
  isadjust_ = value;
}

// -------------------------------------------------------------------

// MoveActionDown

// required uint32 performerId = 1;
inline bool MoveActionDown::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveActionDown::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveActionDown::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveActionDown::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 MoveActionDown::performerid() const {
  return performerid_;
}
inline void MoveActionDown::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required .ActionTargetBean actionTarget = 2;
inline bool MoveActionDown::has_actiontarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveActionDown::set_has_actiontarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveActionDown::clear_has_actiontarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveActionDown::clear_actiontarget() {
  if (actiontarget_ != NULL) actiontarget_->::ActionTargetBean::Clear();
  clear_has_actiontarget();
}
inline const ::ActionTargetBean& MoveActionDown::actiontarget() const {
  return actiontarget_ != NULL ? *actiontarget_ : *default_instance_->actiontarget_;
}
inline ::ActionTargetBean* MoveActionDown::mutable_actiontarget() {
  set_has_actiontarget();
  if (actiontarget_ == NULL) actiontarget_ = new ::ActionTargetBean;
  return actiontarget_;
}
inline ::ActionTargetBean* MoveActionDown::release_actiontarget() {
  clear_has_actiontarget();
  ::ActionTargetBean* temp = actiontarget_;
  actiontarget_ = NULL;
  return temp;
}
inline void MoveActionDown::set_allocated_actiontarget(::ActionTargetBean* actiontarget) {
  delete actiontarget_;
  actiontarget_ = actiontarget;
  if (actiontarget) {
    set_has_actiontarget();
  } else {
    clear_has_actiontarget();
  }
}

// required uint32 state = 3;
inline bool MoveActionDown::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveActionDown::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveActionDown::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveActionDown::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 MoveActionDown::state() const {
  return state_;
}
inline void MoveActionDown::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// required uint32 delayTime = 4;
inline bool MoveActionDown::has_delaytime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoveActionDown::set_has_delaytime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoveActionDown::clear_has_delaytime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoveActionDown::clear_delaytime() {
  delaytime_ = 0u;
  clear_has_delaytime();
}
inline ::google::protobuf::uint32 MoveActionDown::delaytime() const {
  return delaytime_;
}
inline void MoveActionDown::set_delaytime(::google::protobuf::uint32 value) {
  set_has_delaytime();
  delaytime_ = value;
}

// required uint32 source = 6;
inline bool MoveActionDown::has_source() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MoveActionDown::set_has_source() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MoveActionDown::clear_has_source() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MoveActionDown::clear_source() {
  source_ = 0u;
  clear_has_source();
}
inline ::google::protobuf::uint32 MoveActionDown::source() const {
  return source_;
}
inline void MoveActionDown::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
}

// optional uint32 mstate = 7;
inline bool MoveActionDown::has_mstate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MoveActionDown::set_has_mstate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MoveActionDown::clear_has_mstate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MoveActionDown::clear_mstate() {
  mstate_ = 0u;
  clear_has_mstate();
}
inline ::google::protobuf::uint32 MoveActionDown::mstate() const {
  return mstate_;
}
inline void MoveActionDown::set_mstate(::google::protobuf::uint32 value) {
  set_has_mstate();
  mstate_ = value;
}

// optional uint32 type = 8;
inline bool MoveActionDown::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MoveActionDown::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MoveActionDown::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MoveActionDown::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MoveActionDown::type() const {
  return type_;
}
inline void MoveActionDown::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional bool isAdjust = 9;
inline bool MoveActionDown::has_isadjust() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MoveActionDown::set_has_isadjust() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MoveActionDown::clear_has_isadjust() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MoveActionDown::clear_isadjust() {
  isadjust_ = false;
  clear_has_isadjust();
}
inline bool MoveActionDown::isadjust() const {
  return isadjust_;
}
inline void MoveActionDown::set_isadjust(bool value) {
  set_has_isadjust();
  isadjust_ = value;
}

// -------------------------------------------------------------------

// RemoveDown

// required uint32 type = 1;
inline bool RemoveDown::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveDown::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveDown::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveDown::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RemoveDown::type() const {
  return type_;
}
inline void RemoveDown::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 id = 2;
inline bool RemoveDown::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveDown::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveDown::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveDown::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RemoveDown::id() const {
  return id_;
}
inline void RemoveDown::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional .MagicResaultBean magicResaultBean = 3;
inline bool RemoveDown::has_magicresaultbean() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveDown::set_has_magicresaultbean() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveDown::clear_has_magicresaultbean() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveDown::clear_magicresaultbean() {
  if (magicresaultbean_ != NULL) magicresaultbean_->::MagicResaultBean::Clear();
  clear_has_magicresaultbean();
}
inline const ::MagicResaultBean& RemoveDown::magicresaultbean() const {
  return magicresaultbean_ != NULL ? *magicresaultbean_ : *default_instance_->magicresaultbean_;
}
inline ::MagicResaultBean* RemoveDown::mutable_magicresaultbean() {
  set_has_magicresaultbean();
  if (magicresaultbean_ == NULL) magicresaultbean_ = new ::MagicResaultBean;
  return magicresaultbean_;
}
inline ::MagicResaultBean* RemoveDown::release_magicresaultbean() {
  clear_has_magicresaultbean();
  ::MagicResaultBean* temp = magicresaultbean_;
  magicresaultbean_ = NULL;
  return temp;
}
inline void RemoveDown::set_allocated_magicresaultbean(::MagicResaultBean* magicresaultbean) {
  delete magicresaultbean_;
  magicresaultbean_ = magicresaultbean;
  if (magicresaultbean) {
    set_has_magicresaultbean();
  } else {
    clear_has_magicresaultbean();
  }
}

// -------------------------------------------------------------------

// IdleActionUp

// required uint32 performerId = 1;
inline bool IdleActionUp::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IdleActionUp::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IdleActionUp::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IdleActionUp::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 IdleActionUp::performerid() const {
  return performerid_;
}
inline void IdleActionUp::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// -------------------------------------------------------------------

// IdleActionDown

// required uint32 performerId = 1;
inline bool IdleActionDown::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IdleActionDown::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IdleActionDown::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IdleActionDown::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 IdleActionDown::performerid() const {
  return performerid_;
}
inline void IdleActionDown::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required .CoordinateBean position = 2;
inline bool IdleActionDown::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IdleActionDown::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IdleActionDown::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IdleActionDown::clear_position() {
  if (position_ != NULL) position_->::CoordinateBean::Clear();
  clear_has_position();
}
inline const ::CoordinateBean& IdleActionDown::position() const {
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::CoordinateBean* IdleActionDown::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::CoordinateBean;
  return position_;
}
inline ::CoordinateBean* IdleActionDown::release_position() {
  clear_has_position();
  ::CoordinateBean* temp = position_;
  position_ = NULL;
  return temp;
}
inline void IdleActionDown::set_allocated_position(::CoordinateBean* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
}

// -------------------------------------------------------------------

// NetDelayCheckUp

// required uint32 step = 1;
inline bool NetDelayCheckUp::has_step() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetDelayCheckUp::set_has_step() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetDelayCheckUp::clear_has_step() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetDelayCheckUp::clear_step() {
  step_ = 0u;
  clear_has_step();
}
inline ::google::protobuf::uint32 NetDelayCheckUp::step() const {
  return step_;
}
inline void NetDelayCheckUp::set_step(::google::protobuf::uint32 value) {
  set_has_step();
  step_ = value;
}

// required uint64 cTime = 2;
inline bool NetDelayCheckUp::has_ctime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetDelayCheckUp::set_has_ctime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetDelayCheckUp::clear_has_ctime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetDelayCheckUp::clear_ctime() {
  ctime_ = GOOGLE_ULONGLONG(0);
  clear_has_ctime();
}
inline ::google::protobuf::uint64 NetDelayCheckUp::ctime() const {
  return ctime_;
}
inline void NetDelayCheckUp::set_ctime(::google::protobuf::uint64 value) {
  set_has_ctime();
  ctime_ = value;
}

// optional uint32 version = 3;
inline bool NetDelayCheckUp::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NetDelayCheckUp::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NetDelayCheckUp::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NetDelayCheckUp::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 NetDelayCheckUp::version() const {
  return version_;
}
inline void NetDelayCheckUp::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// NetDelayCheckDown

// required uint32 version = 1;
inline bool NetDelayCheckDown::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetDelayCheckDown::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetDelayCheckDown::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetDelayCheckDown::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 NetDelayCheckDown::version() const {
  return version_;
}
inline void NetDelayCheckDown::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// required uint64 cTime = 2;
inline bool NetDelayCheckDown::has_ctime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetDelayCheckDown::set_has_ctime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetDelayCheckDown::clear_has_ctime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetDelayCheckDown::clear_ctime() {
  ctime_ = GOOGLE_ULONGLONG(0);
  clear_has_ctime();
}
inline ::google::protobuf::uint64 NetDelayCheckDown::ctime() const {
  return ctime_;
}
inline void NetDelayCheckDown::set_ctime(::google::protobuf::uint64 value) {
  set_has_ctime();
  ctime_ = value;
}

// -------------------------------------------------------------------

// DeadDown

// required uint32 performerId = 1;
inline bool DeadDown::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeadDown::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeadDown::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeadDown::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 DeadDown::performerid() const {
  return performerid_;
}
inline void DeadDown::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// -------------------------------------------------------------------

// TrapTriggerDown

// required uint32 performerId = 1;
inline bool TrapTriggerDown::has_performerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrapTriggerDown::set_has_performerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrapTriggerDown::clear_has_performerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrapTriggerDown::clear_performerid() {
  performerid_ = 0u;
  clear_has_performerid();
}
inline ::google::protobuf::uint32 TrapTriggerDown::performerid() const {
  return performerid_;
}
inline void TrapTriggerDown::set_performerid(::google::protobuf::uint32 value) {
  set_has_performerid();
  performerid_ = value;
}

// required uint32 keyId = 2;
inline bool TrapTriggerDown::has_keyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrapTriggerDown::set_has_keyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrapTriggerDown::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrapTriggerDown::clear_keyid() {
  keyid_ = 0u;
  clear_has_keyid();
}
inline ::google::protobuf::uint32 TrapTriggerDown::keyid() const {
  return keyid_;
}
inline void TrapTriggerDown::set_keyid(::google::protobuf::uint32 value) {
  set_has_keyid();
  keyid_ = value;
}

// repeated .TrapTriggerBean trapTriggerBean = 3;
inline int TrapTriggerDown::traptriggerbean_size() const {
  return traptriggerbean_.size();
}
inline void TrapTriggerDown::clear_traptriggerbean() {
  traptriggerbean_.Clear();
}
inline const ::TrapTriggerBean& TrapTriggerDown::traptriggerbean(int index) const {
  return traptriggerbean_.Get(index);
}
inline ::TrapTriggerBean* TrapTriggerDown::mutable_traptriggerbean(int index) {
  return traptriggerbean_.Mutable(index);
}
inline ::TrapTriggerBean* TrapTriggerDown::add_traptriggerbean() {
  return traptriggerbean_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TrapTriggerBean >&
TrapTriggerDown::traptriggerbean() const {
  return traptriggerbean_;
}
inline ::google::protobuf::RepeatedPtrField< ::TrapTriggerBean >*
TrapTriggerDown::mutable_traptriggerbean() {
  return &traptriggerbean_;
}

// -------------------------------------------------------------------

// BattleOverDown

// required uint32 failureTroopType = 1;
inline bool BattleOverDown::has_failuretrooptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleOverDown::set_has_failuretrooptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleOverDown::clear_has_failuretrooptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleOverDown::clear_failuretrooptype() {
  failuretrooptype_ = 0u;
  clear_has_failuretrooptype();
}
inline ::google::protobuf::uint32 BattleOverDown::failuretrooptype() const {
  return failuretrooptype_;
}
inline void BattleOverDown::set_failuretrooptype(::google::protobuf::uint32 value) {
  set_has_failuretrooptype();
  failuretrooptype_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BattleCommondIdEnum>() {
  return ::BattleCommondIdEnum_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_2100100_5fBattleMessage_2eproto__INCLUDED
